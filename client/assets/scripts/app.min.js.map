{"version":3,"sources":["contacts/_module.js","contacts/company/transactions/controller.js","app.min.js","contacts/company/persons/controller.js","contacts/company/overview/controller.js","contacts/company/info/controller.js","contacts/company/files/controller.js","_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/join.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/constants/topmenu.js","app.js","_common/configs/rootscope.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","settings/changepassword/controller.js","plists/_module.js","plists/overview/controller.js","plists/form/controller.js","lotteries/_module.js","lotteries/overview/controller.js","lotteries/lottery/controller.js","lotteries/init/controller.js","contacts/_common/routes.js","contacts/_common/modals.js","contacts/topmenu/controller.js","contacts/overview/controller.js","contacts/contact/controller.js","contacts/company/controller.js","contacts/addperson/controller.js","contacts/addcompany/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","static/_module.js","static/routes.js","settings/service.js","settings/routes.js","settings/modals.js","plists/service.js","plists/routes.js","plists/modals.js","lotteries/service.js","lotteries/routes.js","lotteries/modals.js","dashboard/_module.js","dashboard/routes.js","dashboard/controller.js","auth/routes.js","auth/interceptor.js","auth/constants.js","run.js","config.js"],"names":["angular","module","ContactsCompanyTransactionsController","$stateParams","Transaction","activate","_loadTransactions","then","_reloadChart","vm","loading","find","filter","where","companyId","id","order","$promise","data","_total","_","each","transaction","amount","total","Transactions","groupby","Chart","labels","grouped_transactions","groupBy","moment","date","format","transactions","keydate","_date_total","reduce","Math","round","push","this","$inject","controller","ContactsCompanyPersonsController","CompanyData","Persons","persons","ContactsCompanyOverviewController","ContactsCompanyInfoController","ContactsCompanyFilesController","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","configureStates","states","otherwisePath","forEach","state","config","controllerAs","extend","views","item","hasOtherwise","otherwise","getStates","get","service","$get","provider","modalHelperProvider","modalHelper","$uibModal","$q","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","open","result","configHelperProvider","ConfigHelper","notifyConfig","configName","message","console","log","numberFixedLen","a","b","slice","join","array","separator","fromNow","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","parseFloat","isFinite","units","number","floor","pow","toFixed","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","add","on","$apply","v","val","$","$setValidity","directive","ngPrint","element","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","body","errSrc","ngSrc","$set","bind","remove","src","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","constant","name","subtree","appRun","$rootScope","APP","$on","event","toState","title","description","run","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","useXDomain","headers","common","SettingsController","SettingsService","SettingsModals","ChangePassword","go","ref","ChangePasswordController","$modalInstance","User","toaster","Save","prototype$updateAttributes","getCurrentId","password","Password","user","pop","close","PlistsController","PlistsService","PlistsModals","LoadPlists","params","GetPlists","plists","Plists","AddPlist","PlistForm","ViewPlist","ID","PlistFormController","Plist","GetPlist","SavePlist","Delete","DeletePlist","Participants","LotteriesController","LotteriesService","LotteriesModals","LoadLotteries","GetLotteries","Lotteries","AddLottery","LotteryInit","LotteryController","LoadLottery","GetLottery","Lottery","DeleteLottery","LotteryInitController","SaveLottery","resp","Name","Date","getTime","RoutesConfig","configHelper","routerHelper","abstract","url","template","templateUrl","ContactsModals","getModals","size","factory","ContactsTopMenuController","AddCompany","AddPerson","AddEvent","ExportImport","ContactsOverviewController","Company","_getAccessed","loading_accessed","limit","_companies","accessed","ContactsContactController","ContactsCompanyController","findById","Tabs","heading","icon","route","class","ContactsAddPersonController","loadCompanies","Companies","ContactsAddCompanyController","create","_company","AuthLoginController","LoginMessages","_signMessage","toUpperCase","SignIn","Alert","login","copy","credentials","rejection","error","code","isAuthenticated","$timeout","","getCurrent","_user","username","menu-contacts@app","libs","href","$resource","GetSettings","Service","chain","rows","map","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","plist","CreatedAt","updateOrCreate","deleteById","backdrop","lottery","shuffle","DashboardController","news","content","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","status","AuthInterceptorConfig","interceptors","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","evt","to","redirectTo","version","repository","author","email","client","database","roles","users","role"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', []);\r\n})();\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\n\n  /* @ngInject */\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\n\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadTransactions()\n        .then(function() {\n          _reloadChart();\n        });\n    }\n\n    function _loadTransactions() {\n      vm.loading = true;\n      return Transaction\n        .find({\n          filter: {\n            where: {\n              companyId: $stateParams.id,\n            },\n            order: \"date ASC\",\n          }\n        })\n        .$promise\n        .then(function(data) {\n          var _total = 0;\n          _.each(data, function(transaction) {\n            _total += transaction.amount;\n            transaction.total = _total;\n          });\n          vm.Transactions = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n    function _reloadChart(groupby) {\n\n      vm.Chart = {\n        labels: [],\n        data: [\n          []\n        ],\n      };\n\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\n      });\n\n      _.each(grouped_transactions, function(transactions, keydate) {\n\n        var _date_total = _.reduce(transactions, function(total, transaction) {\n          return Math.round(transaction.amount + total);\n        }, 0);\n        vm.Chart.labels.push(keydate);\n        vm.Chart.data[0].push(_date_total);\n      });\n      \n    }\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', []);\r\n})();\r\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyTransactionsController.$inject = [\"$stateParams\", \"Transaction\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\n\n  /* @ngInject */\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\n\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadTransactions()\n        .then(function() {\n          _reloadChart();\n        });\n    }\n\n    function _loadTransactions() {\n      vm.loading = true;\n      return Transaction\n        .find({\n          filter: {\n            where: {\n              companyId: $stateParams.id,\n            },\n            order: \"date ASC\",\n          }\n        })\n        .$promise\n        .then(function(data) {\n          var _total = 0;\n          _.each(data, function(transaction) {\n            _total += transaction.amount;\n            transaction.total = _total;\n          });\n          vm.Transactions = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n    function _reloadChart(groupby) {\n\n      vm.Chart = {\n        labels: [],\n        data: [\n          []\n        ],\n      };\n\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\n      });\n\n      _.each(grouped_transactions, function(transactions, keydate) {\n\n        var _date_total = _.reduce(transactions, function(total, transaction) {\n          return Math.round(transaction.amount + total);\n        }, 0);\n        vm.Chart.labels.push(keydate);\n        vm.Chart.data[0].push(_date_total);\n      });\n      \n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyPersonsController.$inject = [\"CompanyData\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\n\n  /* @ngInject */\n  function ContactsCompanyPersonsController(CompanyData) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.Persons = CompanyData.persons;\n    }\n\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyInfoController\", ContactsCompanyInfoController);\n\n  /* @ngInject */\n  function ContactsCompanyInfoController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyFilesController.$inject = [\"$stateParams\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  routerHelperProvider.$inject = [\"$locationProvider\", \"$stateProvider\", \"$urlRouterProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .provider('configHelper', configHelperProvider);\n\n  /* @ngInject */\n  function configHelperProvider() {\n    /* jshint validthis:true */\n    this.$get = ConfigHelper;\n\n    // $locationProvider.html5Mode(true);\n\n    ConfigHelper.$inject = [];\n\n    function ConfigHelper() {\n\n      var service = {\n        notifyConfig: notifyConfig\n      };\n\n      return service;\n\n      //function notifyConfig() {}\n      function notifyConfig(configName, message) {\n        message = message || {};\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\n      }\n\n    }\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('numberFixedLen', numberFixedLen)\n\n  /* @ngInject */\n  function numberFixedLen() {\n    return function(a, b) {\n      return (1e4 + a + \"\").slice(-b)\n    }\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('join', join)\n\n  /* @ngInject */\n  function join() {\n    return function(array, separator) {\n      if (!array) {\n        return '';\n      }\n      if (!separator) {\n        separator = ', ';\n      }\n      return array.join(separator);\n    };\n  }\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fromNow', fromNow)\n\n  /* @ngInject */\n  function fromNow() {\n    return function(date) {\n      return moment(date).fromNow();\n    }\n  }\n  \n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fileicon', fileicon)\n\n  /* @ngInject */\n  function fileicon() {\n    var _icons = {\n      \"application/pdf\": \"fa-file-pdf-o\",\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\n      \"application/x-msword\": \"fa-file-word-o\",\n      \"application/x-msexcel\": \"fa-file-excel-o\",\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\n      \"image/gif\": \"fa-file-image-o\",\n      \"image/png\": \"fa-file-image-o\",\n      \"image/tiff\": \"fa-file-image-o\",\n      \"image/jpeg\": \"fa-file-image-o\",\n      \"video/avi\": \"fa-file-video-o\",\n      \"video/mpeg\": \"fa-file-video-o\",\n      \"video/msvideo\": \"fa-file-video-o\",\n      \"video/quicktime\": \"fa-file-video-o\",\n      \"application/zip\": \"fa-file-zip-o\"\n    };\n    return function(a) {\n      return _icons[a] || \"fa-file-o\";\n    }\n  }\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('bytes', bytes)\n\n  /* @ngInject */\n  function bytes() {\n    return function(bytes, precision) {\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\n      if (typeof precision === 'undefined') precision = 1;\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\n    }\n  }\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .constant(\"topmenu\", [{\n      name: \"States\",\n      link: \"#\",\n      subtree: [{\n        name: \"state 1\",\n        link: \"state1\"\n      }, {\n        name: \"state 2\",\n        link: \"state2\"\n      }]\n    }])\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'chart.js',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    // 'app.plists',\r\n    // 'app.settings',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  SettingsController.$inject = [\"$state\", \"SettingsService\", \"SettingsModals\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ChangePasswordController.$inject = [\"$modalInstance\", \"ModalParams\", \"User\", \"toaster\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($modalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  PlistsController.$inject = [\"PlistsService\", \"PlistsModals\"];\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  PlistFormController.$inject = [\"$modalInstance\", \"ModalParams\", \"PlistsService\"];\r\n  angular\r\n    .module('app.plists')\r\n    .controller(\"PlistFormController\", PlistFormController);\r\n\r\n  /* @ngInject */\r\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Plist = {\r\n      id: ModalParams.ID || null,\r\n      Participants: [],\r\n    };\r\n\r\n    vm.Save = Save;\r\n    vm.Delete = Delete;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (vm.Plist.id) {\r\n        vm.loading = true;\r\n        PlistsService\r\n          .GetPlist(vm.Plist.id)\r\n          .then(function(data) {\r\n            vm.Plist = data;\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      }\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .SavePlist(vm.Plist)\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n    function Delete() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .DeletePlist(vm.Plist.id)\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  LotteriesController.$inject = [\"$state\", \"LotteriesService\", \"LotteriesModals\"];\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController($state, LotteriesService, LotteriesModals) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries();\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  LotteryController.$inject = [\"$state\", \"LotteriesService\", \"$stateParams\"];\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController($state, LotteriesService, $stateParams) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function DeleteLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .DeleteLottery(vm.Lottery.id)\r\n        .then(function() {\r\n          $state.go(\"app.lotteries.overview\");\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  LotteryInitController.$inject = [\"$modalInstance\", \"ModalParams\", \"LotteriesService\", \"PlistsService\"];\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller(\"LotteryInitController\", LotteryInitController);\r\n\r\n  /* @ngInject */\r\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Lottery = {\r\n      Name: \"Lottery #\" + (new Date()).getTime(),\r\n    };\r\n\r\n    vm.LoadPlists = LoadPlists;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists()\r\n        .then(function(data) {\r\n          vm.Plists = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function Save() {\r\n      LotteriesService\r\n        .SaveLottery(vm.Lottery)\r\n        .then(function(resp) {\r\n          $modalInstance.close(resp.id);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app.contacts')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.contacts',\n      config: {\n        abstract: true,\n        url: \"/contacts\",\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'app.contacts.overview',\n      config: {\n        title: 'Contacts Overview',\n        url: \"/\",\n        templateUrl: 'src/contacts/overview/view.html',\n        controller: 'ContactsOverviewController',\n      }\n    }, {\n      state: 'app.contacts.person',\n      config: {\n        title: 'Person',\n        url: \"/person/:id\",\n        templateUrl: 'src/contacts/person/view.html',\n        controller: 'ContactsPersonController',\n      }\n    }, {\n      state: 'app.contacts.company',\n      config: {\n        abstract: true,\n        url: \"/company/:id\",\n        templateUrl: 'src/contacts/company/view.html',\n        controller: 'ContactsCompanyController',\n      }\n    }, {\n      state: \"app.contacts.company.info\",\n      config: {\n        title: \"info\",\n        url: \"/info\",\n        templateUrl: 'src/contacts/company/info/view.html',\n        controller: 'ContactsCompanyInfoController',\n      },\n    }, {\n      state: \"app.contacts.company.overview\",\n      config: {\n        title: \"overview\",\n        url: \"/overview\",\n        templateUrl: 'src/contacts/company/overview/view.html',\n        controller: 'ContactsCompanyOverviewController',\n      },\n    }, {\n      state: \"app.contacts.company.persons\",\n      config: {\n        title: \"persons\",\n        url: \"/persons\",\n        templateUrl: 'src/contacts/company/persons/view.html',\n        controller: 'ContactsCompanyPersonsController',\n      },\n    }, {\n      state: \"app.contacts.company.transactions\",\n      config: {\n        title: \"transactions\",\n        url: \"/transactions\",\n        templateUrl: 'src/contacts/company/transactions/view.html',\n        controller: 'ContactsCompanyTransactionsController',\n      },\n    }, {\n      state: \"app.contacts.company.files\",\n      config: {\n        title: \"files\",\n        url: \"/files\",\n        templateUrl: 'src/contacts/company/files/view.html',\n        // controller: 'ContactsCompanyFilesController',\n      },\n    }];\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .factory('ContactsModals', ContactsModals);\n\n  ContactsModals.$inject = ['modalHelper'];\n\n  function ContactsModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddPerson\",\n        config: {\n          templateUrl: 'src/contacts/addperson/view.html',\n          controller: \"ContactsAddPersonController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddCompany\",\n        config: {\n          templateUrl: 'src/contacts/addcompany/view.html',\n          controller: \"ContactsAddCompanyController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddEvent\",\n        config: {\n          templateUrl: 'src/contacts/addevent/view.html',\n          controller: \"ContactsAddEventController\",\n        }\n      }, {\n        modal: \"ExportImport\",\n        config: {\n          templateUrl: 'src/contacts/exportimport/view.html',\n          controller: \"ContactsExportImportController\",\n        }\n      }];\n    }\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsTopMenuController.$inject = [\"$state\", \"ContactsModals\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\n\n  /* @ngInject */\n  function ContactsTopMenuController($state, ContactsModals) {\n    var vm = this;\n\n    vm.AddCompany = AddCompany;\n    vm.AddPerson = AddPerson;\n    vm.AddEvent = AddEvent;\n    vm.ExportImport = ExportImport;\n\n    activate();\n\n    function activate() {\n\n    }\n\n    function AddCompany() {\n      ContactsModals\n        .AddCompany()\n        .then(function(response) {\n          $state.go(\"app.contacts.company\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddPerson() {\n      ContactsModals\n        .AddPerson()\n        .then(function(response) {\n          $state.go(\"app.contacts.person\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddEvent() {\n      ContactsModals\n        .AddEvent()\n        .then(function(response) {\n          $state.go(\"app.contacts.events.event\", {\n            id: response.id\n          });\n        });\n    }\n\n    function ExportImport() {\n      ContactsModals\n        .ExportImport()\n        .then(function() {});\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsOverviewController.$inject = [\"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\n\n  /* @ngInject */\n  function ContactsOverviewController(Company) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _getAccessed();\n    }\n\n    function _getAccessed() {\n      vm.loading_accessed = true;\n      Company.find({\n          filter: {\n            limit: 10,\n            order: \"lastAccess DESC\",\n          }\n        })\n        .$promise\n        .then(function(_companies) {\n          vm.accessed = _companies;\n        })\n        .finally(function() {\n          vm.loading_accessed = false;\n        });\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsContactController\", ContactsContactController);\n\n  /* @ngInject */\n  function ContactsContactController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyController.$inject = [\"$stateParams\", \"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\n\n  /* @ngInject */\n  function ContactsCompanyController($stateParams, Company) {\n    var vm = this;\n\n    vm.Tabs = [{\n      heading: {\n        icon: \"bars\",\n        title: 'Info'\n      },\n      route: 'app.contacts.company.info',\n      params: {\n        class: \"visible-xs visible-sm\",\n      }\n    }, {\n      heading: {\n        icon: \"bell-o\",\n        class: \"hidden-xs\",\n        title: 'Overview'\n      },\n      route: 'app.contacts.company.overview',\n    }, {\n      heading: {\n        icon: \"users\",\n        class: \"hidden-xs\",\n        title: 'Persons'\n      },\n      route: 'app.contacts.company.persons',\n    }, {\n      heading: {\n        icon: \"money\",\n        class: \"hidden-xs\",\n        title: 'Transactions'\n      },\n      route: 'app.contacts.company.transactions',\n    }, {\n      heading: {\n        icon: \"files-o\",\n        class: \"hidden-xs\",\n        title: 'Files'\n      },\n      route: 'app.contacts.company.files',\n    }];\n\n    activate();\n\n    function activate() {\n      vm.Company = Company.findById({\n        id: $stateParams.id,\n      });\n    }\n\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsAddPersonController.$inject = [\"$modalInstance\", \"ModalParams\", \"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\n\n  /* @ngInject */\n  function ContactsAddPersonController($modalInstance, ModalParams, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter:{\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {}\n\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsAddCompanyController.$inject = [\"$modalInstance\", \"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\n\n  /* @ngInject */\n  function ContactsAddCompanyController($modalInstance, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter: {\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {\n      Company\n        .create(vm.Company)\n        .$promise\n        .then(function(_company) {\n          $modalInstance.close(_company);\n        });\n    }\n\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app._common')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates(), \"/\");\n  }\n\n  function getStates() {\n    return [{\n      state: 'app',\n      config: {\n        abstract: true,\n        resolve: {\n          isAuthenticated: function($state, User, $timeout) {\n            $timeout(function() {\n              if (!User.isAuthenticated()) {\n                $state.go(\"auth.login\");\n                return false;\n              }\n            });\n          }\n        },\n        views: {\n          \"\": {\n            templateUrl: 'src/_common/views/layout.html',\n            controller: function(User) {\n              var vm = this;\n\n              User\n                .getCurrent()\n                .$promise\n                .then(function(_user) {\n                  vm.username = _user.username;\n                });\n\n            },\n          },\n          \"menu-contacts@app\": {\n            templateUrl: 'src/contacts/topmenu/view.html',\n            controller: \"ContactsTopMenuController\",\n          },\n          // \"menu-contacts@app\": {\n          //   templateUrl: 'src/contacts/topmenu/view.html',\n          //   controller: \"ContactsTopMenuController\",\n          // },\n        }\n      }\n    }];\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  SettingsService.$inject = [\"$resource\"];\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  appRun.$inject = [\"routerHelper\"];\n  angular\n    .module('app.settings')\n    .run(appRun);\n\n  /* @ngInject */\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.settings',\n      config: {\n        url: '/settings',\n        controller: \"SettingsController\",\n        templateUrl: 'src/settings/overview/view.html',\n      }\n    }];\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  PlistsService.$inject = [\"$resource\", \"Plist\"];\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsService', PlistsService);\r\n\r\n  /* @ngInject */\r\n  function PlistsService($resource, Plist) {\r\n\r\n    var service = {\r\n      GetPlists: GetPlists,\r\n      GetPlist: GetPlist,\r\n      SavePlist: SavePlist,\r\n      DeletePlist: DeletePlist,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetPlists(params) {\r\n      var params = params || {};\r\n      return Plist\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetPlist(id) {\r\n      return Plist\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SavePlist(plist) {\r\n\r\n      if (!plist.id) {\r\n        plist.CreatedAt = new Date();\r\n      }\r\n\r\n      return Plist\r\n        .updateOrCreate(plist)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n\r\n      return Plist\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LotteriesService.$inject = [\"$resource\", \"Lottery\"];\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesService', LotteriesService);\r\n\r\n  /* @ngInject */\r\n  function LotteriesService($resource, Lottery) {\r\n\r\n    var service = {\r\n      GetLotteries: GetLotteries,\r\n      GetLottery: GetLottery,\r\n      SaveLottery: SaveLottery,\r\n      DeleteLottery: DeleteLottery,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetLotteries(params) {\r\n      var params = params || {};\r\n      return Lottery\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetLottery(id) {\r\n      return Lottery\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SaveLottery(lottery) {\r\n\r\n      lottery.DrewAt = new Date();\r\n      lottery.Participants = _.shuffle(lottery.Participants);\r\n      \r\n      return Lottery\r\n        .create(lottery)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeleteLottery(id) {\r\n\r\n      return Lottery\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app.dashboard')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.dashboard',\n      config: {\n        title: 'Dashboard',\n        url: \"/\",\n        templateUrl: 'src/dashboard/view.html',\n        controller: 'DashboardController',\n      }\n    }];\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .controller(\"DashboardController\", DashboardController);\n\n  /* @ngInject */\n  function DashboardController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.news = _.sortBy([{\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\n        \"content\": \"Tempor ut qui non mollit qui.\",\n        \"title\": \"ea enim veniam laboris ullamco\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\n        \"title\": \"cillum aute deserunt labore est\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\n        \"title\": \"velit occaecat adipisicing tempor sit\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\n        \"title\": \"non do ipsum et cillum\",\n        \"url\": \"http://google.com\"\n      }], 'date');\n    }\n\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;(function() { window.APP={\"name\":\"Balance\",\"description\":\"Christos' CRM tool that you need too\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"config\":{\"client\":{\"name\":\"Demo Company\"},\"database\":\"balance\",\"roles\":[\"ADMIN\",\"MEMBER\"],\"users\":[{\"username\":\"admin\",\"email\":\"admin@admin.com\",\"password\":\"admin\",\"role\":\"ADMIN\"},{\"username\":\"member\",\"email\":\"member@member.com\",\"password\":\"member\",\"role\":\"MEMBER\"}]}}; })()","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\n\n  /* @ngInject */\n  function ContactsCompanyPersonsController(CompanyData) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.Persons = CompanyData.persons;\n    }\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyInfoController\", ContactsCompanyInfoController);\n\n  /* @ngInject */\n  function ContactsCompanyInfoController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .provider('configHelper', configHelperProvider);\n\n  /* @ngInject */\n  function configHelperProvider() {\n    /* jshint validthis:true */\n    this.$get = ConfigHelper;\n\n    // $locationProvider.html5Mode(true);\n\n    ConfigHelper.$inject = [];\n\n    function ConfigHelper() {\n\n      var service = {\n        notifyConfig: notifyConfig\n      };\n\n      return service;\n\n      //function notifyConfig() {}\n      function notifyConfig(configName, message) {\n        message = message || {};\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\n      }\n\n    }\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('numberFixedLen', numberFixedLen)\n\n  /* @ngInject */\n  function numberFixedLen() {\n    return function(a, b) {\n      return (1e4 + a + \"\").slice(-b)\n    }\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('join', join)\n\n  /* @ngInject */\n  function join() {\n    return function(array, separator) {\n      if (!array) {\n        return '';\n      }\n      if (!separator) {\n        separator = ', ';\n      }\n      return array.join(separator);\n    };\n  }\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fromNow', fromNow)\n\n  /* @ngInject */\n  function fromNow() {\n    return function(date) {\n      return moment(date).fromNow();\n    }\n  }\n  \n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fileicon', fileicon)\n\n  /* @ngInject */\n  function fileicon() {\n    var _icons = {\n      \"application/pdf\": \"fa-file-pdf-o\",\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\n      \"application/x-msword\": \"fa-file-word-o\",\n      \"application/x-msexcel\": \"fa-file-excel-o\",\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\n      \"image/gif\": \"fa-file-image-o\",\n      \"image/png\": \"fa-file-image-o\",\n      \"image/tiff\": \"fa-file-image-o\",\n      \"image/jpeg\": \"fa-file-image-o\",\n      \"video/avi\": \"fa-file-video-o\",\n      \"video/mpeg\": \"fa-file-video-o\",\n      \"video/msvideo\": \"fa-file-video-o\",\n      \"video/quicktime\": \"fa-file-video-o\",\n      \"application/zip\": \"fa-file-zip-o\"\n    };\n    return function(a) {\n      return _icons[a] || \"fa-file-o\";\n    }\n  }\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('bytes', bytes)\n\n  /* @ngInject */\n  function bytes() {\n    return function(bytes, precision) {\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\n      if (typeof precision === 'undefined') precision = 1;\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\n    }\n  }\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .constant(\"topmenu\", [{\n      name: \"States\",\n      link: \"#\",\n      subtree: [{\n        name: \"state 1\",\n        link: \"state1\"\n      }, {\n        name: \"state 2\",\n        link: \"state2\"\n      }]\n    }])\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'chart.js',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    // 'app.plists',\r\n    // 'app.settings',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($modalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller(\"PlistFormController\", PlistFormController);\r\n\r\n  /* @ngInject */\r\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Plist = {\r\n      id: ModalParams.ID || null,\r\n      Participants: [],\r\n    };\r\n\r\n    vm.Save = Save;\r\n    vm.Delete = Delete;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (vm.Plist.id) {\r\n        vm.loading = true;\r\n        PlistsService\r\n          .GetPlist(vm.Plist.id)\r\n          .then(function(data) {\r\n            vm.Plist = data;\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      }\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .SavePlist(vm.Plist)\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n    function Delete() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .DeletePlist(vm.Plist.id)\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController($state, LotteriesService, LotteriesModals) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries();\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController($state, LotteriesService, $stateParams) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function DeleteLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .DeleteLottery(vm.Lottery.id)\r\n        .then(function() {\r\n          $state.go(\"app.lotteries.overview\");\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller(\"LotteryInitController\", LotteryInitController);\r\n\r\n  /* @ngInject */\r\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Lottery = {\r\n      Name: \"Lottery #\" + (new Date()).getTime(),\r\n    };\r\n\r\n    vm.LoadPlists = LoadPlists;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists()\r\n        .then(function(data) {\r\n          vm.Plists = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function Save() {\r\n      LotteriesService\r\n        .SaveLottery(vm.Lottery)\r\n        .then(function(resp) {\r\n          $modalInstance.close(resp.id);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.contacts',\n      config: {\n        abstract: true,\n        url: \"/contacts\",\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'app.contacts.overview',\n      config: {\n        title: 'Contacts Overview',\n        url: \"/\",\n        templateUrl: 'src/contacts/overview/view.html',\n        controller: 'ContactsOverviewController',\n      }\n    }, {\n      state: 'app.contacts.person',\n      config: {\n        title: 'Person',\n        url: \"/person/:id\",\n        templateUrl: 'src/contacts/person/view.html',\n        controller: 'ContactsPersonController',\n      }\n    }, {\n      state: 'app.contacts.company',\n      config: {\n        abstract: true,\n        url: \"/company/:id\",\n        templateUrl: 'src/contacts/company/view.html',\n        controller: 'ContactsCompanyController',\n      }\n    }, {\n      state: \"app.contacts.company.info\",\n      config: {\n        title: \"info\",\n        url: \"/info\",\n        templateUrl: 'src/contacts/company/info/view.html',\n        controller: 'ContactsCompanyInfoController',\n      },\n    }, {\n      state: \"app.contacts.company.overview\",\n      config: {\n        title: \"overview\",\n        url: \"/overview\",\n        templateUrl: 'src/contacts/company/overview/view.html',\n        controller: 'ContactsCompanyOverviewController',\n      },\n    }, {\n      state: \"app.contacts.company.persons\",\n      config: {\n        title: \"persons\",\n        url: \"/persons\",\n        templateUrl: 'src/contacts/company/persons/view.html',\n        controller: 'ContactsCompanyPersonsController',\n      },\n    }, {\n      state: \"app.contacts.company.transactions\",\n      config: {\n        title: \"transactions\",\n        url: \"/transactions\",\n        templateUrl: 'src/contacts/company/transactions/view.html',\n        controller: 'ContactsCompanyTransactionsController',\n      },\n    }, {\n      state: \"app.contacts.company.files\",\n      config: {\n        title: \"files\",\n        url: \"/files\",\n        templateUrl: 'src/contacts/company/files/view.html',\n        // controller: 'ContactsCompanyFilesController',\n      },\n    }];\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .factory('ContactsModals', ContactsModals);\n\n  ContactsModals.$inject = ['modalHelper'];\n\n  function ContactsModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddPerson\",\n        config: {\n          templateUrl: 'src/contacts/addperson/view.html',\n          controller: \"ContactsAddPersonController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddCompany\",\n        config: {\n          templateUrl: 'src/contacts/addcompany/view.html',\n          controller: \"ContactsAddCompanyController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddEvent\",\n        config: {\n          templateUrl: 'src/contacts/addevent/view.html',\n          controller: \"ContactsAddEventController\",\n        }\n      }, {\n        modal: \"ExportImport\",\n        config: {\n          templateUrl: 'src/contacts/exportimport/view.html',\n          controller: \"ContactsExportImportController\",\n        }\n      }];\n    }\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\n\n  /* @ngInject */\n  function ContactsTopMenuController($state, ContactsModals) {\n    var vm = this;\n\n    vm.AddCompany = AddCompany;\n    vm.AddPerson = AddPerson;\n    vm.AddEvent = AddEvent;\n    vm.ExportImport = ExportImport;\n\n    activate();\n\n    function activate() {\n\n    }\n\n    function AddCompany() {\n      ContactsModals\n        .AddCompany()\n        .then(function(response) {\n          $state.go(\"app.contacts.company\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddPerson() {\n      ContactsModals\n        .AddPerson()\n        .then(function(response) {\n          $state.go(\"app.contacts.person\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddEvent() {\n      ContactsModals\n        .AddEvent()\n        .then(function(response) {\n          $state.go(\"app.contacts.events.event\", {\n            id: response.id\n          });\n        });\n    }\n\n    function ExportImport() {\n      ContactsModals\n        .ExportImport()\n        .then(function() {});\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\n\n  /* @ngInject */\n  function ContactsOverviewController(Company) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _getAccessed();\n    }\n\n    function _getAccessed() {\n      vm.loading_accessed = true;\n      Company.find({\n          filter: {\n            limit: 10,\n            order: \"lastAccess DESC\",\n          }\n        })\n        .$promise\n        .then(function(_companies) {\n          vm.accessed = _companies;\n        })\n        .finally(function() {\n          vm.loading_accessed = false;\n        });\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsContactController\", ContactsContactController);\n\n  /* @ngInject */\n  function ContactsContactController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\n\n  /* @ngInject */\n  function ContactsCompanyController($stateParams, Company) {\n    var vm = this;\n\n    vm.Tabs = [{\n      heading: {\n        icon: \"bars\",\n        title: 'Info'\n      },\n      route: 'app.contacts.company.info',\n      params: {\n        class: \"visible-xs visible-sm\",\n      }\n    }, {\n      heading: {\n        icon: \"bell-o\",\n        class: \"hidden-xs\",\n        title: 'Overview'\n      },\n      route: 'app.contacts.company.overview',\n    }, {\n      heading: {\n        icon: \"users\",\n        class: \"hidden-xs\",\n        title: 'Persons'\n      },\n      route: 'app.contacts.company.persons',\n    }, {\n      heading: {\n        icon: \"money\",\n        class: \"hidden-xs\",\n        title: 'Transactions'\n      },\n      route: 'app.contacts.company.transactions',\n    }, {\n      heading: {\n        icon: \"files-o\",\n        class: \"hidden-xs\",\n        title: 'Files'\n      },\n      route: 'app.contacts.company.files',\n    }];\n\n    activate();\n\n    function activate() {\n      vm.Company = Company.findById({\n        id: $stateParams.id,\n      });\n    }\n\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\n\n  /* @ngInject */\n  function ContactsAddPersonController($modalInstance, ModalParams, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter:{\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {}\n\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\n\n  /* @ngInject */\n  function ContactsAddCompanyController($modalInstance, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter: {\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {\n      Company\n        .create(vm.Company)\n        .$promise\n        .then(function(_company) {\n          $modalInstance.close(_company);\n        });\n    }\n\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates(), \"/\");\n  }\n\n  function getStates() {\n    return [{\n      state: 'app',\n      config: {\n        abstract: true,\n        resolve: {\n          isAuthenticated: function($state, User, $timeout) {\n            $timeout(function() {\n              if (!User.isAuthenticated()) {\n                $state.go(\"auth.login\");\n                return false;\n              }\n            });\n          }\n        },\n        views: {\n          \"\": {\n            templateUrl: 'src/_common/views/layout.html',\n            controller: function(User) {\n              var vm = this;\n\n              User\n                .getCurrent()\n                .$promise\n                .then(function(_user) {\n                  vm.username = _user.username;\n                });\n\n            },\n          },\n          \"menu-contacts@app\": {\n            templateUrl: 'src/contacts/topmenu/view.html',\n            controller: \"ContactsTopMenuController\",\n          },\n          // \"menu-contacts@app\": {\n          //   templateUrl: 'src/contacts/topmenu/view.html',\n          //   controller: \"ContactsTopMenuController\",\n          // },\n        }\n      }\n    }];\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.settings')\n    .run(appRun);\n\n  /* @ngInject */\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.settings',\n      config: {\n        url: '/settings',\n        controller: \"SettingsController\",\n        templateUrl: 'src/settings/overview/view.html',\n      }\n    }];\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsService', PlistsService);\r\n\r\n  /* @ngInject */\r\n  function PlistsService($resource, Plist) {\r\n\r\n    var service = {\r\n      GetPlists: GetPlists,\r\n      GetPlist: GetPlist,\r\n      SavePlist: SavePlist,\r\n      DeletePlist: DeletePlist,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetPlists(params) {\r\n      var params = params || {};\r\n      return Plist\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetPlist(id) {\r\n      return Plist\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SavePlist(plist) {\r\n\r\n      if (!plist.id) {\r\n        plist.CreatedAt = new Date();\r\n      }\r\n\r\n      return Plist\r\n        .updateOrCreate(plist)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n\r\n      return Plist\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesService', LotteriesService);\r\n\r\n  /* @ngInject */\r\n  function LotteriesService($resource, Lottery) {\r\n\r\n    var service = {\r\n      GetLotteries: GetLotteries,\r\n      GetLottery: GetLottery,\r\n      SaveLottery: SaveLottery,\r\n      DeleteLottery: DeleteLottery,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetLotteries(params) {\r\n      var params = params || {};\r\n      return Lottery\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetLottery(id) {\r\n      return Lottery\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SaveLottery(lottery) {\r\n\r\n      lottery.DrewAt = new Date();\r\n      lottery.Participants = _.shuffle(lottery.Participants);\r\n      \r\n      return Lottery\r\n        .create(lottery)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeleteLottery(id) {\r\n\r\n      return Lottery\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.dashboard',\n      config: {\n        title: 'Dashboard',\n        url: \"/\",\n        templateUrl: 'src/dashboard/view.html',\n        controller: 'DashboardController',\n      }\n    }];\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .controller(\"DashboardController\", DashboardController);\n\n  /* @ngInject */\n  function DashboardController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.news = _.sortBy([{\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\n        \"content\": \"Tempor ut qui non mollit qui.\",\n        \"title\": \"ea enim veniam laboris ullamco\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\n        \"title\": \"cillum aute deserunt labore est\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\n        \"title\": \"velit occaecat adipisicing tempor sit\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\n        \"title\": \"non do ipsum et cillum\",\n        \"url\": \"http://google.com\"\n      }], 'date');\n    }\n\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","(function() { window.APP={\"name\":\"Balance\",\"description\":\"Christos' CRM tool that you need too\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"config\":{\"client\":{\"name\":\"Demo Company\"},\"database\":\"balance\",\"roles\":[\"ADMIN\",\"MEMBER\"],\"users\":[{\"username\":\"admin\",\"email\":\"admin@admin.com\",\"password\":\"admin\",\"role\":\"ADMIN\"},{\"username\":\"member\",\"email\":\"member@member.com\",\"password\":\"member\",\"role\":\"MEMBER\"}]}}; })()"],"sourceRoot":"/source/"}