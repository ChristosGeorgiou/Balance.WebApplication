{"version":3,"sources":["contacts/_module.js","contacts/company/_common/routes.js","app.min.js","contacts/company/_common/controller.js","contacts/company/_common/constants.js","contacts/company/transactions/controller.js","contacts/company/persons/controller.js","contacts/company/overview/controller.js","contacts/company/map/controller.js","contacts/company/files/controller.js","contacts/company/events/controller.js","_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/join.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/constants/topmenu.js","app.js","_common/configs/rootscope.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","settings/changepassword/controller.js","files/_module.js","files/_common/modals.js","files/add/controller.js","contacts/_common/routes.js","contacts/_common/modals.js","contacts/topmenu/controller.js","contacts/overview/controller.js","contacts/contact/controller.js","contacts/addperson/controller.js","contacts/addcompany/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","static/_module.js","static/routes.js","settings/service.js","settings/routes.js","settings/modals.js","dashboard/_module.js","dashboard/routes.js","dashboard/controller.js","auth/routes.js","auth/interceptor.js","auth/constants.js","run.js","config.js"],"names":["angular","module","RoutesConfig","configHelper","routerHelper","configureStates","getStates","state","config","abstract","url","template","controller","title","templateUrl","$inject","run","ContactsCompanyController","$stateParams","Company","CompanyTabs","activate","vm","findById","id","this","Tabs","Print","docDefinition","content","pdfMake","createPdf","open","constant","heading","icon","route","params","class","ContactsCompanyTransactionsController","Transaction","_loadTransactions","then","_reloadChart","loading","find","filter","where","companyId","order","$promise","data","_total","_","each","transaction","amount","total","Transactions","groupby","Chart","labels","options","bezierCurve","datasetFill","grouped_transactions","groupBy","moment","date","format","transactions","keydate","_date_total","reduce","Math","round","push","ContactsCompanyPersonsController","Person","_loadPersons","Persons","ContactsCompanyOverviewController","ContactsCompanyMapController","$timeout","leaflet","center","markers","company","lat","parseFloat","location","lng","lon","zoom","message","name","opacity","ContactsCompanyFilesController","Container","FilesModals","_loadFiles","UploadFiles","AddFiles","Label","container","getFiles","Files","ContactsCompanyEventsController","Event","_loadEvents","reload","gt","_ranges","range","from","lt","to","Events","WEEK","subtract","add","HALFMONTH","MONTH","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","states","otherwisePath","forEach","controllerAs","extend","views","item","hasOtherwise","otherwise","get","service","$get","provider","modalHelperProvider","modalHelper","$uibModal","$q","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","result","configHelperProvider","ConfigHelper","notifyConfig","configName","console","log","numberFixedLen","a","b","slice","join","array","separator","fromNow","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","isFinite","units","number","floor","pow","toFixed","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","on","$apply","v","val","$","$setValidity","directive","ngPrint","element","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","body","errSrc","ngSrc","$set","bind","remove","src","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","subtree","appRun","$rootScope","APP","$on","event","toState","description","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","useXDomain","headers","common","SettingsController","SettingsService","SettingsModals","ChangePassword","go","ref","ChangePasswordController","$uibModalInstance","User","toaster","Save","prototype$updateAttributes","getCurrentId","password","Password","user","pop","close","getModals","size","factory","FilesAddController","FileUploader","Upload","uploader","onErrorItem","status","error","ContactsModals","ContactsTopMenuController","AddCompany","AddPerson","AddEvent","ExportImport","ContactsOverviewController","_getAccessed","loading_accessed","limit","_companies","accessed","ContactsContactController","ContactsAddPersonController","loadCompanies","Companies","ContactsAddCompanyController","create","_company","AuthLoginController","LoginMessages","_signMessage","toUpperCase","SignIn","Alert","login","copy","credentials","rejection","code","isAuthenticated","","getCurrent","_user","username","menu-contacts@app","libs","href","$resource","GetSettings","Service","chain","rows","map","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","DashboardController","news","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","AuthInterceptorConfig","interceptors","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","evt","redirectTo","version","repository","author","email","client"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts', [\n      'leaflet-directive',\n    ]);\n})();\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        template:\"<ui-view/>\",\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.map\",\r\n      config: {\r\n        title: \"map\",\r\n        url: \"/map\",\r\n        templateUrl: 'src/contacts/company/map/view.html',\r\n        controller: 'ContactsCompanyMapController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile\",\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/contacts/company/_common/_profile.html',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts', [\n      'leaflet-directive',\n    ]);\n})();\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        template:\"<ui-view/>\",\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.map\",\r\n      config: {\r\n        title: \"map\",\r\n        url: \"/map\",\r\n        templateUrl: 'src/contacts/company/map/view.html',\r\n        controller: 'ContactsCompanyMapController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile\",\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/contacts/company/_common/_profile.html',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyController.$inject = [\"$stateParams\", \"Company\", \"CompanyTabs\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\n\n  /* @ngInject */\n  function ContactsCompanyController($stateParams, Company, CompanyTabs) {\n    var vm = this;\n\n    vm.Tabs = CompanyTabs\n    vm.Print = function() {\n      var docDefinition = {\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\n      };\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\n      //\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\n\n      // open the PDF in a new window\n      pdfMake.createPdf(docDefinition).open();\n\n      // print the PDF (temporarily Chrome-only)\n      // pdfMake.createPdf(docDefinition).print();\n\n      // download the PDF (temporarily Chrome-only)\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\n    }\n\n    activate();\n\n    function activate() {\n      vm.Company = Company.findById({\n        id: $stateParams.id,\n      });\n    }\n\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .constant(\"CompanyTabs\", [{\n      heading: {\n        icon: \"bars\",\n        title: 'Info'\n      },\n      route: 'app.contacts.company.profile.info',\n      params: {\n        class: \"visible-xs visible-sm\",\n      }\n    }, {\n      heading: {\n        icon: \"bell-o\",\n        class: \"hidden-xs\",\n        title: 'Overview'\n      },\n      route: 'app.contacts.company.profile.overview',\n    }, {\n      heading: {\n        icon: \"calendar\",\n        class: \"hidden-xs\",\n        title: 'Events'\n      },\n      route: 'app.contacts.company.profile.events',\n    }, {\n      heading: {\n        icon: \"users\",\n        class: \"hidden-xs\",\n        title: 'Persons'\n      },\n      route: 'app.contacts.company.profile.persons',\n    }, {\n      heading: {\n        icon: \"money\",\n        class: \"hidden-xs\",\n        title: 'Transactions'\n      },\n      route: 'app.contacts.company.profile.transactions',\n    }, {\n      heading: {\n        icon: \"files-o\",\n        class: \"hidden-xs\",\n        title: 'Files'\n      },\n      route: 'app.contacts.company.profile.files',\n    }]);\n\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyTransactionsController.$inject = [\"$stateParams\", \"Transaction\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\r\n\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadTransactions()\r\n        .then(function() {\r\n          _reloadChart();\r\n        });\r\n    }\r\n\r\n    function _loadTransactions() {\r\n      vm.loading = true;\r\n      return Transaction\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function _reloadChart(groupby) {\r\n\r\n      vm.Chart = {\r\n        labels: [],\r\n        data: [\r\n          []\r\n        ],\r\n        options:{\r\n          bezierCurve : false,\r\n          datasetFill : false,\r\n        }\r\n      };\r\n\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.Chart.labels.push(keydate);\r\n        vm.Chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyPersonsController.$inject = [\"$stateParams\", \"Person\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\n\n  /* @ngInject */\n  function ContactsCompanyPersonsController($stateParams,Person) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadPersons();\n    }\n\n    function _loadPersons() {\n      vm.loading = true;\n      return Person\n        .find({\n          filter: {\n            where: {\n              companyId: $stateParams.id,\n            },\n            order: \"fullname ASC\",\n          }\n        })\n        .$promise\n        .then(function(data) {\n          vm.Persons = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n        function _loadPersons() {\r\n          vm.loading = true;\r\n          return Person\r\n            .find({\r\n              filter: {\r\n                where: {\r\n                  companyId: $stateParams.id,\r\n                },\r\n                order: \"fullname ASC\",\r\n              }\r\n            })\r\n            .$promise\r\n            .then(function(data) {\r\n              vm.Persons = data;\r\n            })\r\n            .finally(function() {\r\n              vm.loading = false;\r\n            });\r\n        }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyMapController.$inject = [\"$stateParams\", \"Company\", \"$timeout\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\n\n  /* @ngInject */\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n\n\n      vm.loading = true;\n\n      vm.leaflet = {\n        center: {},\n        markers: []\n      };\n\n      Company.findById({\n          id: $stateParams.id,\n        })\n        .$promise\n        .then(function(company) {\n          vm.Company = company;\n\n          $timeout(function() {\n\n            vm.leaflet.center.lat = parseFloat(company.location.lat);\n            vm.leaflet.center.lng = parseFloat(company.location.lon);\n            vm.leaflet.center.zoom = 14;\n            \n            vm.leaflet.markers.push({\n              message: company.name,\n              lat: parseFloat(company.location.lat),\n              lng: parseFloat(company.location.lon),\n              opacity: 0.8\n            });\n\n            vm.loading = false;\n\n          }, 1000);\n\n        });\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyFilesController.$inject = [\"$stateParams\", \"Container\", \"FilesModals\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\n\n  /* @ngInject */\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\n    var vm = this;\n\n    vm.container = $stateParams.id;\n    vm.UploadFiles = UploadFiles;\n    // vm.Download = Download;\n\n    activate();\n\n    function activate() {\n      _loadFiles();\n    }\n\n    function UploadFiles() {\n      FilesModals\n        .AddFiles({\n          Label: \"Company\",\n          Container: vm.container\n        })\n        .then(function() {\n          _loadFiles();\n        });\n    }\n\n    //\n    // function Download(file) {\n    //   Container\n    //     .download({\n    //       container: vm.container,\n    //       file: file,\n    //     })\n    //     .$promise\n    //     .then(function(data) {\n    //       console.log(data);\n    //     });\n    // }\n\n    function _loadFiles() {\n      vm.loading = true;\n      return Container\n        .getFiles({\n          container: vm.container,\n        })\n        .$promise\n        .then(function(data) {\n          vm.Files = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyEventsController.$inject = [\"$stateParams\", \"Event\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  routerHelperProvider.$inject = [\"$locationProvider\", \"$stateProvider\", \"$urlRouterProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .provider('configHelper', configHelperProvider);\n\n  /* @ngInject */\n  function configHelperProvider() {\n    /* jshint validthis:true */\n    this.$get = ConfigHelper;\n\n    // $locationProvider.html5Mode(true);\n\n    ConfigHelper.$inject = [];\n\n    function ConfigHelper() {\n\n      var service = {\n        notifyConfig: notifyConfig\n      };\n\n      return service;\n\n      //function notifyConfig() {}\n      function notifyConfig(configName, message) {\n        message = message || {};\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\n      }\n\n    }\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('numberFixedLen', numberFixedLen)\n\n  /* @ngInject */\n  function numberFixedLen() {\n    return function(a, b) {\n      return (1e4 + a + \"\").slice(-b)\n    }\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('join', join)\n\n  /* @ngInject */\n  function join() {\n    return function(array, separator) {\n      if (!array) {\n        return '';\n      }\n      if (!separator) {\n        separator = ', ';\n      }\n      return array.join(separator);\n    };\n  }\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fromNow', fromNow)\n\n  /* @ngInject */\n  function fromNow() {\n    return function(date) {\n      return moment(date).fromNow();\n    }\n  }\n  \n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fileicon', fileicon)\n\n  /* @ngInject */\n  function fileicon() {\n    var _icons = {\n      \"application/pdf\": \"fa-file-pdf-o\",\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\n      \"application/x-msword\": \"fa-file-word-o\",\n      \"application/x-msexcel\": \"fa-file-excel-o\",\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\n      \"image/gif\": \"fa-file-image-o\",\n      \"image/png\": \"fa-file-image-o\",\n      \"image/tiff\": \"fa-file-image-o\",\n      \"image/jpeg\": \"fa-file-image-o\",\n      \"video/avi\": \"fa-file-video-o\",\n      \"video/mpeg\": \"fa-file-video-o\",\n      \"video/msvideo\": \"fa-file-video-o\",\n      \"video/quicktime\": \"fa-file-video-o\",\n      \"application/zip\": \"fa-file-zip-o\"\n    };\n    return function(a) {\n      return _icons[a] || \"fa-file-o\";\n    }\n  }\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('bytes', bytes)\n\n  /* @ngInject */\n  function bytes() {\n    return function(bytes, precision) {\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\n      if (bytes === 0) return 'Empty';\n      if (typeof precision === 'undefined') precision = 1;\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\n    }\n  }\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .constant(\"topmenu\", [{\n      name: \"States\",\n      link: \"#\",\n      subtree: [{\n        name: \"state 1\",\n        link: \"state1\"\n      }, {\n        name: \"state 2\",\n        link: \"state2\"\n      }]\n    }])\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  SettingsController.$inject = [\"$state\", \"SettingsService\", \"SettingsModals\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ChangePasswordController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"User\", \"toaster\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.files')\n    .factory('FilesModals', FilesModals);\n\n  FilesModals.$inject = ['modalHelper'];\n\n  function FilesModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddFiles\",\n        config: {\n          templateUrl: 'src/files/add/view.html',\n          controller: \"FilesAddController\",\n          size:\"md\",\n        }\n      }];\n    }\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  FilesAddController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"FileUploader\"];\n  angular\n    .module('app.files')\n    .controller(\"FilesAddController\", FilesAddController);\n\n  /* @ngInject */\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\n    var vm = this;\n\n    vm.Label = ModalParams.Label;\n    vm.Container = ModalParams.Container;\n\n    vm.Upload = Upload;\n\n    activate();\n\n    function activate() {}\n\n\n    function Upload() {}\n\n    var uploader = vm.uploader = new FileUploader({\n      vm: vm, // to automatically update the html. Default: $rootScope\n      url: '/api/containers/' + vm.Container + '/upload',\n      // formData: [{\n      //   key: 'value'\n      // }]\n    });\n\n    // ADDING FILTERS\n    // uploader.filters.push({\n    //   name: 'filterName',\n    //   fn: function(item, options) { // second user filter\n    //     console.info('filter2');\n    //     return true;\n    //   }\n    // });\n\n    // REGISTER HANDLERS\n    // --------------------\n    // uploader.onAfterAddingFile = function(item) {\n    //   console.info('After adding a file', item);\n    // };\n    // // --------------------\n    // uploader.onAfterAddingAll = function(items) {\n    //   console.info('After adding all files', items);\n    // };\n    // // --------------------\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\n    //   console.info('When adding a file failed', item);\n    // };\n    // // --------------------\n    // uploader.onBeforeUploadItem = function(item) {\n    //   console.info('Before upload', item);\n    // };\n    // // --------------------\n    // uploader.onProgressItem = function(item, progress) {\n    //   console.info('Progress: ' + progress, item);\n    // };\n    // // --------------------\n    // uploader.onProgressAll = function(progress) {\n    //   console.info('Total progress: ' + progress);\n    // };\n    // --------------------\n    // uploader.onSuccessItem = function(item, response, status, headers) {\n    //   console.info('Success', response, status, headers);\n    //   vm.$broadcast('uploadCompleted', item);\n    // };\n    // --------------------\n    uploader.onErrorItem = function(item, response, status, headers) {\n      item.error = response.error;\n      // console.info('Error', response, status, headers);\n    };\n    // // --------------------\n    // uploader.onCancelItem = function(item, response, status, headers) {\n    //   console.info('Cancel', response, status);\n    // };\n    // // --------------------\n    // uploader.onCompleteItem = function(item, response, status, headers) {\n    //   console.info('Complete', response, status, headers);\n    // };\n    // // --------------------\n    // uploader.onCompleteAll = function() {\n    //   console.info('Complete all');\n    // };\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app.contacts')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.contacts',\n      config: {\n        abstract: true,\n        url: \"/contacts\",\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'app.contacts.overview',\n      config: {\n        title: 'Contacts Overview',\n        url: \"/\",\n        templateUrl: 'src/contacts/overview/view.html',\n        controller: 'ContactsOverviewController',\n      }\n    }, {\n      state: 'app.contacts.person',\n      config: {\n        title: 'Person',\n        url: \"/person/:id\",\n        templateUrl: 'src/contacts/person/view.html',\n        controller: 'ContactsPersonController',\n      }\n    }];\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .factory('ContactsModals', ContactsModals);\n\n  ContactsModals.$inject = ['modalHelper'];\n\n  function ContactsModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddPerson\",\n        config: {\n          templateUrl: 'src/contacts/addperson/view.html',\n          controller: \"ContactsAddPersonController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddCompany\",\n        config: {\n          templateUrl: 'src/contacts/addcompany/view.html',\n          controller: \"ContactsAddCompanyController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddEvent\",\n        config: {\n          templateUrl: 'src/contacts/addevent/view.html',\n          controller: \"ContactsAddEventController\",\n        }\n      }, {\n        modal: \"ExportImport\",\n        config: {\n          templateUrl: 'src/contacts/exportimport/view.html',\n          controller: \"ContactsExportImportController\",\n        }\n      }];\n    }\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsTopMenuController.$inject = [\"$state\", \"ContactsModals\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\n\n  /* @ngInject */\n  function ContactsTopMenuController($state, ContactsModals) {\n    var vm = this;\n\n    vm.AddCompany = AddCompany;\n    vm.AddPerson = AddPerson;\n    vm.AddEvent = AddEvent;\n    vm.ExportImport = ExportImport;\n\n    activate();\n\n    function activate() {\n\n    }\n\n    function AddCompany() {\n      ContactsModals\n        .AddCompany()\n        .then(function(response) {\n          $state.go(\"app.contacts.company\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddPerson() {\n      ContactsModals\n        .AddPerson()\n        .then(function(response) {\n          $state.go(\"app.contacts.person\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddEvent() {\n      ContactsModals\n        .AddEvent()\n        .then(function(response) {\n          $state.go(\"app.contacts.events.event\", {\n            id: response.id\n          });\n        });\n    }\n\n    function ExportImport() {\n      ContactsModals\n        .ExportImport()\n        .then(function() {});\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsOverviewController.$inject = [\"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\n\n  /* @ngInject */\n  function ContactsOverviewController(Company) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _getAccessed();\n    }\n\n    function _getAccessed() {\n      vm.loading_accessed = true;\n      Company.find({\n          filter: {\n            limit: 10,\n            order: \"lastAccess DESC\",\n          }\n        })\n        .$promise\n        .then(function(_companies) {\n          vm.accessed = _companies;\n        })\n        .finally(function() {\n          vm.loading_accessed = false;\n        });\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsContactController\", ContactsContactController);\n\n  /* @ngInject */\n  function ContactsContactController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsAddPersonController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\n\n  /* @ngInject */\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter:{\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {}\n\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsAddCompanyController.$inject = [\"$uibModalInstance\", \"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\n\n  /* @ngInject */\n  function ContactsAddCompanyController($uibModalInstance, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter: {\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {\n      Company\n        .create(vm.Company)\n        .$promise\n        .then(function(_company) {\n          $uibModalInstance.close(_company);\n        });\n    }\n\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app._common')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates(), \"/\");\n  }\n\n  function getStates() {\n    return [{\n      state: 'app',\n      config: {\n        abstract: true,\n        resolve: {\n          isAuthenticated: function($state, User, $timeout) {\n            $timeout(function() {\n              if (!User.isAuthenticated()) {\n                $state.go(\"auth.login\");\n                return false;\n              }\n            });\n          }\n        },\n        views: {\n          \"\": {\n            templateUrl: 'src/_common/views/layout.html',\n            controller: function(User) {\n              var vm = this;\n\n              User\n                .getCurrent()\n                .$promise\n                .then(function(_user) {\n                  vm.username = _user.username;\n                });\n\n            },\n          },\n          \"menu-contacts@app\": {\n            templateUrl: 'src/contacts/topmenu/view.html',\n            controller: \"ContactsTopMenuController\",\n          },\n          // \"menu-contacts@app\": {\n          //   templateUrl: 'src/contacts/topmenu/view.html',\n          //   controller: \"ContactsTopMenuController\",\n          // },\n        }\n      }\n    }];\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  SettingsService.$inject = [\"$resource\"];\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  appRun.$inject = [\"routerHelper\"];\n  angular\n    .module('app.settings')\n    .run(appRun);\n\n  /* @ngInject */\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.settings',\n      config: {\n        url: '/settings',\n        controller: \"SettingsController\",\n        templateUrl: 'src/settings/overview/view.html',\n      }\n    }];\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app.dashboard')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.dashboard',\n      config: {\n        title: 'Dashboard',\n        url: \"/\",\n        templateUrl: 'src/dashboard/view.html',\n        controller: 'DashboardController',\n      }\n    }];\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .controller(\"DashboardController\", DashboardController);\n\n  /* @ngInject */\n  function DashboardController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.news = _.sortBy([{\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\n        \"content\": \"Tempor ut qui non mollit qui.\",\n        \"title\": \"ea enim veniam laboris ullamco\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\n        \"title\": \"cillum aute deserunt labore est\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\n        \"title\": \"velit occaecat adipisicing tempor sit\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\n        \"title\": \"non do ipsum et cillum\",\n        \"url\": \"http://google.com\"\n      }], 'date');\n    }\n\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\n\n  /* @ngInject */\n  function ContactsCompanyController($stateParams, Company, CompanyTabs) {\n    var vm = this;\n\n    vm.Tabs = CompanyTabs\n    vm.Print = function() {\n      var docDefinition = {\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\n      };\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\n      //\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\n\n      // open the PDF in a new window\n      pdfMake.createPdf(docDefinition).open();\n\n      // print the PDF (temporarily Chrome-only)\n      // pdfMake.createPdf(docDefinition).print();\n\n      // download the PDF (temporarily Chrome-only)\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\n    }\n\n    activate();\n\n    function activate() {\n      vm.Company = Company.findById({\n        id: $stateParams.id,\n      });\n    }\n\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .constant(\"CompanyTabs\", [{\n      heading: {\n        icon: \"bars\",\n        title: 'Info'\n      },\n      route: 'app.contacts.company.profile.info',\n      params: {\n        class: \"visible-xs visible-sm\",\n      }\n    }, {\n      heading: {\n        icon: \"bell-o\",\n        class: \"hidden-xs\",\n        title: 'Overview'\n      },\n      route: 'app.contacts.company.profile.overview',\n    }, {\n      heading: {\n        icon: \"calendar\",\n        class: \"hidden-xs\",\n        title: 'Events'\n      },\n      route: 'app.contacts.company.profile.events',\n    }, {\n      heading: {\n        icon: \"users\",\n        class: \"hidden-xs\",\n        title: 'Persons'\n      },\n      route: 'app.contacts.company.profile.persons',\n    }, {\n      heading: {\n        icon: \"money\",\n        class: \"hidden-xs\",\n        title: 'Transactions'\n      },\n      route: 'app.contacts.company.profile.transactions',\n    }, {\n      heading: {\n        icon: \"files-o\",\n        class: \"hidden-xs\",\n        title: 'Files'\n      },\n      route: 'app.contacts.company.profile.files',\n    }]);\n\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\r\n\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadTransactions()\r\n        .then(function() {\r\n          _reloadChart();\r\n        });\r\n    }\r\n\r\n    function _loadTransactions() {\r\n      vm.loading = true;\r\n      return Transaction\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function _reloadChart(groupby) {\r\n\r\n      vm.Chart = {\r\n        labels: [],\r\n        data: [\r\n          []\r\n        ],\r\n        options:{\r\n          bezierCurve : false,\r\n          datasetFill : false,\r\n        }\r\n      };\r\n\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.Chart.labels.push(keydate);\r\n        vm.Chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\n\n  /* @ngInject */\n  function ContactsCompanyPersonsController($stateParams,Person) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadPersons();\n    }\n\n    function _loadPersons() {\n      vm.loading = true;\n      return Person\n        .find({\n          filter: {\n            where: {\n              companyId: $stateParams.id,\n            },\n            order: \"fullname ASC\",\n          }\n        })\n        .$promise\n        .then(function(data) {\n          vm.Persons = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n        function _loadPersons() {\r\n          vm.loading = true;\r\n          return Person\r\n            .find({\r\n              filter: {\r\n                where: {\r\n                  companyId: $stateParams.id,\r\n                },\r\n                order: \"fullname ASC\",\r\n              }\r\n            })\r\n            .$promise\r\n            .then(function(data) {\r\n              vm.Persons = data;\r\n            })\r\n            .finally(function() {\r\n              vm.loading = false;\r\n            });\r\n        }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\n\n  /* @ngInject */\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n\n\n      vm.loading = true;\n\n      vm.leaflet = {\n        center: {},\n        markers: []\n      };\n\n      Company.findById({\n          id: $stateParams.id,\n        })\n        .$promise\n        .then(function(company) {\n          vm.Company = company;\n\n          $timeout(function() {\n\n            vm.leaflet.center.lat = parseFloat(company.location.lat);\n            vm.leaflet.center.lng = parseFloat(company.location.lon);\n            vm.leaflet.center.zoom = 14;\n            \n            vm.leaflet.markers.push({\n              message: company.name,\n              lat: parseFloat(company.location.lat),\n              lng: parseFloat(company.location.lon),\n              opacity: 0.8\n            });\n\n            vm.loading = false;\n\n          }, 1000);\n\n        });\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\n\n  /* @ngInject */\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\n    var vm = this;\n\n    vm.container = $stateParams.id;\n    vm.UploadFiles = UploadFiles;\n    // vm.Download = Download;\n\n    activate();\n\n    function activate() {\n      _loadFiles();\n    }\n\n    function UploadFiles() {\n      FilesModals\n        .AddFiles({\n          Label: \"Company\",\n          Container: vm.container\n        })\n        .then(function() {\n          _loadFiles();\n        });\n    }\n\n    //\n    // function Download(file) {\n    //   Container\n    //     .download({\n    //       container: vm.container,\n    //       file: file,\n    //     })\n    //     .$promise\n    //     .then(function(data) {\n    //       console.log(data);\n    //     });\n    // }\n\n    function _loadFiles() {\n      vm.loading = true;\n      return Container\n        .getFiles({\n          container: vm.container,\n        })\n        .$promise\n        .then(function(data) {\n          vm.Files = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .provider('configHelper', configHelperProvider);\n\n  /* @ngInject */\n  function configHelperProvider() {\n    /* jshint validthis:true */\n    this.$get = ConfigHelper;\n\n    // $locationProvider.html5Mode(true);\n\n    ConfigHelper.$inject = [];\n\n    function ConfigHelper() {\n\n      var service = {\n        notifyConfig: notifyConfig\n      };\n\n      return service;\n\n      //function notifyConfig() {}\n      function notifyConfig(configName, message) {\n        message = message || {};\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\n      }\n\n    }\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('numberFixedLen', numberFixedLen)\n\n  /* @ngInject */\n  function numberFixedLen() {\n    return function(a, b) {\n      return (1e4 + a + \"\").slice(-b)\n    }\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('join', join)\n\n  /* @ngInject */\n  function join() {\n    return function(array, separator) {\n      if (!array) {\n        return '';\n      }\n      if (!separator) {\n        separator = ', ';\n      }\n      return array.join(separator);\n    };\n  }\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fromNow', fromNow)\n\n  /* @ngInject */\n  function fromNow() {\n    return function(date) {\n      return moment(date).fromNow();\n    }\n  }\n  \n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fileicon', fileicon)\n\n  /* @ngInject */\n  function fileicon() {\n    var _icons = {\n      \"application/pdf\": \"fa-file-pdf-o\",\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\n      \"application/x-msword\": \"fa-file-word-o\",\n      \"application/x-msexcel\": \"fa-file-excel-o\",\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\n      \"image/gif\": \"fa-file-image-o\",\n      \"image/png\": \"fa-file-image-o\",\n      \"image/tiff\": \"fa-file-image-o\",\n      \"image/jpeg\": \"fa-file-image-o\",\n      \"video/avi\": \"fa-file-video-o\",\n      \"video/mpeg\": \"fa-file-video-o\",\n      \"video/msvideo\": \"fa-file-video-o\",\n      \"video/quicktime\": \"fa-file-video-o\",\n      \"application/zip\": \"fa-file-zip-o\"\n    };\n    return function(a) {\n      return _icons[a] || \"fa-file-o\";\n    }\n  }\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('bytes', bytes)\n\n  /* @ngInject */\n  function bytes() {\n    return function(bytes, precision) {\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\n      if (bytes === 0) return 'Empty';\n      if (typeof precision === 'undefined') precision = 1;\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\n    }\n  }\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .constant(\"topmenu\", [{\n      name: \"States\",\n      link: \"#\",\n      subtree: [{\n        name: \"state 1\",\n        link: \"state1\"\n      }, {\n        name: \"state 2\",\n        link: \"state2\"\n      }]\n    }])\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.files')\n    .factory('FilesModals', FilesModals);\n\n  FilesModals.$inject = ['modalHelper'];\n\n  function FilesModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddFiles\",\n        config: {\n          templateUrl: 'src/files/add/view.html',\n          controller: \"FilesAddController\",\n          size:\"md\",\n        }\n      }];\n    }\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.files')\n    .controller(\"FilesAddController\", FilesAddController);\n\n  /* @ngInject */\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\n    var vm = this;\n\n    vm.Label = ModalParams.Label;\n    vm.Container = ModalParams.Container;\n\n    vm.Upload = Upload;\n\n    activate();\n\n    function activate() {}\n\n\n    function Upload() {}\n\n    var uploader = vm.uploader = new FileUploader({\n      vm: vm, // to automatically update the html. Default: $rootScope\n      url: '/api/containers/' + vm.Container + '/upload',\n      // formData: [{\n      //   key: 'value'\n      // }]\n    });\n\n    // ADDING FILTERS\n    // uploader.filters.push({\n    //   name: 'filterName',\n    //   fn: function(item, options) { // second user filter\n    //     console.info('filter2');\n    //     return true;\n    //   }\n    // });\n\n    // REGISTER HANDLERS\n    // --------------------\n    // uploader.onAfterAddingFile = function(item) {\n    //   console.info('After adding a file', item);\n    // };\n    // // --------------------\n    // uploader.onAfterAddingAll = function(items) {\n    //   console.info('After adding all files', items);\n    // };\n    // // --------------------\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\n    //   console.info('When adding a file failed', item);\n    // };\n    // // --------------------\n    // uploader.onBeforeUploadItem = function(item) {\n    //   console.info('Before upload', item);\n    // };\n    // // --------------------\n    // uploader.onProgressItem = function(item, progress) {\n    //   console.info('Progress: ' + progress, item);\n    // };\n    // // --------------------\n    // uploader.onProgressAll = function(progress) {\n    //   console.info('Total progress: ' + progress);\n    // };\n    // --------------------\n    // uploader.onSuccessItem = function(item, response, status, headers) {\n    //   console.info('Success', response, status, headers);\n    //   vm.$broadcast('uploadCompleted', item);\n    // };\n    // --------------------\n    uploader.onErrorItem = function(item, response, status, headers) {\n      item.error = response.error;\n      // console.info('Error', response, status, headers);\n    };\n    // // --------------------\n    // uploader.onCancelItem = function(item, response, status, headers) {\n    //   console.info('Cancel', response, status);\n    // };\n    // // --------------------\n    // uploader.onCompleteItem = function(item, response, status, headers) {\n    //   console.info('Complete', response, status, headers);\n    // };\n    // // --------------------\n    // uploader.onCompleteAll = function() {\n    //   console.info('Complete all');\n    // };\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.contacts',\n      config: {\n        abstract: true,\n        url: \"/contacts\",\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'app.contacts.overview',\n      config: {\n        title: 'Contacts Overview',\n        url: \"/\",\n        templateUrl: 'src/contacts/overview/view.html',\n        controller: 'ContactsOverviewController',\n      }\n    }, {\n      state: 'app.contacts.person',\n      config: {\n        title: 'Person',\n        url: \"/person/:id\",\n        templateUrl: 'src/contacts/person/view.html',\n        controller: 'ContactsPersonController',\n      }\n    }];\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .factory('ContactsModals', ContactsModals);\n\n  ContactsModals.$inject = ['modalHelper'];\n\n  function ContactsModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddPerson\",\n        config: {\n          templateUrl: 'src/contacts/addperson/view.html',\n          controller: \"ContactsAddPersonController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddCompany\",\n        config: {\n          templateUrl: 'src/contacts/addcompany/view.html',\n          controller: \"ContactsAddCompanyController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddEvent\",\n        config: {\n          templateUrl: 'src/contacts/addevent/view.html',\n          controller: \"ContactsAddEventController\",\n        }\n      }, {\n        modal: \"ExportImport\",\n        config: {\n          templateUrl: 'src/contacts/exportimport/view.html',\n          controller: \"ContactsExportImportController\",\n        }\n      }];\n    }\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\n\n  /* @ngInject */\n  function ContactsTopMenuController($state, ContactsModals) {\n    var vm = this;\n\n    vm.AddCompany = AddCompany;\n    vm.AddPerson = AddPerson;\n    vm.AddEvent = AddEvent;\n    vm.ExportImport = ExportImport;\n\n    activate();\n\n    function activate() {\n\n    }\n\n    function AddCompany() {\n      ContactsModals\n        .AddCompany()\n        .then(function(response) {\n          $state.go(\"app.contacts.company\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddPerson() {\n      ContactsModals\n        .AddPerson()\n        .then(function(response) {\n          $state.go(\"app.contacts.person\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddEvent() {\n      ContactsModals\n        .AddEvent()\n        .then(function(response) {\n          $state.go(\"app.contacts.events.event\", {\n            id: response.id\n          });\n        });\n    }\n\n    function ExportImport() {\n      ContactsModals\n        .ExportImport()\n        .then(function() {});\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\n\n  /* @ngInject */\n  function ContactsOverviewController(Company) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _getAccessed();\n    }\n\n    function _getAccessed() {\n      vm.loading_accessed = true;\n      Company.find({\n          filter: {\n            limit: 10,\n            order: \"lastAccess DESC\",\n          }\n        })\n        .$promise\n        .then(function(_companies) {\n          vm.accessed = _companies;\n        })\n        .finally(function() {\n          vm.loading_accessed = false;\n        });\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsContactController\", ContactsContactController);\n\n  /* @ngInject */\n  function ContactsContactController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\n\n  /* @ngInject */\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter:{\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {}\n\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\n\n  /* @ngInject */\n  function ContactsAddCompanyController($uibModalInstance, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter: {\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {\n      Company\n        .create(vm.Company)\n        .$promise\n        .then(function(_company) {\n          $uibModalInstance.close(_company);\n        });\n    }\n\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates(), \"/\");\n  }\n\n  function getStates() {\n    return [{\n      state: 'app',\n      config: {\n        abstract: true,\n        resolve: {\n          isAuthenticated: function($state, User, $timeout) {\n            $timeout(function() {\n              if (!User.isAuthenticated()) {\n                $state.go(\"auth.login\");\n                return false;\n              }\n            });\n          }\n        },\n        views: {\n          \"\": {\n            templateUrl: 'src/_common/views/layout.html',\n            controller: function(User) {\n              var vm = this;\n\n              User\n                .getCurrent()\n                .$promise\n                .then(function(_user) {\n                  vm.username = _user.username;\n                });\n\n            },\n          },\n          \"menu-contacts@app\": {\n            templateUrl: 'src/contacts/topmenu/view.html',\n            controller: \"ContactsTopMenuController\",\n          },\n          // \"menu-contacts@app\": {\n          //   templateUrl: 'src/contacts/topmenu/view.html',\n          //   controller: \"ContactsTopMenuController\",\n          // },\n        }\n      }\n    }];\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.settings')\n    .run(appRun);\n\n  /* @ngInject */\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.settings',\n      config: {\n        url: '/settings',\n        controller: \"SettingsController\",\n        templateUrl: 'src/settings/overview/view.html',\n      }\n    }];\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.dashboard',\n      config: {\n        title: 'Dashboard',\n        url: \"/\",\n        templateUrl: 'src/dashboard/view.html',\n        controller: 'DashboardController',\n      }\n    }];\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .controller(\"DashboardController\", DashboardController);\n\n  /* @ngInject */\n  function DashboardController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.news = _.sortBy([{\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\n        \"content\": \"Tempor ut qui non mollit qui.\",\n        \"title\": \"ea enim veniam laboris ullamco\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\n        \"title\": \"cillum aute deserunt labore est\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\n        \"title\": \"velit occaecat adipisicing tempor sit\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\n        \"title\": \"non do ipsum et cillum\",\n        \"url\": \"http://google.com\"\n      }], 'date');\n    }\n\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()"],"sourceRoot":"/source/"}