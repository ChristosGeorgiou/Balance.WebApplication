{"version":3,"sources":["contacts/_module.js","contacts/company/_common/routes.js","app.min.js","contacts/company/_common/modals.js","contacts/company/_common/controller.js","contacts/company/_common/constants.js","contacts/company/transactions/controller.js","contacts/company/persons/controller.js","contacts/company/overview/controller.js","contacts/company/map/controller.js","contacts/company/files/controller.js","contacts/company/events/controller.js","contacts/company/editlogo/controller.js","_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/join.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/ngthumb.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/constants/topmenu.js","app.js","_common/configs/rootscope.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","settings/changepassword/controller.js","files/_module.js","files/_common/modals.js","files/add/controller.js","contacts/_common/routes.js","contacts/_common/modals.js","contacts/topmenu/controller.js","contacts/overview/controller.js","contacts/contact/controller.js","contacts/addperson/controller.js","contacts/addcompany/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","static/_module.js","static/routes.js","settings/service.js","settings/routes.js","settings/modals.js","dashboard/_module.js","dashboard/routes.js","dashboard/controller.js","auth/routes.js","auth/interceptor.js","auth/constants.js","run.js","config.js"],"names":["angular","module","RoutesConfig","configHelper","routerHelper","configureStates","getStates","state","config","abstract","url","template","controller","title","templateUrl","$inject","run","CompanyModals","modalHelper","getModals","modal","size","configureModals","factory","ContactsCompanyController","$stateParams","Company","CompanyTabs","activate","vm","findById","id","EditLogo","this","Tabs","Print","docDefinition","content","pdfMake","createPdf","open","constant","heading","icon","route","class","ContactsCompanyTransactionsController","Transaction","_loadTransactions","then","_reloadChart","loading","find","filter","where","companyId","order","$promise","data","_total","_","each","transaction","amount","total","Transactions","groupby","Chart","labels","options","bezierCurve","datasetFill","grouped_transactions","groupBy","moment","date","format","transactions","keydate","_date_total","reduce","Math","round","push","ContactsCompanyPersonsController","Person","_loadPersons","Persons","ContactsCompanyOverviewController","_loadCompany","include","ContactsCompanyMapController","$timeout","center","markers","company","lat","parseFloat","location","lng","lon","zoom","message","name","street","opacity","focus","ContactsCompanyFilesController","Container","FilesModals","_loadFiles","UploadFiles","AddFiles","Label","container","getFiles","Files","ContactsCompanyEventsController","Event","_loadEvents","reload","gt","_ranges","params","range","from","lt","to","Events","WEEK","subtract","add","HALFMONTH","MONTH","ContactsCompanyEditLogoController","$uibModalInstance","ModalParams","FileUploader","Save","Uploader","uploadItem","onCompleteItem","item","response","status","headers","logo","file","upsert","onAfterAddingFile","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","states","otherwisePath","forEach","controllerAs","extend","views","hasOtherwise","otherwise","get","service","$get","provider","modalHelperProvider","$uibModal","$q","modals","_ret","obj","ModalResultComplete","ModalResultFailed","reason","reject","resolve","result","configHelperProvider","ConfigHelper","notifyConfig","configName","console","log","numberFixedLen","a","b","slice","join","array","separator","fromNow","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","isFinite","units","number","floor","pow","toFixed","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","on","$apply","v","val","$","$setValidity","directive","ngThumb","$window","helper","support","FileReader","CanvasRenderingContext2D","isFile","isObject","File","isImage","type","lastIndexOf","indexOf","element","attributes","onLoadFile","event","img","Image","onload","onLoadImage","src","target","width","height","canvas","attr","getContext","drawImage","$eval","reader","readAsDataURL","ngPrint","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","body","errSrc","ngSrc","$set","bind","remove","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","subtree","appRun","$rootScope","APP","$on","toState","description","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","useXDomain","common","SettingsController","SettingsService","SettingsModals","ChangePassword","go","ref","ChangePasswordController","User","toaster","prototype$updateAttributes","getCurrentId","password","Password","user","pop","close","FilesAddController","Upload","uploader","onErrorItem","error","ContactsModals","ContactsTopMenuController","AddCompany","AddPerson","AddEvent","ExportImport","ContactsOverviewController","_getAccessed","loading_accessed","limit","_companies","accessed","ContactsContactController","ContactsAddPersonController","loadCompanies","Companies","ContactsAddCompanyController","create","_company","AuthLoginController","LoginMessages","_signMessage","toUpperCase","SignIn","Alert","login","copy","credentials","rejection","code","isAuthenticated","","getCurrent","_user","username","menu-contacts@app","libs","href","$resource","GetSettings","Service","chain","rows","map","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","DashboardController","news","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","AuthInterceptorConfig","interceptors","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","evt","redirectTo","version","repository","author","email","client"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts', [\n      'leaflet-directive',\n    ]);\n})();\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        template:\"<ui-view/>\",\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.map\",\r\n      config: {\r\n        title: \"map\",\r\n        url: \"/map\",\r\n        templateUrl: 'src/contacts/company/map/view.html',\r\n        controller: 'ContactsCompanyMapController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile\",\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/contacts/company/_common/_profile.html',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts', [\n      'leaflet-directive',\n    ]);\n})();\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        template:\"<ui-view/>\",\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.map\",\r\n      config: {\r\n        title: \"map\",\r\n        url: \"/map\",\r\n        templateUrl: 'src/contacts/company/map/view.html',\r\n        controller: 'ContactsCompanyMapController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile\",\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/contacts/company/_common/_profile.html',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .factory('CompanyModals', CompanyModals);\n\n  CompanyModals.$inject = ['modalHelper'];\n\n  function CompanyModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"EditLogo\",\n        config: {\n          templateUrl: 'src/contacts/company/editlogo/view.html',\n          controller: \"ContactsCompanyEditLogoController\",\n          size:\"md\",\n        }\n      }];\n    }\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyController.$inject = [\"$stateParams\", \"Company\", \"CompanyTabs\", \"CompanyModals\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\n\n  /* @ngInject */\n  function ContactsCompanyController($stateParams, Company, CompanyTabs, CompanyModals) {\n    var vm = this;\n\n    vm.Tabs = CompanyTabs;\n\n    vm.EditLogo = EditLogo;\n\n    vm.Print = function() {\n      var docDefinition = {\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\n      };\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\n      //\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\n\n      // open the PDF in a new window\n      pdfMake.createPdf(docDefinition).open();\n\n      // print the PDF (temporarily Chrome-only)\n      // pdfMake.createPdf(docDefinition).print();\n\n      // download the PDF (temporarily Chrome-only)\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\n    }\n\n    activate();\n\n    function activate() {\n      vm.Company = Company.findById({\n        id: $stateParams.id,\n      });\n    }\n\n    function EditLogo() {\n      \n      CompanyModals\n        .EditLogo({\n          Company: vm.Company\n        });\n    }\n\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .constant(\"CompanyTabs\", [{\n      heading: {\n        icon: \"bars\",\n        title: 'Overview'\n      },\n      route: 'app.contacts.company.profile.overview',\n    }, {\n      heading: {\n        icon: \"calendar\",\n        class: \"hidden-xs\",\n        title: 'Events'\n      },\n      route: 'app.contacts.company.profile.events',\n    }, {\n      heading: {\n        icon: \"money\",\n        class: \"hidden-xs\",\n        title: 'Transactions'\n      },\n      route: 'app.contacts.company.profile.transactions',\n    }, {\n      heading: {\n        icon: \"files-o\",\n        class: \"hidden-xs\",\n        title: 'Files'\n      },\n      route: 'app.contacts.company.profile.files',\n    }]);\n\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyTransactionsController.$inject = [\"$stateParams\", \"Transaction\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\r\n\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadTransactions()\r\n        .then(function() {\r\n          _reloadChart();\r\n        });\r\n    }\r\n\r\n    function _loadTransactions() {\r\n      vm.loading = true;\r\n      return Transaction\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function _reloadChart(groupby) {\r\n\r\n      vm.Chart = {\r\n        labels: [],\r\n        data: [\r\n          []\r\n        ],\r\n        options:{\r\n          bezierCurve : false,\r\n          datasetFill : false,\r\n        }\r\n      };\r\n\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.Chart.labels.push(keydate);\r\n        vm.Chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyPersonsController.$inject = [\"$stateParams\", \"Person\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\n\n  /* @ngInject */\n  function ContactsCompanyPersonsController($stateParams,Person) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadPersons();\n    }\n\n    function _loadPersons() {\n      vm.loading = true;\n      return Person\n        .find({\n          filter: {\n            where: {\n              companyId: $stateParams.id,\n            },\n            order: \"fullname ASC\",\n          }\n        })\n        .$promise\n        .then(function(data) {\n          vm.Persons = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyOverviewController.$inject = [\"$stateParams\", \"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\n\n  /* @ngInject */\n  function ContactsCompanyOverviewController($stateParams,Company) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadCompany();\n    }\n\n    function _loadCompany() {\n      vm.loading = true;\n      return Company\n        .findById({\n          id: $stateParams.id,\n          filter: {\n            include: [\"persons\"],\n          }\n        })\n        .$promise\n        .then(function(data) {\n          vm.Company = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyMapController.$inject = [\"$stateParams\", \"Company\", \"$timeout\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\n\n  /* @ngInject */\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n\n      vm.loading = true;\n\n      vm.center = {};\n      vm.markers = {};\n\n      Company.findById({\n          id: $stateParams.id,\n        })\n        .$promise\n        .then(function(company) {\n          vm.Company = company;\n\n          $timeout(function() {\n\n            vm.center = {\n              lat: parseFloat(company.location.lat),\n              lng: parseFloat(company.location.lon),\n              zoom: 14,\n            };\n            vm.markers = {\n              company: {\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\n                lat: parseFloat(company.location.lat),\n                lng: parseFloat(company.location.lon),\n                opacity: 0.8,\n                focus: true,\n              }\n            };\n\n            vm.loading = false;\n\n          }, 1000);\n\n        });\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyFilesController.$inject = [\"$stateParams\", \"Container\", \"FilesModals\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\n\n  /* @ngInject */\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\n    var vm = this;\n\n    vm.container = $stateParams.id;\n    vm.UploadFiles = UploadFiles;\n    // vm.Download = Download;\n\n    activate();\n\n    function activate() {\n      _loadFiles();\n    }\n\n    function UploadFiles() {\n      FilesModals\n        .AddFiles({\n          Label: \"Company\",\n          Container: vm.container\n        })\n        .then(function() {\n          _loadFiles();\n        });\n    }\n\n    //\n    // function Download(file) {\n    //   Container\n    //     .download({\n    //       container: vm.container,\n    //       file: file,\n    //     })\n    //     .$promise\n    //     .then(function(data) {\n    //       console.log(data);\n    //     });\n    // }\n\n    function _loadFiles() {\n      vm.loading = true;\n      return Container\n        .getFiles({\n          container: vm.container,\n        })\n        .$promise\n        .then(function(data) {\n          vm.Files = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyEventsController.$inject = [\"$stateParams\", \"Event\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyEditLogoController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"Company\", \"FileUploader\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyEditLogoController\", ContactsCompanyEditLogoController);\n\n  /* @ngInject */\n  function ContactsCompanyEditLogoController($uibModalInstance, ModalParams, Company, FileUploader) {\n    var vm = this;\n\n    vm.Company = ModalParams.Company;\n    vm.Uploader = new FileUploader({\n      vm: vm,\n      url: '/api/Containers/' + vm.Company.id + '/upload',\n    });\n    vm.Uploader.onCompleteItem = function(item, response, status, headers) {\n      vm.Company.logo = '/api/Containers/' + vm.Company.id + '/download/' + item.file.name;\n      Company.upsert(vm.Company);\n    };\n    vm.Uploader.onAfterAddingFile = function(item) {\n      // console.info('After adding a file', item);\n      // console.info(vm.Uploader.queue);\n    };\n    vm.Save = Save;\n\n    activate();\n\n\n    function Upload() {}\n\n\n    function activate() {\n\n    }\n\n    function Save() {\n      vm.Uploader.uploadItem(0);\n    }\n\n\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  routerHelperProvider.$inject = [\"$locationProvider\", \"$stateProvider\", \"$urlRouterProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .provider('configHelper', configHelperProvider);\n\n  /* @ngInject */\n  function configHelperProvider() {\n    /* jshint validthis:true */\n    this.$get = ConfigHelper;\n\n    // $locationProvider.html5Mode(true);\n\n    ConfigHelper.$inject = [];\n\n    function ConfigHelper() {\n\n      var service = {\n        notifyConfig: notifyConfig\n      };\n\n      return service;\n\n      //function notifyConfig() {}\n      function notifyConfig(configName, message) {\n        message = message || {};\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\n      }\n\n    }\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('numberFixedLen', numberFixedLen)\n\n  /* @ngInject */\n  function numberFixedLen() {\n    return function(a, b) {\n      return (1e4 + a + \"\").slice(-b)\n    }\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('join', join)\n\n  /* @ngInject */\n  function join() {\n    return function(array, separator) {\n      if (!array) {\n        return '';\n      }\n      if (!separator) {\n        separator = ', ';\n      }\n      return array.join(separator);\n    };\n  }\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fromNow', fromNow)\n\n  /* @ngInject */\n  function fromNow() {\n    return function(date) {\n      return moment(date).fromNow();\n    }\n  }\n  \n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fileicon', fileicon)\n\n  /* @ngInject */\n  function fileicon() {\n    var _icons = {\n      \"application/pdf\": \"fa-file-pdf-o\",\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\n      \"application/x-msword\": \"fa-file-word-o\",\n      \"application/x-msexcel\": \"fa-file-excel-o\",\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\n      \"image/gif\": \"fa-file-image-o\",\n      \"image/png\": \"fa-file-image-o\",\n      \"image/tiff\": \"fa-file-image-o\",\n      \"image/jpeg\": \"fa-file-image-o\",\n      \"video/avi\": \"fa-file-video-o\",\n      \"video/mpeg\": \"fa-file-video-o\",\n      \"video/msvideo\": \"fa-file-video-o\",\n      \"video/quicktime\": \"fa-file-video-o\",\n      \"application/zip\": \"fa-file-zip-o\"\n    };\n    return function(a) {\n      return _icons[a] || \"fa-file-o\";\n    }\n  }\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('bytes', bytes)\n\n  /* @ngInject */\n  function bytes() {\n    return function(bytes, precision) {\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\n      if (bytes === 0) return 'Empty';\n      if (typeof precision === 'undefined') precision = 1;\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\n    }\n  }\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  ngThumb.$inject = [\"$window\"];\n  angular\n    .module('app._common')\n    .directive('ngThumb', ngThumb)\n\n  /* @ngInject */\n  function ngThumb($window) {\n    var helper = {\n      support: !!($window.FileReader && $window.CanvasRenderingContext2D),\n      isFile: function(item) {\n        return angular.isObject(item) && item instanceof $window.File;\n      },\n      isImage: function(file) {\n        var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';\n        return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\n      }\n    };\n\n    return {\n      restrict: 'A',\n      template: '<canvas/>',\n      link: function(scope, element, attributes) {\n        if (!helper.support) {\n          console.log(\"ngThumb: FileReader not supported\");\n          return;\n        }\n\n\n        var params = scope.$eval(attributes.ngThumb);\n\n        console.log(\"ngThumb: params\", params);\n        if (!helper.isFile(params.file)) {\n          console.log(\"ngThumb: params.file is not a file\");\n          return;\n        }\n\n        if (!helper.isImage(params.file)) {\n          console.log(\"ngThumb: params.file is not an image\");\n          return;\n        }\n\n        var canvas = element.find('canvas');\n        var reader = new FileReader();\n\n        reader.onload = onLoadFile;\n        reader.readAsDataURL(params.file);\n\n        function onLoadFile(event) {\n          var img = new Image();\n          img.onload = onLoadImage;\n          img.src = event.target.result;\n        }\n\n        function onLoadImage() {\n          var width = params.width || this.width / this.height * params.height;\n          var height = params.height || this.height / this.width * params.width;\n          canvas.attr({\n            width: width,\n            height: height\n          });\n          canvas[0].getContext('2d').drawImage(this, 0, 0, width, height);\n        }\n      }\n    };\n  }\n})();\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .constant(\"topmenu\", [{\n      name: \"States\",\n      link: \"#\",\n      subtree: [{\n        name: \"state 1\",\n        link: \"state1\"\n      }, {\n        name: \"state 2\",\n        link: \"state2\"\n      }]\n    }])\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  SettingsController.$inject = [\"$state\", \"SettingsService\", \"SettingsModals\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ChangePasswordController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"User\", \"toaster\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.files')\n    .factory('FilesModals', FilesModals);\n\n  FilesModals.$inject = ['modalHelper'];\n\n  function FilesModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddFiles\",\n        config: {\n          templateUrl: 'src/files/add/view.html',\n          controller: \"FilesAddController\",\n          size:\"md\",\n        }\n      }];\n    }\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  FilesAddController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"FileUploader\"];\n  angular\n    .module('app.files')\n    .controller(\"FilesAddController\", FilesAddController);\n\n  /* @ngInject */\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\n    var vm = this;\n\n    vm.Label = ModalParams.Label;\n    vm.Container = ModalParams.Container;\n\n    vm.Upload = Upload;\n\n    activate();\n\n    function activate() {}\n\n\n    function Upload() {}\n\n    var uploader = vm.uploader = new FileUploader({\n      vm: vm, // to automatically update the html. Default: $rootScope\n      url: '/api/containers/' + vm.Container + '/upload',\n      // formData: [{\n      //   key: 'value'\n      // }]\n    });\n\n    // ADDING FILTERS\n    // uploader.filters.push({\n    //   name: 'filterName',\n    //   fn: function(item, options) { // second user filter\n    //     console.info('filter2');\n    //     return true;\n    //   }\n    // });\n\n    // REGISTER HANDLERS\n    // --------------------\n    // uploader.onAfterAddingFile = function(item) {\n    //   console.info('After adding a file', item);\n    // };\n    // // --------------------\n    // uploader.onAfterAddingAll = function(items) {\n    //   console.info('After adding all files', items);\n    // };\n    // // --------------------\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\n    //   console.info('When adding a file failed', item);\n    // };\n    // // --------------------\n    // uploader.onBeforeUploadItem = function(item) {\n    //   console.info('Before upload', item);\n    // };\n    // // --------------------\n    // uploader.onProgressItem = function(item, progress) {\n    //   console.info('Progress: ' + progress, item);\n    // };\n    // // --------------------\n    // uploader.onProgressAll = function(progress) {\n    //   console.info('Total progress: ' + progress);\n    // };\n    // --------------------\n    // uploader.onSuccessItem = function(item, response, status, headers) {\n    //   console.info('Success', response, status, headers);\n    //   vm.$broadcast('uploadCompleted', item);\n    // };\n    // --------------------\n    uploader.onErrorItem = function(item, response, status, headers) {\n      item.error = response.error;\n      // console.info('Error', response, status, headers);\n    };\n    // // --------------------\n    // uploader.onCancelItem = function(item, response, status, headers) {\n    //   console.info('Cancel', response, status);\n    // };\n    // // --------------------\n    // uploader.onCompleteItem = function(item, response, status, headers) {\n    //   console.info('Complete', response, status, headers);\n    // };\n    // // --------------------\n    // uploader.onCompleteAll = function() {\n    //   console.info('Complete all');\n    // };\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app.contacts')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.contacts',\n      config: {\n        abstract: true,\n        url: \"/contacts\",\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'app.contacts.overview',\n      config: {\n        title: 'Contacts Overview',\n        url: \"/\",\n        templateUrl: 'src/contacts/overview/view.html',\n        controller: 'ContactsOverviewController',\n      }\n    }, {\n      state: 'app.contacts.person',\n      config: {\n        title: 'Person',\n        url: \"/person/:id\",\n        templateUrl: 'src/contacts/person/view.html',\n        controller: 'ContactsPersonController',\n      }\n    }];\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .factory('ContactsModals', ContactsModals);\n\n  ContactsModals.$inject = ['modalHelper'];\n\n  function ContactsModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddPerson\",\n        config: {\n          templateUrl: 'src/contacts/addperson/view.html',\n          controller: \"ContactsAddPersonController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddCompany\",\n        config: {\n          templateUrl: 'src/contacts/addcompany/view.html',\n          controller: \"ContactsAddCompanyController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddEvent\",\n        config: {\n          templateUrl: 'src/contacts/addevent/view.html',\n          controller: \"ContactsAddEventController\",\n        }\n      }, {\n        modal: \"ExportImport\",\n        config: {\n          templateUrl: 'src/contacts/exportimport/view.html',\n          controller: \"ContactsExportImportController\",\n        }\n      }];\n    }\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsTopMenuController.$inject = [\"$state\", \"ContactsModals\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\n\n  /* @ngInject */\n  function ContactsTopMenuController($state, ContactsModals) {\n    var vm = this;\n\n    vm.AddCompany = AddCompany;\n    vm.AddPerson = AddPerson;\n    vm.AddEvent = AddEvent;\n    vm.ExportImport = ExportImport;\n\n    activate();\n\n    function activate() {\n\n    }\n\n    function AddCompany() {\n      ContactsModals\n        .AddCompany()\n        .then(function(response) {\n          $state.go(\"app.contacts.company\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddPerson() {\n      ContactsModals\n        .AddPerson()\n        .then(function(response) {\n          $state.go(\"app.contacts.person\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddEvent() {\n      ContactsModals\n        .AddEvent()\n        .then(function(response) {\n          $state.go(\"app.contacts.events.event\", {\n            id: response.id\n          });\n        });\n    }\n\n    function ExportImport() {\n      ContactsModals\n        .ExportImport()\n        .then(function() {});\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsOverviewController.$inject = [\"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\n\n  /* @ngInject */\n  function ContactsOverviewController(Company) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _getAccessed();\n    }\n\n    function _getAccessed() {\n      vm.loading_accessed = true;\n      Company.find({\n          filter: {\n            limit: 10,\n            order: \"lastAccess DESC\",\n          }\n        })\n        .$promise\n        .then(function(_companies) {\n          vm.accessed = _companies;\n        })\n        .finally(function() {\n          vm.loading_accessed = false;\n        });\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsContactController\", ContactsContactController);\n\n  /* @ngInject */\n  function ContactsContactController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsAddPersonController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\n\n  /* @ngInject */\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter:{\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {}\n\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsAddCompanyController.$inject = [\"$uibModalInstance\", \"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\n\n  /* @ngInject */\n  function ContactsAddCompanyController($uibModalInstance, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter: {\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {\n      Company\n        .create(vm.Company)\n        .$promise\n        .then(function(_company) {\n          $uibModalInstance.close(_company);\n        });\n    }\n\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app._common')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates(), \"/\");\n  }\n\n  function getStates() {\n    return [{\n      state: 'app',\n      config: {\n        abstract: true,\n        resolve: {\n          isAuthenticated: function($state, User, $timeout) {\n            $timeout(function() {\n              if (!User.isAuthenticated()) {\n                $state.go(\"auth.login\");\n                return false;\n              }\n            });\n          }\n        },\n        views: {\n          \"\": {\n            templateUrl: 'src/_common/views/layout.html',\n            controller: function(User) {\n              var vm = this;\n\n              User\n                .getCurrent()\n                .$promise\n                .then(function(_user) {\n                  vm.username = _user.username;\n                });\n\n            },\n          },\n          \"menu-contacts@app\": {\n            templateUrl: 'src/contacts/topmenu/view.html',\n            controller: \"ContactsTopMenuController\",\n          },\n          // \"menu-contacts@app\": {\n          //   templateUrl: 'src/contacts/topmenu/view.html',\n          //   controller: \"ContactsTopMenuController\",\n          // },\n        }\n      }\n    }];\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  SettingsService.$inject = [\"$resource\"];\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  appRun.$inject = [\"routerHelper\"];\n  angular\n    .module('app.settings')\n    .run(appRun);\n\n  /* @ngInject */\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.settings',\n      config: {\n        url: '/settings',\n        controller: \"SettingsController\",\n        templateUrl: 'src/settings/overview/view.html',\n      }\n    }];\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app.dashboard')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.dashboard',\n      config: {\n        title: 'Dashboard',\n        url: \"/\",\n        templateUrl: 'src/dashboard/view.html',\n        controller: 'DashboardController',\n      }\n    }];\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .controller(\"DashboardController\", DashboardController);\n\n  /* @ngInject */\n  function DashboardController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.news = _.sortBy([{\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\n        \"content\": \"Tempor ut qui non mollit qui.\",\n        \"title\": \"ea enim veniam laboris ullamco\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\n        \"title\": \"cillum aute deserunt labore est\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\n        \"title\": \"velit occaecat adipisicing tempor sit\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\n        \"title\": \"non do ipsum et cillum\",\n        \"url\": \"http://google.com\"\n      }], 'date');\n    }\n\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .factory('CompanyModals', CompanyModals);\n\n  CompanyModals.$inject = ['modalHelper'];\n\n  function CompanyModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"EditLogo\",\n        config: {\n          templateUrl: 'src/contacts/company/editlogo/view.html',\n          controller: \"ContactsCompanyEditLogoController\",\n          size:\"md\",\n        }\n      }];\n    }\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\n\n  /* @ngInject */\n  function ContactsCompanyController($stateParams, Company, CompanyTabs, CompanyModals) {\n    var vm = this;\n\n    vm.Tabs = CompanyTabs;\n\n    vm.EditLogo = EditLogo;\n\n    vm.Print = function() {\n      var docDefinition = {\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\n      };\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\n      //\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\n\n      // open the PDF in a new window\n      pdfMake.createPdf(docDefinition).open();\n\n      // print the PDF (temporarily Chrome-only)\n      // pdfMake.createPdf(docDefinition).print();\n\n      // download the PDF (temporarily Chrome-only)\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\n    }\n\n    activate();\n\n    function activate() {\n      vm.Company = Company.findById({\n        id: $stateParams.id,\n      });\n    }\n\n    function EditLogo() {\n      \n      CompanyModals\n        .EditLogo({\n          Company: vm.Company\n        });\n    }\n\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .constant(\"CompanyTabs\", [{\n      heading: {\n        icon: \"bars\",\n        title: 'Overview'\n      },\n      route: 'app.contacts.company.profile.overview',\n    }, {\n      heading: {\n        icon: \"calendar\",\n        class: \"hidden-xs\",\n        title: 'Events'\n      },\n      route: 'app.contacts.company.profile.events',\n    }, {\n      heading: {\n        icon: \"money\",\n        class: \"hidden-xs\",\n        title: 'Transactions'\n      },\n      route: 'app.contacts.company.profile.transactions',\n    }, {\n      heading: {\n        icon: \"files-o\",\n        class: \"hidden-xs\",\n        title: 'Files'\n      },\n      route: 'app.contacts.company.profile.files',\n    }]);\n\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\r\n\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadTransactions()\r\n        .then(function() {\r\n          _reloadChart();\r\n        });\r\n    }\r\n\r\n    function _loadTransactions() {\r\n      vm.loading = true;\r\n      return Transaction\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function _reloadChart(groupby) {\r\n\r\n      vm.Chart = {\r\n        labels: [],\r\n        data: [\r\n          []\r\n        ],\r\n        options:{\r\n          bezierCurve : false,\r\n          datasetFill : false,\r\n        }\r\n      };\r\n\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.Chart.labels.push(keydate);\r\n        vm.Chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\n\n  /* @ngInject */\n  function ContactsCompanyPersonsController($stateParams,Person) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadPersons();\n    }\n\n    function _loadPersons() {\n      vm.loading = true;\n      return Person\n        .find({\n          filter: {\n            where: {\n              companyId: $stateParams.id,\n            },\n            order: \"fullname ASC\",\n          }\n        })\n        .$promise\n        .then(function(data) {\n          vm.Persons = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\n\n  /* @ngInject */\n  function ContactsCompanyOverviewController($stateParams,Company) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadCompany();\n    }\n\n    function _loadCompany() {\n      vm.loading = true;\n      return Company\n        .findById({\n          id: $stateParams.id,\n          filter: {\n            include: [\"persons\"],\n          }\n        })\n        .$promise\n        .then(function(data) {\n          vm.Company = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\n\n  /* @ngInject */\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n\n      vm.loading = true;\n\n      vm.center = {};\n      vm.markers = {};\n\n      Company.findById({\n          id: $stateParams.id,\n        })\n        .$promise\n        .then(function(company) {\n          vm.Company = company;\n\n          $timeout(function() {\n\n            vm.center = {\n              lat: parseFloat(company.location.lat),\n              lng: parseFloat(company.location.lon),\n              zoom: 14,\n            };\n            vm.markers = {\n              company: {\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\n                lat: parseFloat(company.location.lat),\n                lng: parseFloat(company.location.lon),\n                opacity: 0.8,\n                focus: true,\n              }\n            };\n\n            vm.loading = false;\n\n          }, 1000);\n\n        });\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\n\n  /* @ngInject */\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\n    var vm = this;\n\n    vm.container = $stateParams.id;\n    vm.UploadFiles = UploadFiles;\n    // vm.Download = Download;\n\n    activate();\n\n    function activate() {\n      _loadFiles();\n    }\n\n    function UploadFiles() {\n      FilesModals\n        .AddFiles({\n          Label: \"Company\",\n          Container: vm.container\n        })\n        .then(function() {\n          _loadFiles();\n        });\n    }\n\n    //\n    // function Download(file) {\n    //   Container\n    //     .download({\n    //       container: vm.container,\n    //       file: file,\n    //     })\n    //     .$promise\n    //     .then(function(data) {\n    //       console.log(data);\n    //     });\n    // }\n\n    function _loadFiles() {\n      vm.loading = true;\n      return Container\n        .getFiles({\n          container: vm.container,\n        })\n        .$promise\n        .then(function(data) {\n          vm.Files = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyEditLogoController\", ContactsCompanyEditLogoController);\n\n  /* @ngInject */\n  function ContactsCompanyEditLogoController($uibModalInstance, ModalParams, Company, FileUploader) {\n    var vm = this;\n\n    vm.Company = ModalParams.Company;\n    vm.Uploader = new FileUploader({\n      vm: vm,\n      url: '/api/Containers/' + vm.Company.id + '/upload',\n    });\n    vm.Uploader.onCompleteItem = function(item, response, status, headers) {\n      vm.Company.logo = '/api/Containers/' + vm.Company.id + '/download/' + item.file.name;\n      Company.upsert(vm.Company);\n    };\n    vm.Uploader.onAfterAddingFile = function(item) {\n      // console.info('After adding a file', item);\n      // console.info(vm.Uploader.queue);\n    };\n    vm.Save = Save;\n\n    activate();\n\n\n    function Upload() {}\n\n\n    function activate() {\n\n    }\n\n    function Save() {\n      vm.Uploader.uploadItem(0);\n    }\n\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .provider('configHelper', configHelperProvider);\n\n  /* @ngInject */\n  function configHelperProvider() {\n    /* jshint validthis:true */\n    this.$get = ConfigHelper;\n\n    // $locationProvider.html5Mode(true);\n\n    ConfigHelper.$inject = [];\n\n    function ConfigHelper() {\n\n      var service = {\n        notifyConfig: notifyConfig\n      };\n\n      return service;\n\n      //function notifyConfig() {}\n      function notifyConfig(configName, message) {\n        message = message || {};\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\n      }\n\n    }\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('numberFixedLen', numberFixedLen)\n\n  /* @ngInject */\n  function numberFixedLen() {\n    return function(a, b) {\n      return (1e4 + a + \"\").slice(-b)\n    }\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('join', join)\n\n  /* @ngInject */\n  function join() {\n    return function(array, separator) {\n      if (!array) {\n        return '';\n      }\n      if (!separator) {\n        separator = ', ';\n      }\n      return array.join(separator);\n    };\n  }\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fromNow', fromNow)\n\n  /* @ngInject */\n  function fromNow() {\n    return function(date) {\n      return moment(date).fromNow();\n    }\n  }\n  \n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fileicon', fileicon)\n\n  /* @ngInject */\n  function fileicon() {\n    var _icons = {\n      \"application/pdf\": \"fa-file-pdf-o\",\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\n      \"application/x-msword\": \"fa-file-word-o\",\n      \"application/x-msexcel\": \"fa-file-excel-o\",\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\n      \"image/gif\": \"fa-file-image-o\",\n      \"image/png\": \"fa-file-image-o\",\n      \"image/tiff\": \"fa-file-image-o\",\n      \"image/jpeg\": \"fa-file-image-o\",\n      \"video/avi\": \"fa-file-video-o\",\n      \"video/mpeg\": \"fa-file-video-o\",\n      \"video/msvideo\": \"fa-file-video-o\",\n      \"video/quicktime\": \"fa-file-video-o\",\n      \"application/zip\": \"fa-file-zip-o\"\n    };\n    return function(a) {\n      return _icons[a] || \"fa-file-o\";\n    }\n  }\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('bytes', bytes)\n\n  /* @ngInject */\n  function bytes() {\n    return function(bytes, precision) {\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\n      if (bytes === 0) return 'Empty';\n      if (typeof precision === 'undefined') precision = 1;\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\n    }\n  }\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .directive('ngThumb', ngThumb)\n\n  /* @ngInject */\n  function ngThumb($window) {\n    var helper = {\n      support: !!($window.FileReader && $window.CanvasRenderingContext2D),\n      isFile: function(item) {\n        return angular.isObject(item) && item instanceof $window.File;\n      },\n      isImage: function(file) {\n        var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';\n        return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\n      }\n    };\n\n    return {\n      restrict: 'A',\n      template: '<canvas/>',\n      link: function(scope, element, attributes) {\n        if (!helper.support) {\n          console.log(\"ngThumb: FileReader not supported\");\n          return;\n        }\n\n\n        var params = scope.$eval(attributes.ngThumb);\n\n        console.log(\"ngThumb: params\", params);\n        if (!helper.isFile(params.file)) {\n          console.log(\"ngThumb: params.file is not a file\");\n          return;\n        }\n\n        if (!helper.isImage(params.file)) {\n          console.log(\"ngThumb: params.file is not an image\");\n          return;\n        }\n\n        var canvas = element.find('canvas');\n        var reader = new FileReader();\n\n        reader.onload = onLoadFile;\n        reader.readAsDataURL(params.file);\n\n        function onLoadFile(event) {\n          var img = new Image();\n          img.onload = onLoadImage;\n          img.src = event.target.result;\n        }\n\n        function onLoadImage() {\n          var width = params.width || this.width / this.height * params.height;\n          var height = params.height || this.height / this.width * params.width;\n          canvas.attr({\n            width: width,\n            height: height\n          });\n          canvas[0].getContext('2d').drawImage(this, 0, 0, width, height);\n        }\n      }\n    };\n  }\n})();\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .constant(\"topmenu\", [{\n      name: \"States\",\n      link: \"#\",\n      subtree: [{\n        name: \"state 1\",\n        link: \"state1\"\n      }, {\n        name: \"state 2\",\n        link: \"state2\"\n      }]\n    }])\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.files')\n    .factory('FilesModals', FilesModals);\n\n  FilesModals.$inject = ['modalHelper'];\n\n  function FilesModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddFiles\",\n        config: {\n          templateUrl: 'src/files/add/view.html',\n          controller: \"FilesAddController\",\n          size:\"md\",\n        }\n      }];\n    }\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.files')\n    .controller(\"FilesAddController\", FilesAddController);\n\n  /* @ngInject */\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\n    var vm = this;\n\n    vm.Label = ModalParams.Label;\n    vm.Container = ModalParams.Container;\n\n    vm.Upload = Upload;\n\n    activate();\n\n    function activate() {}\n\n\n    function Upload() {}\n\n    var uploader = vm.uploader = new FileUploader({\n      vm: vm, // to automatically update the html. Default: $rootScope\n      url: '/api/containers/' + vm.Container + '/upload',\n      // formData: [{\n      //   key: 'value'\n      // }]\n    });\n\n    // ADDING FILTERS\n    // uploader.filters.push({\n    //   name: 'filterName',\n    //   fn: function(item, options) { // second user filter\n    //     console.info('filter2');\n    //     return true;\n    //   }\n    // });\n\n    // REGISTER HANDLERS\n    // --------------------\n    // uploader.onAfterAddingFile = function(item) {\n    //   console.info('After adding a file', item);\n    // };\n    // // --------------------\n    // uploader.onAfterAddingAll = function(items) {\n    //   console.info('After adding all files', items);\n    // };\n    // // --------------------\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\n    //   console.info('When adding a file failed', item);\n    // };\n    // // --------------------\n    // uploader.onBeforeUploadItem = function(item) {\n    //   console.info('Before upload', item);\n    // };\n    // // --------------------\n    // uploader.onProgressItem = function(item, progress) {\n    //   console.info('Progress: ' + progress, item);\n    // };\n    // // --------------------\n    // uploader.onProgressAll = function(progress) {\n    //   console.info('Total progress: ' + progress);\n    // };\n    // --------------------\n    // uploader.onSuccessItem = function(item, response, status, headers) {\n    //   console.info('Success', response, status, headers);\n    //   vm.$broadcast('uploadCompleted', item);\n    // };\n    // --------------------\n    uploader.onErrorItem = function(item, response, status, headers) {\n      item.error = response.error;\n      // console.info('Error', response, status, headers);\n    };\n    // // --------------------\n    // uploader.onCancelItem = function(item, response, status, headers) {\n    //   console.info('Cancel', response, status);\n    // };\n    // // --------------------\n    // uploader.onCompleteItem = function(item, response, status, headers) {\n    //   console.info('Complete', response, status, headers);\n    // };\n    // // --------------------\n    // uploader.onCompleteAll = function() {\n    //   console.info('Complete all');\n    // };\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.contacts',\n      config: {\n        abstract: true,\n        url: \"/contacts\",\n        template: '<ui-view/>',\n      }\n    }, {\n      state: 'app.contacts.overview',\n      config: {\n        title: 'Contacts Overview',\n        url: \"/\",\n        templateUrl: 'src/contacts/overview/view.html',\n        controller: 'ContactsOverviewController',\n      }\n    }, {\n      state: 'app.contacts.person',\n      config: {\n        title: 'Person',\n        url: \"/person/:id\",\n        templateUrl: 'src/contacts/person/view.html',\n        controller: 'ContactsPersonController',\n      }\n    }];\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .factory('ContactsModals', ContactsModals);\n\n  ContactsModals.$inject = ['modalHelper'];\n\n  function ContactsModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddPerson\",\n        config: {\n          templateUrl: 'src/contacts/addperson/view.html',\n          controller: \"ContactsAddPersonController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddCompany\",\n        config: {\n          templateUrl: 'src/contacts/addcompany/view.html',\n          controller: \"ContactsAddCompanyController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddEvent\",\n        config: {\n          templateUrl: 'src/contacts/addevent/view.html',\n          controller: \"ContactsAddEventController\",\n        }\n      }, {\n        modal: \"ExportImport\",\n        config: {\n          templateUrl: 'src/contacts/exportimport/view.html',\n          controller: \"ContactsExportImportController\",\n        }\n      }];\n    }\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\n\n  /* @ngInject */\n  function ContactsTopMenuController($state, ContactsModals) {\n    var vm = this;\n\n    vm.AddCompany = AddCompany;\n    vm.AddPerson = AddPerson;\n    vm.AddEvent = AddEvent;\n    vm.ExportImport = ExportImport;\n\n    activate();\n\n    function activate() {\n\n    }\n\n    function AddCompany() {\n      ContactsModals\n        .AddCompany()\n        .then(function(response) {\n          $state.go(\"app.contacts.company\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddPerson() {\n      ContactsModals\n        .AddPerson()\n        .then(function(response) {\n          $state.go(\"app.contacts.person\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddEvent() {\n      ContactsModals\n        .AddEvent()\n        .then(function(response) {\n          $state.go(\"app.contacts.events.event\", {\n            id: response.id\n          });\n        });\n    }\n\n    function ExportImport() {\n      ContactsModals\n        .ExportImport()\n        .then(function() {});\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\n\n  /* @ngInject */\n  function ContactsOverviewController(Company) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _getAccessed();\n    }\n\n    function _getAccessed() {\n      vm.loading_accessed = true;\n      Company.find({\n          filter: {\n            limit: 10,\n            order: \"lastAccess DESC\",\n          }\n        })\n        .$promise\n        .then(function(_companies) {\n          vm.accessed = _companies;\n        })\n        .finally(function() {\n          vm.loading_accessed = false;\n        });\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsContactController\", ContactsContactController);\n\n  /* @ngInject */\n  function ContactsContactController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\n\n  /* @ngInject */\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter:{\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {}\n\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\n\n  /* @ngInject */\n  function ContactsAddCompanyController($uibModalInstance, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter: {\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {\n      Company\n        .create(vm.Company)\n        .$promise\n        .then(function(_company) {\n          $uibModalInstance.close(_company);\n        });\n    }\n\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates(), \"/\");\n  }\n\n  function getStates() {\n    return [{\n      state: 'app',\n      config: {\n        abstract: true,\n        resolve: {\n          isAuthenticated: function($state, User, $timeout) {\n            $timeout(function() {\n              if (!User.isAuthenticated()) {\n                $state.go(\"auth.login\");\n                return false;\n              }\n            });\n          }\n        },\n        views: {\n          \"\": {\n            templateUrl: 'src/_common/views/layout.html',\n            controller: function(User) {\n              var vm = this;\n\n              User\n                .getCurrent()\n                .$promise\n                .then(function(_user) {\n                  vm.username = _user.username;\n                });\n\n            },\n          },\n          \"menu-contacts@app\": {\n            templateUrl: 'src/contacts/topmenu/view.html',\n            controller: \"ContactsTopMenuController\",\n          },\n          // \"menu-contacts@app\": {\n          //   templateUrl: 'src/contacts/topmenu/view.html',\n          //   controller: \"ContactsTopMenuController\",\n          // },\n        }\n      }\n    }];\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.settings')\n    .run(appRun);\n\n  /* @ngInject */\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.settings',\n      config: {\n        url: '/settings',\n        controller: \"SettingsController\",\n        templateUrl: 'src/settings/overview/view.html',\n      }\n    }];\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.dashboard',\n      config: {\n        title: 'Dashboard',\n        url: \"/\",\n        templateUrl: 'src/dashboard/view.html',\n        controller: 'DashboardController',\n      }\n    }];\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .controller(\"DashboardController\", DashboardController);\n\n  /* @ngInject */\n  function DashboardController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.news = _.sortBy([{\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\n        \"content\": \"Tempor ut qui non mollit qui.\",\n        \"title\": \"ea enim veniam laboris ullamco\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\n        \"title\": \"cillum aute deserunt labore est\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\n        \"title\": \"velit occaecat adipisicing tempor sit\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\n        \"title\": \"non do ipsum et cillum\",\n        \"url\": \"http://google.com\"\n      }], 'date');\n    }\n\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()"],"sourceRoot":"/source/"}