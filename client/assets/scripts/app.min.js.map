{"version":3,"sources":["contacts/_module.js","contacts/company/transactions/controller.js","app.min.js","contacts/company/_common/routes.js","contacts/company/_common/controller.js","contacts/company/_common/constants.js","contacts/company/persons/controller.js","contacts/company/overview/controller.js","contacts/company/map/controller.js","contacts/company/files/controller.js","contacts/company/events/controller.js","_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/join.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/constants/topmenu.js","app.js","_common/configs/rootscope.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","settings/changepassword/controller.js","files/_module.js","files/_common/modals.js","files/add/controller.js","contacts/_common/routes.js","contacts/_common/modals.js","contacts/topmenu/controller.js","contacts/overview/controller.js","contacts/contact/controller.js","contacts/addperson/controller.js","contacts/addcompany/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","static/_module.js","static/routes.js","settings/service.js","settings/routes.js","settings/modals.js","dashboard/_module.js","dashboard/routes.js","dashboard/controller.js","auth/routes.js","auth/interceptor.js","auth/constants.js","run.js","config.js"],"names":["angular","module","ContactsCompanyTransactionsController","$stateParams","Transaction","activate","_loadTransactions","then","_reloadChart","vm","loading","find","filter","where","companyId","id","order","$promise","data","_total","_","each","transaction","amount","total","Transactions","groupby","Chart","labels","options","bezierCurve","datasetFill","grouped_transactions","groupBy","moment","date","format","transactions","keydate","_date_total","reduce","Math","round","push","this","$inject","controller","RoutesConfig","configHelper","routerHelper","configureStates","getStates","state","config","abstract","url","template","title","templateUrl","run","ContactsCompanyController","Company","CompanyTabs","findById","Tabs","Print","docDefinition","content","pdfMake","createPdf","open","constant","heading","icon","route","class","ContactsCompanyPersonsController","Person","_loadPersons","Persons","ContactsCompanyOverviewController","_loadCompany","include","ContactsCompanyMapController","$timeout","center","markers","company","lat","parseFloat","location","lng","lon","zoom","message","name","street","opacity","focus","ContactsCompanyFilesController","Container","FilesModals","_loadFiles","UploadFiles","AddFiles","Label","container","getFiles","Files","ContactsCompanyEventsController","Event","_loadEvents","reload","gt","_ranges","params","range","from","lt","to","Events","WEEK","subtract","add","HALFMONTH","MONTH","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","states","otherwisePath","forEach","controllerAs","extend","views","item","hasOtherwise","otherwise","get","service","$get","provider","modalHelperProvider","modalHelper","$uibModal","$q","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","result","configHelperProvider","ConfigHelper","notifyConfig","configName","console","log","numberFixedLen","a","b","slice","join","array","separator","fromNow","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","isFinite","units","number","floor","pow","toFixed","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","on","$apply","v","val","$","$setValidity","directive","ngPrint","element","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","body","errSrc","ngSrc","$set","bind","remove","src","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","subtree","appRun","$rootScope","APP","$on","event","toState","description","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","useXDomain","headers","common","SettingsController","SettingsService","SettingsModals","ChangePassword","go","ref","ChangePasswordController","$uibModalInstance","User","toaster","Save","prototype$updateAttributes","getCurrentId","password","Password","user","pop","close","getModals","size","factory","FilesAddController","FileUploader","Upload","uploader","onErrorItem","status","error","ContactsModals","ContactsTopMenuController","AddCompany","AddPerson","AddEvent","ExportImport","ContactsOverviewController","_getAccessed","loading_accessed","limit","_companies","accessed","ContactsContactController","ContactsAddPersonController","loadCompanies","Companies","ContactsAddCompanyController","create","_company","AuthLoginController","LoginMessages","_signMessage","toUpperCase","SignIn","Alert","login","copy","credentials","rejection","code","isAuthenticated","","getCurrent","_user","username","menu-contacts@app","libs","href","$resource","GetSettings","Service","chain","rows","map","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","DashboardController","news","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","AuthInterceptorConfig","interceptors","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","evt","redirectTo","version","repository","author","email","client"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', [\r\n      'leaflet-directive',\r\n    ]);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\r\n\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadTransactions()\r\n        .then(function() {\r\n          _reloadChart();\r\n        });\r\n    }\r\n\r\n    function _loadTransactions() {\r\n      vm.loading = true;\r\n      return Transaction\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function _reloadChart(groupby) {\r\n\r\n      vm.Chart = {\r\n        labels: [],\r\n        data: [\r\n          []\r\n        ],\r\n        options:{\r\n          bezierCurve : false,\r\n          datasetFill : false,\r\n        }\r\n      };\r\n\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.Chart.labels.push(keydate);\r\n        vm.Chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', [\r\n      'leaflet-directive',\r\n    ]);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyTransactionsController.$inject = [\"$stateParams\", \"Transaction\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\r\n\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadTransactions()\r\n        .then(function() {\r\n          _reloadChart();\r\n        });\r\n    }\r\n\r\n    function _loadTransactions() {\r\n      vm.loading = true;\r\n      return Transaction\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function _reloadChart(groupby) {\r\n\r\n      vm.Chart = {\r\n        labels: [],\r\n        data: [\r\n          []\r\n        ],\r\n        options:{\r\n          bezierCurve : false,\r\n          datasetFill : false,\r\n        }\r\n      };\r\n\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.Chart.labels.push(keydate);\r\n        vm.Chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        template:\"<ui-view/>\",\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.map\",\r\n      config: {\r\n        title: \"map\",\r\n        url: \"/map\",\r\n        templateUrl: 'src/contacts/company/map/view.html',\r\n        controller: 'ContactsCompanyMapController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile\",\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/contacts/company/_common/_profile.html',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyController.$inject = [\"$stateParams\", \"Company\", \"CompanyTabs\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company, CompanyTabs) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = CompanyTabs\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .constant(\"CompanyTabs\", [{\r\n      heading: {\r\n        icon: \"bars\",\r\n        title: 'Overview'\r\n      },\r\n      route: 'app.contacts.company.profile.overview',\r\n    }, {\r\n      heading: {\r\n        icon: \"calendar\",\r\n        class: \"hidden-xs\",\r\n        title: 'Events'\r\n      },\r\n      route: 'app.contacts.company.profile.events',\r\n    }, {\r\n      heading: {\r\n        icon: \"money\",\r\n        class: \"hidden-xs\",\r\n        title: 'Transactions'\r\n      },\r\n      route: 'app.contacts.company.profile.transactions',\r\n    }, {\r\n      heading: {\r\n        icon: \"files-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Files'\r\n      },\r\n      route: 'app.contacts.company.profile.files',\r\n    }]);\r\n\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyPersonsController.$inject = [\"$stateParams\", \"Person\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController($stateParams,Person) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadPersons();\r\n    }\r\n\r\n    function _loadPersons() {\r\n      vm.loading = true;\r\n      return Person\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"fullname ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Persons = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyOverviewController.$inject = [\"$stateParams\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController($stateParams,Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadCompany();\r\n    }\r\n\r\n    function _loadCompany() {\r\n      vm.loading = true;\r\n      return Company\r\n        .findById({\r\n          id: $stateParams.id,\r\n          filter: {\r\n            include: [\"persons\"],\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Company = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyMapController.$inject = [\"$stateParams\", \"Company\", \"$timeout\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      vm.loading = true;\r\n\r\n      vm.center = {};\r\n      vm.markers = {};\r\n\r\n      Company.findById({\r\n          id: $stateParams.id,\r\n        })\r\n        .$promise\r\n        .then(function(company) {\r\n          vm.Company = company;\r\n\r\n          $timeout(function() {\r\n\r\n            vm.center = {\r\n              lat: parseFloat(company.location.lat),\r\n              lng: parseFloat(company.location.lon),\r\n              zoom: 14,\r\n            };\r\n            vm.markers = {\r\n              company: {\r\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\r\n                lat: parseFloat(company.location.lat),\r\n                lng: parseFloat(company.location.lon),\r\n                opacity: 0.8,\r\n                focus: true,\r\n              }\r\n            };\r\n\r\n            vm.loading = false;\r\n\r\n          }, 1000);\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyFilesController.$inject = [\"$stateParams\", \"Container\", \"FilesModals\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\r\n    var vm = this;\r\n\r\n    vm.container = $stateParams.id;\r\n    vm.UploadFiles = UploadFiles;\r\n    // vm.Download = Download;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadFiles();\r\n    }\r\n\r\n    function UploadFiles() {\r\n      FilesModals\r\n        .AddFiles({\r\n          Label: \"Company\",\r\n          Container: vm.container\r\n        })\r\n        .then(function() {\r\n          _loadFiles();\r\n        });\r\n    }\r\n\r\n    //\r\n    // function Download(file) {\r\n    //   Container\r\n    //     .download({\r\n    //       container: vm.container,\r\n    //       file: file,\r\n    //     })\r\n    //     .$promise\r\n    //     .then(function(data) {\r\n    //       console.log(data);\r\n    //     });\r\n    // }\r\n\r\n    function _loadFiles() {\r\n      vm.loading = true;\r\n      return Container\r\n        .getFiles({\r\n          container: vm.container,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Files = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyEventsController.$inject = [\"$stateParams\", \"Event\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  routerHelperProvider.$inject = [\"$locationProvider\", \"$stateProvider\", \"$urlRouterProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n  \r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (bytes === 0) return 'Empty';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  SettingsController.$inject = [\"$state\", \"SettingsService\", \"SettingsModals\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ChangePasswordController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"User\", \"toaster\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .factory('FilesModals', FilesModals);\r\n\r\n  FilesModals.$inject = ['modalHelper'];\r\n\r\n  function FilesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddFiles\",\r\n        config: {\r\n          templateUrl: 'src/files/add/view.html',\r\n          controller: \"FilesAddController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  FilesAddController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"FileUploader\"];\r\n  angular\r\n    .module('app.files')\r\n    .controller(\"FilesAddController\", FilesAddController);\r\n\r\n  /* @ngInject */\r\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Label = ModalParams.Label;\r\n    vm.Container = ModalParams.Container;\r\n\r\n    vm.Upload = Upload;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n\r\n    function Upload() {}\r\n\r\n    var uploader = vm.uploader = new FileUploader({\r\n      vm: vm, // to automatically update the html. Default: $rootScope\r\n      url: '/api/containers/' + vm.Container + '/upload',\r\n      // formData: [{\r\n      //   key: 'value'\r\n      // }]\r\n    });\r\n\r\n    // ADDING FILTERS\r\n    // uploader.filters.push({\r\n    //   name: 'filterName',\r\n    //   fn: function(item, options) { // second user filter\r\n    //     console.info('filter2');\r\n    //     return true;\r\n    //   }\r\n    // });\r\n\r\n    // REGISTER HANDLERS\r\n    // --------------------\r\n    // uploader.onAfterAddingFile = function(item) {\r\n    //   console.info('After adding a file', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onAfterAddingAll = function(items) {\r\n    //   console.info('After adding all files', items);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\r\n    //   console.info('When adding a file failed', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onBeforeUploadItem = function(item) {\r\n    //   console.info('Before upload', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressItem = function(item, progress) {\r\n    //   console.info('Progress: ' + progress, item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressAll = function(progress) {\r\n    //   console.info('Total progress: ' + progress);\r\n    // };\r\n    // --------------------\r\n    // uploader.onSuccessItem = function(item, response, status, headers) {\r\n    //   console.info('Success', response, status, headers);\r\n    //   vm.$broadcast('uploadCompleted', item);\r\n    // };\r\n    // --------------------\r\n    uploader.onErrorItem = function(item, response, status, headers) {\r\n      item.error = response.error;\r\n      // console.info('Error', response, status, headers);\r\n    };\r\n    // // --------------------\r\n    // uploader.onCancelItem = function(item, response, status, headers) {\r\n    //   console.info('Cancel', response, status);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteItem = function(item, response, status, headers) {\r\n    //   console.info('Complete', response, status, headers);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteAll = function() {\r\n    //   console.info('Complete all');\r\n    // };\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/contacts\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.overview',\r\n      config: {\r\n        title: 'Contacts Overview',\r\n        url: \"/\",\r\n        templateUrl: 'src/contacts/overview/view.html',\r\n        controller: 'ContactsOverviewController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.person',\r\n      config: {\r\n        title: 'Person',\r\n        url: \"/person/:id\",\r\n        templateUrl: 'src/contacts/person/view.html',\r\n        controller: 'ContactsPersonController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .factory('ContactsModals', ContactsModals);\r\n\r\n  ContactsModals.$inject = ['modalHelper'];\r\n\r\n  function ContactsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddPerson\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addperson/view.html',\r\n          controller: \"ContactsAddPersonController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddCompany\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addcompany/view.html',\r\n          controller: \"ContactsAddCompanyController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddEvent\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addevent/view.html',\r\n          controller: \"ContactsAddEventController\",\r\n        }\r\n      }, {\r\n        modal: \"ExportImport\",\r\n        config: {\r\n          templateUrl: 'src/contacts/exportimport/view.html',\r\n          controller: \"ContactsExportImportController\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsTopMenuController.$inject = [\"$state\", \"ContactsModals\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n  /* @ngInject */\r\n  function ContactsTopMenuController($state, ContactsModals) {\r\n    var vm = this;\r\n\r\n    vm.AddCompany = AddCompany;\r\n    vm.AddPerson = AddPerson;\r\n    vm.AddEvent = AddEvent;\r\n    vm.ExportImport = ExportImport;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function AddCompany() {\r\n      ContactsModals\r\n        .AddCompany()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.company\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddPerson() {\r\n      ContactsModals\r\n        .AddPerson()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.person\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddEvent() {\r\n      ContactsModals\r\n        .AddEvent()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.events.event\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function ExportImport() {\r\n      ContactsModals\r\n        .ExportImport()\r\n        .then(function() {});\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsOverviewController.$inject = [\"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsOverviewController(Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _getAccessed();\r\n    }\r\n\r\n    function _getAccessed() {\r\n      vm.loading_accessed = true;\r\n      Company.find({\r\n          filter: {\r\n            limit: 10,\r\n            order: \"lastAccess DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(_companies) {\r\n          vm.accessed = _companies;\r\n        })\r\n        .finally(function() {\r\n          vm.loading_accessed = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsContactController\", ContactsContactController);\r\n\r\n  /* @ngInject */\r\n  function ContactsContactController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsAddPersonController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsAddCompanyController.$inject = [\"$uibModalInstance\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($uibModalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $uibModalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates(), \"/\");\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        resolve: {\r\n          isAuthenticated: function($state, User, $timeout) {\r\n            $timeout(function() {\r\n              if (!User.isAuthenticated()) {\r\n                $state.go(\"auth.login\");\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n        },\r\n        views: {\r\n          \"\": {\r\n            templateUrl: 'src/_common/views/layout.html',\r\n            controller: function(User) {\r\n              var vm = this;\r\n\r\n              User\r\n                .getCurrent()\r\n                .$promise\r\n                .then(function(_user) {\r\n                  vm.username = _user.username;\r\n                });\r\n\r\n            },\r\n          },\r\n          \"menu-contacts@app\": {\r\n            templateUrl: 'src/contacts/topmenu/view.html',\r\n            controller: \"ContactsTopMenuController\",\r\n          },\r\n          // \"menu-contacts@app\": {\r\n          //   templateUrl: 'src/contacts/topmenu/view.html',\r\n          //   controller: \"ContactsTopMenuController\",\r\n          // },\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  SettingsService.$inject = [\"$resource\"];\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"routerHelper\"];\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.dashboard')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.dashboard',\r\n      config: {\r\n        title: 'Dashboard',\r\n        url: \"/\",\r\n        templateUrl: 'src/dashboard/view.html',\r\n        controller: 'DashboardController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        template:\"<ui-view/>\",\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.map\",\r\n      config: {\r\n        title: \"map\",\r\n        url: \"/map\",\r\n        templateUrl: 'src/contacts/company/map/view.html',\r\n        controller: 'ContactsCompanyMapController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile\",\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/contacts/company/_common/_profile.html',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company, CompanyTabs) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = CompanyTabs\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .constant(\"CompanyTabs\", [{\r\n      heading: {\r\n        icon: \"bars\",\r\n        title: 'Overview'\r\n      },\r\n      route: 'app.contacts.company.profile.overview',\r\n    }, {\r\n      heading: {\r\n        icon: \"calendar\",\r\n        class: \"hidden-xs\",\r\n        title: 'Events'\r\n      },\r\n      route: 'app.contacts.company.profile.events',\r\n    }, {\r\n      heading: {\r\n        icon: \"money\",\r\n        class: \"hidden-xs\",\r\n        title: 'Transactions'\r\n      },\r\n      route: 'app.contacts.company.profile.transactions',\r\n    }, {\r\n      heading: {\r\n        icon: \"files-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Files'\r\n      },\r\n      route: 'app.contacts.company.profile.files',\r\n    }]);\r\n\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController($stateParams,Person) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadPersons();\r\n    }\r\n\r\n    function _loadPersons() {\r\n      vm.loading = true;\r\n      return Person\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"fullname ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Persons = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController($stateParams,Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadCompany();\r\n    }\r\n\r\n    function _loadCompany() {\r\n      vm.loading = true;\r\n      return Company\r\n        .findById({\r\n          id: $stateParams.id,\r\n          filter: {\r\n            include: [\"persons\"],\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Company = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      vm.loading = true;\r\n\r\n      vm.center = {};\r\n      vm.markers = {};\r\n\r\n      Company.findById({\r\n          id: $stateParams.id,\r\n        })\r\n        .$promise\r\n        .then(function(company) {\r\n          vm.Company = company;\r\n\r\n          $timeout(function() {\r\n\r\n            vm.center = {\r\n              lat: parseFloat(company.location.lat),\r\n              lng: parseFloat(company.location.lon),\r\n              zoom: 14,\r\n            };\r\n            vm.markers = {\r\n              company: {\r\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\r\n                lat: parseFloat(company.location.lat),\r\n                lng: parseFloat(company.location.lon),\r\n                opacity: 0.8,\r\n                focus: true,\r\n              }\r\n            };\r\n\r\n            vm.loading = false;\r\n\r\n          }, 1000);\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\r\n    var vm = this;\r\n\r\n    vm.container = $stateParams.id;\r\n    vm.UploadFiles = UploadFiles;\r\n    // vm.Download = Download;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadFiles();\r\n    }\r\n\r\n    function UploadFiles() {\r\n      FilesModals\r\n        .AddFiles({\r\n          Label: \"Company\",\r\n          Container: vm.container\r\n        })\r\n        .then(function() {\r\n          _loadFiles();\r\n        });\r\n    }\r\n\r\n    //\r\n    // function Download(file) {\r\n    //   Container\r\n    //     .download({\r\n    //       container: vm.container,\r\n    //       file: file,\r\n    //     })\r\n    //     .$promise\r\n    //     .then(function(data) {\r\n    //       console.log(data);\r\n    //     });\r\n    // }\r\n\r\n    function _loadFiles() {\r\n      vm.loading = true;\r\n      return Container\r\n        .getFiles({\r\n          container: vm.container,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Files = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n  \r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (bytes === 0) return 'Empty';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .factory('FilesModals', FilesModals);\r\n\r\n  FilesModals.$inject = ['modalHelper'];\r\n\r\n  function FilesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddFiles\",\r\n        config: {\r\n          templateUrl: 'src/files/add/view.html',\r\n          controller: \"FilesAddController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .controller(\"FilesAddController\", FilesAddController);\r\n\r\n  /* @ngInject */\r\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Label = ModalParams.Label;\r\n    vm.Container = ModalParams.Container;\r\n\r\n    vm.Upload = Upload;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n\r\n    function Upload() {}\r\n\r\n    var uploader = vm.uploader = new FileUploader({\r\n      vm: vm, // to automatically update the html. Default: $rootScope\r\n      url: '/api/containers/' + vm.Container + '/upload',\r\n      // formData: [{\r\n      //   key: 'value'\r\n      // }]\r\n    });\r\n\r\n    // ADDING FILTERS\r\n    // uploader.filters.push({\r\n    //   name: 'filterName',\r\n    //   fn: function(item, options) { // second user filter\r\n    //     console.info('filter2');\r\n    //     return true;\r\n    //   }\r\n    // });\r\n\r\n    // REGISTER HANDLERS\r\n    // --------------------\r\n    // uploader.onAfterAddingFile = function(item) {\r\n    //   console.info('After adding a file', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onAfterAddingAll = function(items) {\r\n    //   console.info('After adding all files', items);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\r\n    //   console.info('When adding a file failed', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onBeforeUploadItem = function(item) {\r\n    //   console.info('Before upload', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressItem = function(item, progress) {\r\n    //   console.info('Progress: ' + progress, item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressAll = function(progress) {\r\n    //   console.info('Total progress: ' + progress);\r\n    // };\r\n    // --------------------\r\n    // uploader.onSuccessItem = function(item, response, status, headers) {\r\n    //   console.info('Success', response, status, headers);\r\n    //   vm.$broadcast('uploadCompleted', item);\r\n    // };\r\n    // --------------------\r\n    uploader.onErrorItem = function(item, response, status, headers) {\r\n      item.error = response.error;\r\n      // console.info('Error', response, status, headers);\r\n    };\r\n    // // --------------------\r\n    // uploader.onCancelItem = function(item, response, status, headers) {\r\n    //   console.info('Cancel', response, status);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteItem = function(item, response, status, headers) {\r\n    //   console.info('Complete', response, status, headers);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteAll = function() {\r\n    //   console.info('Complete all');\r\n    // };\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/contacts\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.overview',\r\n      config: {\r\n        title: 'Contacts Overview',\r\n        url: \"/\",\r\n        templateUrl: 'src/contacts/overview/view.html',\r\n        controller: 'ContactsOverviewController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.person',\r\n      config: {\r\n        title: 'Person',\r\n        url: \"/person/:id\",\r\n        templateUrl: 'src/contacts/person/view.html',\r\n        controller: 'ContactsPersonController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .factory('ContactsModals', ContactsModals);\r\n\r\n  ContactsModals.$inject = ['modalHelper'];\r\n\r\n  function ContactsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddPerson\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addperson/view.html',\r\n          controller: \"ContactsAddPersonController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddCompany\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addcompany/view.html',\r\n          controller: \"ContactsAddCompanyController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddEvent\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addevent/view.html',\r\n          controller: \"ContactsAddEventController\",\r\n        }\r\n      }, {\r\n        modal: \"ExportImport\",\r\n        config: {\r\n          templateUrl: 'src/contacts/exportimport/view.html',\r\n          controller: \"ContactsExportImportController\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n  /* @ngInject */\r\n  function ContactsTopMenuController($state, ContactsModals) {\r\n    var vm = this;\r\n\r\n    vm.AddCompany = AddCompany;\r\n    vm.AddPerson = AddPerson;\r\n    vm.AddEvent = AddEvent;\r\n    vm.ExportImport = ExportImport;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function AddCompany() {\r\n      ContactsModals\r\n        .AddCompany()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.company\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddPerson() {\r\n      ContactsModals\r\n        .AddPerson()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.person\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddEvent() {\r\n      ContactsModals\r\n        .AddEvent()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.events.event\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function ExportImport() {\r\n      ContactsModals\r\n        .ExportImport()\r\n        .then(function() {});\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsOverviewController(Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _getAccessed();\r\n    }\r\n\r\n    function _getAccessed() {\r\n      vm.loading_accessed = true;\r\n      Company.find({\r\n          filter: {\r\n            limit: 10,\r\n            order: \"lastAccess DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(_companies) {\r\n          vm.accessed = _companies;\r\n        })\r\n        .finally(function() {\r\n          vm.loading_accessed = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsContactController\", ContactsContactController);\r\n\r\n  /* @ngInject */\r\n  function ContactsContactController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($uibModalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $uibModalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates(), \"/\");\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        resolve: {\r\n          isAuthenticated: function($state, User, $timeout) {\r\n            $timeout(function() {\r\n              if (!User.isAuthenticated()) {\r\n                $state.go(\"auth.login\");\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n        },\r\n        views: {\r\n          \"\": {\r\n            templateUrl: 'src/_common/views/layout.html',\r\n            controller: function(User) {\r\n              var vm = this;\r\n\r\n              User\r\n                .getCurrent()\r\n                .$promise\r\n                .then(function(_user) {\r\n                  vm.username = _user.username;\r\n                });\r\n\r\n            },\r\n          },\r\n          \"menu-contacts@app\": {\r\n            templateUrl: 'src/contacts/topmenu/view.html',\r\n            controller: \"ContactsTopMenuController\",\r\n          },\r\n          // \"menu-contacts@app\": {\r\n          //   templateUrl: 'src/contacts/topmenu/view.html',\r\n          //   controller: \"ContactsTopMenuController\",\r\n          // },\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.dashboard',\r\n      config: {\r\n        title: 'Dashboard',\r\n        url: \"/\",\r\n        templateUrl: 'src/dashboard/view.html',\r\n        controller: 'DashboardController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()"],"sourceRoot":"/source/"}