{"version":3,"sources":["contacts/module.js","contacts/company.view/_common/routes.js","contacts/company.view/_common/modals.js","contacts/company.view/_common/controller.js","contacts/company.view/_common/constants.js","contacts/company.view/transactions/controller.js","contacts/company.view/transactions/constants.js","contacts/company.view/persons/controller.js","contacts/company.view/overview/controller.js","contacts/company.view/map/controller.js","contacts/company.view/files/controller.js","contacts/company.view/editlogo/controller.js","_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/join.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/pushmenu.js","_common/directives/ngthumb.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/directives/adminlte.js","_common/constants/topmenu.js","_common/configs/routes.config.js","_common/configs/location.config.js","_common/configs/http.config.js","users/_module.js","users/_common/routes.js","settings/module.js","users/_common/modals.js","users/overview/controller.js","users/init/controller.js","users/details/controller.js","users/changepassword/controller.js","static/module.js","static/_common/routes.js","settings/_common/service.js","settings/_common/routes.js","settings/_common/modals.js","settings/general/controller.js","invoices/_module.js","invoices/_common/routes.js","invoices/overview/controller.js","invoices/invoice/controller.js","files/module.js","files/_common/modals.js","files/add/controller.js","contacts/_topmenu/controller.js","contacts/_common/routes.js","contacts/_common/modals.js","contacts/person.add/controller.js","contacts/overview/controller.js","contacts/company.add/controller.js","config/_module.js","config/_common/routes.js","auth/_module.js","auth/_common/routes.js","auth/_common/interceptor.js","auth/_common/constants.js","auth/login/controller.js","register/_module.js","register/routes.js","register/controller.js","dashboard/_module.js","dashboard/routes.js","dashboard/controller.js","app.js","run.js"],"names":["angular","module","RoutesConfig","configHelper","routerHelper","configureStates","getStates","state","config","abstract","url","templateUrl","controller","title","run","CompanyModals","modalHelper","getModals","modal","size","configureModals","factory","$inject","ContactsCompanyController","$stateParams","Company","CompanyTabs","activate","vm","findById","id","EditLogo","this","Tabs","Print","docDefinition","content","pdfMake","createPdf","open","constant","heading","icon","route","class","ContactsCompanyTransactionsController","Transaction","DataFilters","ChartGroups","LoadTransactions","loading","find","filter","$promise","then","data","_total","_","each","transaction","amount","total","Transactions","ReloadChart","finally","console","log","chart","params","group","labels","grouped_transactions","groupBy","moment","date","format","value","transactions","keydate","_date_total","reduce","Math","round","push","where","companyId","order","options","bezierCurve","datasetFill","one_month","alias","label","three_months","all","daily","weekly","monthly","ContactsCompanyPersonsController","Person","_loadPersons","Persons","ContactsCompanyOverviewController","Event","_loadEvents","reload","gt","_ranges","range","from","lt","to","Events","WEEK","subtract","add","HALFMONTH","MONTH","ContactsCompanyMapController","$timeout","center","markers","company","lat","parseFloat","location","lng","lon","zoom","message","name","street","opacity","focus","ContactsCompanyFilesController","Container","FilesModals","_loadFiles","UploadFiles","AddFiles","Label","container","getFiles","Files","ContactsCompanyEditLogoController","$uibModalInstance","ModalParams","FileUploader","Save","Uploader","uploadItem","onCompleteItem","item","response","status","headers","logo","file","upsert","onAfterAddingFile","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","states","otherwisePath","forEach","controllerAs","extend","views","hasOtherwise","otherwise","get","service","$get","provider","modalHelperProvider","$uibModal","$q","modals","_ret","obj","ModalResultComplete","ModalResultFailed","reason","reject","resolve","result","catch","configHelperProvider","ConfigHelper","notifyConfig","configName","numberFixedLen","a","b","slice","join","array","separator","fromNow","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","isFinite","units","number","floor","pow","toFixed","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","on","$apply","v","val","$","$setValidity","directive","pushMenu","$window","$document","element","_body","body","bind","innerWidth","screenSizes","sm","hasClass","removeClass","addClass","xs","md","lg","ngThumb","helper","support","FileReader","CanvasRenderingContext2D","isFile","isObject","File","isImage","type","lastIndexOf","indexOf","template","attributes","onLoadFile","event","img","Image","onload","onLoadImage","src","target","width","height","canvas","attr","getContext","drawImage","$eval","reader","readAsDataURL","ngPrint","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","errSrc","ngSrc","$set","remove","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","contentWrapper","wrapper","fix","window_height","innerHeight","header_height","css","subtree","isAuthenticated","AppUser","go","getCurrent","_user","fullname","split","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","useXDomain","common","appRun","SettingsModals","AppUsersOverviewController","_loadAppUsers","users","AppUsers","UserForm","AppUserID","UserFormController","appuser","user","close","ChangePasswordController","toaster","prototype$updateAttributes","getCurrentId","password","Password","pop","SettingsService","$resource","GetSettings","APP","Service","chain","rows","map","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","SettingsGeneralController","InvoicesOverviewController","Invoice","limit","_invoices","invoices","InvoicesInvoiceController","news","FilesAddController","Upload","uploader","onErrorItem","error","ContactsTopMenuController","ContactsModals","AddCompany","AddPerson","AddEvent","ExportImport","ContactsAddPersonController","loadCompanies","Companies","ContactsOverviewController","_getAccessed","_companies","ContactsAddCompanyController","create","_company","ref","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","rejection","AuthInterceptorConfig","interceptors","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","AuthLoginController","LoginMessages","_signMessage","toUpperCase","SignIn","Alert","login","copy","credentials","code","RegisterController","DashboardController","$rootScope","$on","evt","toState","redirectTo"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', [\r\n      'leaflet-directive',\r\n      'chart.js',\r\n    ]);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.contacts.company',\r\n            config: {\r\n                abstract: true,\r\n                url: \"/company/:id\",\r\n                templateUrl: 'src/contacts/company.view/_common/_layout.html',\r\n                controller: 'ContactsCompanyController',\r\n            }\r\n        }, {\r\n            state: \"app.contacts.company.overview\",\r\n            config: {\r\n                title: \"overview\",\r\n                url: \"/overview\",\r\n                templateUrl: 'src/contacts/company.view/overview/view.html',\r\n                controller: 'ContactsCompanyOverviewController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.persons\",\r\n            config: {\r\n                title: \"persons\",\r\n                url: \"/persons\",\r\n                templateUrl: 'src/contacts/company.view/persons/view.html',\r\n                controller: 'ContactsCompanyPersonsController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.events\",\r\n            config: {\r\n                title: \"events\",\r\n                url: \"/events\",\r\n                templateUrl: 'src/contacts/company.view/events/view.html',\r\n                controller: 'ContactsCompanyEventsController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.transactions\",\r\n            config: {\r\n                title: \"transactions\",\r\n                url: \"/transactions\",\r\n                templateUrl: 'src/contacts/company.view/transactions/view.html',\r\n                controller: 'ContactsCompanyTransactionsController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.files\",\r\n            config: {\r\n                title: \"files\",\r\n                url: \"/files\",\r\n                templateUrl: 'src/contacts/company.view/files/view.html',\r\n                controller: 'ContactsCompanyFilesController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.map\",\r\n            config: {\r\n                title: \"map\",\r\n                url: \"/map\",\r\n                templateUrl: 'src/contacts/company.view/map/view.html',\r\n                controller: 'ContactsCompanyMapController',\r\n            },\r\n        }];\r\n    }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .factory('CompanyModals', CompanyModals);\r\n\r\n    CompanyModals.$inject = ['modalHelper'];\r\n\r\n    function CompanyModals(modalHelper) {\r\n        return modalHelper.configureModals(getModals());\r\n\r\n        function getModals() {\r\n            return [{\r\n                modal: \"EditLogo\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/company.view/editlogo/view.html',\r\n                    controller: \"ContactsCompanyEditLogoController\",\r\n                    size: \"md\",\r\n                }\r\n            }];\r\n        }\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company, CompanyTabs, CompanyModals) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = CompanyTabs;\r\n\r\n    vm.EditLogo = EditLogo;\r\n\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n    function EditLogo() {\r\n      \r\n      CompanyModals\r\n        .EditLogo({\r\n          Company: vm.Company\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .constant(\"CompanyTabs\", [{\r\n            heading: {\r\n                icon: \"bars\",\r\n                title: 'Overview'\r\n            },\r\n            route: 'app.contacts.company.overview',\r\n        }, {\r\n            heading: {\r\n                icon: \"money\",\r\n                class: \"hidden-xs\",\r\n                title: 'Transactions'\r\n            },\r\n            route: 'app.contacts.company.transactions',\r\n        }, {\r\n            heading: {\r\n                icon: \"files-o\",\r\n                class: \"hidden-xs\",\r\n                title: 'Files'\r\n            },\r\n            route: 'app.contacts.company.files',\r\n        }, {\r\n            heading: {\r\n                icon: \"map-o\",\r\n                class: \"hidden-xs\",\r\n                title: 'Map'\r\n            },\r\n            route: 'app.contacts.company.map',\r\n        }]);\r\n\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController(\r\n    $stateParams,\r\n    Transaction,\r\n    DataFilters,\r\n    ChartGroups) {\r\n\r\n    var vm = this;\r\n\r\n    vm.filter = {\r\n      where: {\r\n        companyId: $stateParams.id,\r\n      },\r\n      order: \"date ASC\",\r\n    }\r\n\r\n    vm.chart = {\r\n      labels: [],\r\n      data: [\r\n        []\r\n      ],\r\n      params: {\r\n        group: \"weekly\",\r\n      },\r\n      options: {\r\n        bezierCurve: false,\r\n        datasetFill: false,\r\n      }\r\n    };\r\n\r\n    vm.params = {\r\n      filter: \"one_month\",\r\n    }\r\n\r\n    vm.DataFilters = DataFilters;\r\n    vm.ChartGroups = ChartGroups;\r\n\r\n    vm.LoadTransactions = LoadTransactions;\r\n    vm.ReloadChart = ReloadChart;\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadTransactions();\r\n    }\r\n\r\n    function LoadTransactions() {\r\n      vm.loading = true;\r\n\r\n      return Transaction\r\n        .find({\r\n          filter: vm.filter\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n          vm.ReloadChart();\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function ReloadChart() {\r\n      console.log(vm.chart.params.group);\r\n      vm.chart.labels = [];\r\n      vm.chart.data[0] = [];\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(ChartGroups[vm.chart.params.group].value);\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.chart.labels.push(keydate);\r\n        vm.chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .constant(\"DataFilters\", {\n      one_month: {\n        alias: \"one_month\",\n        label: \"+-1 Month\",\n        value: {\n          // date\n        },\n      },\n      three_months: {\n        alias: \"three_months\",\n        label: \"+-3 Months\",\n        value: {\n          // date\n        },\n      },\n      all: {\n        alias: \"all\",\n        label: \"All Transactions\",\n        value: false,\n      }\n    })\n    .constant(\"ChartGroups\", {\n      daily: {\n        alias: \"daily\",\n        label: \"Daily\",\n        value: \"DD/MM/YYYY\",\n      },\n      weekly: {\n        alias: \"weekly\",\n        label: \"Weekly\",\n        value: \"[W]ww MM/YYYY\",\r\n      },\n      monthly: {\n        alias: \"monthly\",\n        label: \"Monthly\",\n        value: \"MM/YYYY\",\n      }\n    })\n\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController($stateParams,Person) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadPersons();\r\n    }\r\n\r\n    function _loadPersons() {\r\n      vm.loading = true;\r\n      return Person\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"fullname ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Persons = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n    /* @ngInject */\r\n    function ContactsCompanyOverviewController($stateParams, Event) {\r\n\r\n        var vm = this;\r\n\r\n        vm.reload = reload;\r\n\r\n        vm.params = {\r\n            range: \"WEEK\",\r\n        };\r\n\r\n        var _ranges = {\r\n            \"WEEK\": {\r\n                from: moment().subtract(7, \"days\"),\r\n                to: moment().add(7, \"days\"),\r\n            },\r\n            \"HALFMONTH\": {\r\n                from: moment().subtract(15, \"days\"),\r\n                to: moment().add(15, \"days\"),\r\n            },\r\n            \"MONTH\": {\r\n                from: moment().subtract(1, \"month\"),\r\n                to: moment().add(1, \"month\"),\r\n            }\r\n        };\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            _loadEvents();\r\n        }\r\n\r\n        function reload() {\r\n            activate();\r\n        }\r\n\r\n        function _loadEvents() {\r\n            vm.loading = true;\r\n            return Event\r\n                .find({\r\n                    filter: {\r\n                        where: {\r\n                            date: {\r\n                                gt: _ranges[vm.params.range].from,\r\n                                lt: _ranges[vm.params.range].to,\r\n                            },\r\n                            companyId: $stateParams.id,\r\n                        },\r\n                        order: \"date DESC\",\r\n                    }\r\n                })\r\n                .$promise\r\n                .then(function(data) {\r\n                    vm.Events = data;\r\n                })\r\n                .finally(function() {\r\n                    vm.loading = false;\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      vm.loading = true;\r\n\r\n      vm.center = {};\r\n      vm.markers = {};\r\n\r\n      Company.findById({\r\n          id: $stateParams.id,\r\n        })\r\n        .$promise\r\n        .then(function(company) {\r\n          vm.Company = company;\r\n\r\n          $timeout(function() {\r\n\r\n            vm.center = {\r\n              lat: parseFloat(company.location.lat),\r\n              lng: parseFloat(company.location.lon),\r\n              zoom: 14,\r\n            };\r\n            vm.markers = {\r\n              company: {\r\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\r\n                lat: parseFloat(company.location.lat),\r\n                lng: parseFloat(company.location.lon),\r\n                opacity: 0.8,\r\n                focus: true,\r\n              }\r\n            };\r\n\r\n            vm.loading = false;\r\n\r\n          }, 1000);\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\r\n    var vm = this;\r\n\r\n    vm.container = $stateParams.id;\r\n    vm.UploadFiles = UploadFiles;\r\n    // vm.Download = Download;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadFiles();\r\n    }\r\n\r\n    function UploadFiles() {\r\n      FilesModals\r\n        .AddFiles({\r\n          Label: \"Company\",\r\n          Container: vm.container\r\n        })\r\n        .then(function() {\r\n          _loadFiles();\r\n        });\r\n    }\r\n\r\n    //\r\n    // function Download(file) {\r\n    //   Container\r\n    //     .download({\r\n    //       container: vm.container,\r\n    //       file: file,\r\n    //     })\r\n    //     .$promise\r\n    //     .then(function(data) {\r\n    //       console.log(data);\r\n    //     });\r\n    // }\r\n\r\n    function _loadFiles() {\r\n      vm.loading = true;\r\n      return Container\r\n        .getFiles({\r\n          container: vm.container,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Files = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEditLogoController\", ContactsCompanyEditLogoController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEditLogoController($uibModalInstance, ModalParams, Company, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Company = ModalParams.Company;\r\n    vm.Uploader = new FileUploader({\r\n      vm: vm,\r\n      url: '/api/Containers/' + vm.Company.id + '/upload',\r\n    });\r\n    vm.Uploader.onCompleteItem = function(item, response, status, headers) {\r\n      vm.Company.logo = '/api/Containers/' + vm.Company.id + '/download/' + item.file.name;\r\n      Company.upsert(vm.Company);\r\n    };\r\n    vm.Uploader.onAfterAddingFile = function(item) {\r\n      // console.info('After adding a file', item);\r\n      // console.info(vm.Uploader.queue);\r\n    };\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n\r\n    function Upload() {}\r\n\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.Uploader.uploadItem(0);\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (bytes === 0) return 'Empty';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app._common')\r\n        .directive('pushMenu', pushMenu);\r\n\r\n    pushMenu.$inject = ['$window', '$document'];\r\n\r\n    function pushMenu($window, $document) {\r\n\r\n        var screenSizes = {\r\n            xs: 480,\r\n            sm: 768,\r\n            md: 992,\r\n            lg: 1200\r\n        };\r\n\r\n        var directive = {\r\n            restrict: \"A\",\r\n            link: link\r\n        };\r\n\r\n        return directive;\r\n\r\n        function link(scope, element, attrs) {\r\n\r\n            var _body = angular.element($document[0].body);\r\n\r\n            element.bind(\"click\", function() {\r\n\r\n                if ($window.innerWidth > (screenSizes.sm - 1)) {\r\n                    if (_body.hasClass('sidebar-collapse')) {\r\n                        _body\r\n                            .removeClass('sidebar-collapse');\r\n                    } else {\r\n                        _body\r\n                            .addClass('sidebar-collapse');\r\n                    }\r\n                } else {\r\n                    if (_body.hasClass('sidebar-open')) {\r\n                        _body\r\n                            .removeClass('sidebar-open')\r\n                            .removeClass('sidebar-collapse');\r\n                    } else {\r\n                        _body\r\n                            .addClass('sidebar-open');\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngThumb', ngThumb);\r\n\r\n  /* @ngInject */\r\n  function ngThumb($window) {\r\n    var helper = {\r\n      support: !!($window.FileReader && $window.CanvasRenderingContext2D),\r\n      isFile: function(item) {\r\n        return angular.isObject(item) && item instanceof $window.File;\r\n      },\r\n      isImage: function(file) {\r\n        var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';\r\n        return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\r\n      }\r\n    };\r\n\r\n    return {\r\n      restrict: 'A',\r\n      template: '<canvas/>',\r\n      link: function(scope, element, attributes) {\r\n        if (!helper.support) {\r\n          console.log(\"ngThumb: FileReader not supported\");\r\n          return;\r\n        }\r\n\r\n\r\n        var params = scope.$eval(attributes.ngThumb);\r\n\r\n        console.log(\"ngThumb: params\", params);\r\n        if (!helper.isFile(params.file)) {\r\n          console.log(\"ngThumb: params.file is not a file\");\r\n          return;\r\n        }\r\n\r\n        if (!helper.isImage(params.file)) {\r\n          console.log(\"ngThumb: params.file is not an image\");\r\n          return;\r\n        }\r\n\r\n        var canvas = element.find('canvas');\r\n        var reader = new FileReader();\r\n\r\n        reader.onload = onLoadFile;\r\n        reader.readAsDataURL(params.file);\r\n\r\n        function onLoadFile(event) {\r\n          var img = new Image();\r\n          img.onload = onLoadImage;\r\n          img.src = event.target.result;\r\n        }\r\n\r\n        function onLoadImage() {\r\n          var width = params.width || this.width / this.height * params.height;\r\n          var height = params.height || this.height / this.width * params.width;\r\n          canvas.attr({\r\n            width: width,\r\n            height: height\r\n          });\r\n          canvas[0].getContext('2d').drawImage(this, 0, 0, width, height);\r\n        }\r\n      }\r\n    };\r\n  }\r\n})();\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app._common')\r\n        .directive('contentWrapper', contentWrapper);\r\n\r\n    /* @ngInject */\r\n    function contentWrapper($window, $timeout) {\r\n\r\n        var directive = {\r\n            restrict: \"C\",\r\n            link: link\r\n        };\r\n\r\n        return directive;\r\n\r\n        function link(scope, wrapper, attrs) {\r\n\r\n            fix(wrapper);\r\n\r\n            angular.element($window)\r\n                .bind('resize', function () {\r\n                    fix(wrapper);\r\n                });\r\n\r\n        }\r\n\r\n        function fix(element) {\r\n            var window_height = window.innerHeight;\r\n            var header_height = 35;\r\n\r\n            element.css({\r\n                height: window_height - header_height + \"px\"\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n} ());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app._common')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates(), \"/\");\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app',\r\n            config: {\r\n                abstract: true,\r\n                resolve: {\r\n                    isAuthenticated: function ($state, AppUser, $timeout) {\r\n                        $timeout(function () {\r\n                            if (!AppUser.isAuthenticated()) {\r\n                                $state.go(\"auth.login\");\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                templateUrl: 'src/_common/views/layout.html',\r\n                controller: function (AppUser) {\r\n                    var vm = this;\r\n\r\n                    AppUser\r\n                        .getCurrent()\r\n                        .$promise\r\n                        .then(function (_user) {\r\n                            vm.name = _user.fullname.split(\" \")[1];\r\n                        });\r\n\r\n                },\r\n\r\n            }\r\n        }];\r\n    }\r\n\r\n} ());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.users', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.users')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.users',\r\n      config: {\r\n        url: '/users',\r\n        controller: \"UsersOverviewController\",\r\n        templateUrl: 'src/users/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }, {\r\n        modal: \"UserForm\",\r\n        config: {\r\n          templateUrl: 'src/settings/user.form/view.html',\r\n          controller: \"UserFormController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.appusers')\r\n    .controller('AppUsersOverviewController', AppUsersOverviewController);\r\n\r\n  /* @ngInject */\r\n  function AppUsersOverviewController(AppUser, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.UserForm = UserForm;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadAppUsers();\r\n    }\r\n\r\n    function _loadAppUsers() {\r\n      vm.loading = true;\r\n      return AppUser\r\n        .find()\r\n        .$promise\r\n        .then(function(users) {\r\n          vm.AppUsers = users;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function UserForm(AppUserID) {\r\n      SettingsModals\r\n        .UserForm({\r\n          AppUserID: AppUserID\r\n        })\r\n        .then(function() {\r\n          _loadAppUsers();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"UserFormController\", UserFormController);\r\n\r\n  /* @ngInject */\r\n  function UserFormController($uibModalInstance, ModalParams, AppUser) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (ModalParams.AppUserID) {\r\n        AppUser\r\n          .findById({\r\n            id: ModalParams.AppUserID\r\n          })\r\n          .$promise\r\n          .then(function(appuser) {\r\n            vm.AppUser = appuser;\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      AppUser.upsert(vm.AppUser)\r\n        .$promise\r\n        .then(function(user) {\r\n          $uibModalInstance.close();\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"UserFormController\", UserFormController);\r\n\r\n  /* @ngInject */\r\n  function UserFormController($uibModalInstance, ModalParams, AppUser) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (ModalParams.AppUserID) {\r\n        AppUser\r\n          .findById({\r\n            id: ModalParams.AppUserID\r\n          })\r\n          .$promise\r\n          .then(function(appuser) {\r\n            vm.AppUser = appuser;\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      AppUser.upsert(vm.AppUser)\r\n        .$promise\r\n        .then(function(user) {\r\n          $uibModalInstance.close();\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, AppUser, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      AppUser.prototype$updateAttributes({\r\n          id: AppUser.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.static',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/stat\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.static.help',\r\n      config: {\r\n        title: 'Help',\r\n        url: \"/help\",\r\n        templateUrl: 'src/static/pages/help.html',\r\n      }\r\n    }, {\r\n      state: 'app.static.terms',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/terms\",\r\n        templateUrl: 'src/static/pages/terms.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        abstract: true,\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/_common/layout.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.general',\r\n      config: {\r\n        url: '/general',\r\n        controller: \"SettingsGeneralController\",\r\n        templateUrl: 'src/settings/general/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.users',\r\n      config: {\r\n        url: '/users',\r\n        controller: \"SettingsAppUsersController\",\r\n        templateUrl: 'src/settings/users/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.profile',\r\n      config: {\r\n        url: '/profile',\r\n        controller: \"SettingsProfileController\",\r\n        templateUrl: 'src/settings/profile/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.help',\r\n      config: {\r\n        url: '/help',\r\n        controller: \"SettingsHelpController\",\r\n        templateUrl: 'src/settings/help/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.terms',\r\n      config: {\r\n        url: '/terms',\r\n        controller: \"SettingsTermsController\",\r\n        templateUrl: 'src/settings/terms/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }, {\r\n        modal: \"UserForm\",\r\n        config: {\r\n          templateUrl: 'src/settings/user.form/view.html',\r\n          controller: \"UserFormController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsGeneralController', SettingsGeneralController);\r\n\r\n  /* @ngInject */\r\n  function SettingsGeneralController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.invoices', []);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.invoices')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.invoices',\r\n            config: {\r\n                abstract: true,\r\n                url: \"/invoices\",\r\n                template: '<ui-view/>',\r\n            }\r\n        }, {\r\n            state: 'app.invoices.overview',\r\n            config: {\r\n                title: 'Invoices Dashboard',\r\n                url: \"/\",\r\n                templateUrl: 'src/invoices/overview/view.html',\r\n                controller: 'InvoicesOverviewController',\r\n            }\r\n        }, {\r\n            state: 'app.invoices.invoice',\r\n            config: {\r\n                title: 'Invoice Preview',\r\n                url: \"/\",\r\n                templateUrl: 'src/invoices/invoice/view.html',\r\n                controller: 'InvoicesInvoiceController',\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.invoices')\r\n        .controller(\"InvoicesOverviewController\", InvoicesOverviewController);\r\n\r\n    /* @ngInject */\r\n    function InvoicesOverviewController(Invoice) {\r\n        var vm = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            Invoice.find({\r\n                    filter: {\r\n                        limit: 10,\r\n                        order: \"date DESC\",\r\n                    }\r\n                })\r\n                .$promise\r\n                .then(function(_invoices) {\r\n                    vm.invoices = _invoices;\r\n                })\r\n                .finally(function() {\r\n\r\n                });\r\n        }\r\n\r\n\r\n    }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.invoices')\r\n        .controller(\"InvoicesInvoiceController\", InvoicesInvoiceController);\r\n\r\n    /* @ngInject */\r\n    function InvoicesInvoiceController() {\r\n        var vm = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            vm.news = _.sortBy([{\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Tempor ut qui non mollit qui.\",\r\n                \"title\": \"ea enim veniam laboris ullamco\",\r\n                \"url\": \"http://google.com\"\r\n            }, {\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n                \"title\": \"cillum aute deserunt labore est\",\r\n                \"url\": \"http://google.com\"\r\n            }, {\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n                \"title\": \"velit occaecat adipisicing tempor sit\",\r\n                \"url\": \"http://google.com\"\r\n            }, {\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n                \"title\": \"non do ipsum et cillum\",\r\n                \"url\": \"http://google.com\"\r\n            }], 'date');\r\n        }\r\n\r\n\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .factory('FilesModals', FilesModals);\r\n\r\n  FilesModals.$inject = ['modalHelper'];\r\n\r\n  function FilesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddFiles\",\r\n        config: {\r\n          templateUrl: 'src/files/add/view.html',\r\n          controller: \"FilesAddController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .controller(\"FilesAddController\", FilesAddController);\r\n\r\n  /* @ngInject */\r\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Label = ModalParams.Label;\r\n    vm.Container = ModalParams.Container;\r\n\r\n    vm.Upload = Upload;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n\r\n    function Upload() {}\r\n\r\n    var uploader = vm.uploader = new FileUploader({\r\n      vm: vm, // to automatically update the html. Default: $rootScope\r\n      url: '/api/containers/' + vm.Container + '/upload',\r\n      // formData: [{\r\n      //   key: 'value'\r\n      // }]\r\n    });\r\n\r\n    // ADDING FILTERS\r\n    // uploader.filters.push({\r\n    //   name: 'filterName',\r\n    //   fn: function(item, options) { // second user filter\r\n    //     console.info('filter2');\r\n    //     return true;\r\n    //   }\r\n    // });\r\n\r\n    // REGISTER HANDLERS\r\n    // --------------------\r\n    // uploader.onAfterAddingFile = function(item) {\r\n    //   console.info('After adding a file', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onAfterAddingAll = function(items) {\r\n    //   console.info('After adding all files', items);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\r\n    //   console.info('When adding a file failed', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onBeforeUploadItem = function(item) {\r\n    //   console.info('Before upload', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressItem = function(item, progress) {\r\n    //   console.info('Progress: ' + progress, item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressAll = function(progress) {\r\n    //   console.info('Total progress: ' + progress);\r\n    // };\r\n    // --------------------\r\n    // uploader.onSuccessItem = function(item, response, status, headers) {\r\n    //   console.info('Success', response, status, headers);\r\n    //   vm.$broadcast('uploadCompleted', item);\r\n    // };\r\n    // --------------------\r\n    uploader.onErrorItem = function(item, response, status, headers) {\r\n      item.error = response.error;\r\n      // console.info('Error', response, status, headers);\r\n    };\r\n    // // --------------------\r\n    // uploader.onCancelItem = function(item, response, status, headers) {\r\n    //   console.info('Cancel', response, status);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteItem = function(item, response, status, headers) {\r\n    //   console.info('Complete', response, status, headers);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteAll = function() {\r\n    //   console.info('Complete all');\r\n    // };\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n    /* @ngInject */\r\n    function ContactsTopMenuController($state, ContactsModals) {\r\n        var vm = this;\r\n\r\n        vm.AddCompany = AddCompany;\r\n        vm.AddPerson = AddPerson;\r\n        vm.AddEvent = AddEvent;\r\n        vm.ExportImport = ExportImport;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n\r\n        function AddCompany() {\r\n            ContactsModals\r\n                .AddCompany()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.company\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n        function AddPerson() {\r\n            ContactsModals\r\n                .AddPerson()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.person\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n        function AddEvent() {\r\n            ContactsModals\r\n                .AddEvent()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.events.event\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n        function ExportImport() {\r\n            ContactsModals\r\n                .ExportImport()\r\n                .then(function() {});\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.contacts',\r\n            config: {\r\n                abstract: true,\r\n                url: \"/contacts\",\r\n                template: '<ui-view/>',\r\n            }\r\n        }, {\r\n            state: 'app.contacts.overview',\r\n            config: {\r\n                title: 'Contacts Overview',\r\n                url: \"/\",\r\n                templateUrl: 'src/contacts/overview/view.html',\r\n                controller: 'ContactsOverviewController',\r\n            }\r\n        }, {\r\n            state: 'app.contacts.person',\r\n            config: {\r\n                title: 'Person',\r\n                url: \"/person/:id\",\r\n                templateUrl: 'src/contacts/person/view.html',\r\n                controller: 'ContactsPersonController',\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .factory('ContactsModals', ContactsModals);\r\n\r\n    ContactsModals.$inject = ['modalHelper'];\r\n\r\n    function ContactsModals(modalHelper) {\r\n        return modalHelper.configureModals(getModals());\r\n\r\n        function getModals() {\r\n            return [{\r\n                modal: \"AddPerson\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/person.add/view.html',\r\n                    controller: \"ContactsAddPersonController\",\r\n                    size: \"sm\",\r\n                }\r\n            }, {\r\n                modal: \"AddCompany\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/company.add/view.html',\r\n                    controller: \"ContactsAddCompanyController\",\r\n                    size: \"sm\",\r\n                }\r\n            }, {\r\n                modal: \"AddEvent\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/event.add/view.html',\r\n                    controller: \"ContactsAddEventController\",\r\n                }\r\n            }, {\r\n                modal: \"ExportImport\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/exportimport/view.html',\r\n                    controller: \"ContactsExportImportController\",\r\n                }\r\n            }];\r\n        }\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n    /* @ngInject */\r\n    function ContactsOverviewController($state, Company, ContactsModals) {\r\n        var vm = this;\r\n\r\n        vm.AddCompany = AddCompany;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            _getAccessed();\r\n        }\r\n\r\n        function _getAccessed() {\r\n            vm.loading = true;\r\n            Company.find({\r\n                    filter: {\r\n                        limit: 10,\r\n                        order: \"lastAccess DESC\",\r\n                    }\r\n                })\r\n                .$promise\r\n                .then(function(_companies) {\r\n                    vm.Companies = _companies;\r\n                })\r\n                .finally(function() {\r\n                    vm.loading = false;\r\n                });\r\n        }\r\n\r\n        function AddCompany() {\r\n            ContactsModals\r\n                .AddCompany()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.company\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($uibModalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $uibModalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.config', []);\r\n    \r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.config')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.config',\r\n      config: {\r\n        url: '/config',\r\n        controller: \"ConfigController\",\r\n        templateUrl: 'src/config/_common/layout.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n} ());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(AppUser, $state) {\r\n          AppUser\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/AppUsers/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, AppUser) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      AppUser\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.register', [])\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.register')\r\n        .run(appRun);\r\n\r\n    appRun.$inject = ['routerHelper'];\r\n\r\n    function appRun(routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'register',\r\n            config: {\r\n                url: '/register',\r\n                templateUrl: \"src/register/view.html\",\r\n                controller: \"RegisterController\",\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.register')\r\n    .controller('RegisterController', RegisterController);\r\n\r\n  /* @ngInject */\r\n  function RegisterController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.dashboard')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.dashboard',\r\n            config: {\r\n                title: 'Dashboard',\r\n                url: \"/\",\r\n                templateUrl: 'src/dashboard/view.html',\r\n                controller: 'DashboardController',\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.register',\r\n    'app.users',\r\n    'app.auth',\r\n    'app.contacts',\r\n    'app.dashboard',\r\n    'app.files',\r\n    'app.settings',\r\n    'app.static',\r\n    'app.invoices',\r\n    'app.config',\r\n    'app._common',\r\n  ]);\r\n\r\n} ());\r\n","\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.$on('$stateChangeStart', function (evt, to, params) {\r\n\r\n      $rootScope.title = toState.title;\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n} ());\r\n"],"sourceRoot":"/source/"}