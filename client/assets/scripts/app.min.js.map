{"version":3,"sources":["contacts/module.js","contacts/company.view/_common/routes.js","app.min.js","contacts/company.view/_common/modals.js","contacts/company.view/_common/controller.js","contacts/company.view/_common/constants.js","contacts/company.view/transactions/controller.js","contacts/company.view/transactions/constants.js","contacts/company.view/persons/controller.js","contacts/company.view/overview/controller.js","contacts/company.view/map/controller.js","contacts/company.view/files/controller.js","contacts/company.view/editlogo/controller.js","_common/module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/join.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/pushmenu.js","_common/directives/ngthumb.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/directives/adminlte.js","_common/constants/topmenu.js","app.js","_common/configs/rootscope.js","_common/configs/location.config.js","_common/configs/http.config.js","static/module.js","static/_common/routes.js","settings/module.js","settings/_common/service.js","settings/_common/routes.js","settings/_common/modals.js","settings/general/controller.js","invoices/_module.js","invoices/_common/routes.js","invoices/overview/controller.js","invoices/invoice/controller.js","files/module.js","files/_common/modals.js","files/add/controller.js","contacts/_topmenu/controller.js","contacts/_common/routes.js","contacts/_common/modals.js","contacts/person.add/controller.js","contacts/overview/controller.js","contacts/company.add/controller.js","auth/_module.js","auth/login/controller.js","appusers/module.js","appusers/_common/routes.js","appusers/_common/modals.js","appusers/overview/controller.js","appusers/init/controller.js","appusers/details/controller.js","appusers/changepassword/controller.js","_common/routes.js","dashboard/_module.js","dashboard/routes.js","dashboard/controller.js","auth/routes.js","auth/interceptor.js","auth/constants.js","run.js","config.js"],"names":["angular","module","RoutesConfig","configHelper","routerHelper","configureStates","getStates","state","config","abstract","url","templateUrl","controller","title","$inject","run","CompanyModals","modalHelper","getModals","modal","size","configureModals","factory","ContactsCompanyController","$stateParams","Company","CompanyTabs","activate","vm","findById","id","EditLogo","this","Tabs","Print","docDefinition","content","pdfMake","createPdf","open","constant","heading","icon","route","class","ContactsCompanyTransactionsController","Transaction","DataFilters","ChartGroups","LoadTransactions","loading","find","filter","$promise","then","data","_total","_","each","transaction","amount","total","Transactions","ReloadChart","console","log","chart","params","group","labels","grouped_transactions","groupBy","moment","date","format","value","transactions","keydate","_date_total","reduce","Math","round","push","where","companyId","order","options","bezierCurve","datasetFill","one_month","alias","label","three_months","all","daily","weekly","monthly","ContactsCompanyPersonsController","Person","_loadPersons","Persons","ContactsCompanyOverviewController","Event","_loadEvents","reload","gt","_ranges","range","from","lt","to","Events","WEEK","subtract","add","HALFMONTH","MONTH","ContactsCompanyMapController","$timeout","center","markers","company","lat","parseFloat","location","lng","lon","zoom","message","name","street","opacity","focus","ContactsCompanyFilesController","Container","FilesModals","_loadFiles","UploadFiles","AddFiles","Label","container","getFiles","Files","ContactsCompanyEditLogoController","$uibModalInstance","ModalParams","FileUploader","Save","Uploader","uploadItem","onCompleteItem","item","response","status","headers","logo","file","upsert","onAfterAddingFile","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","states","otherwisePath","forEach","controllerAs","extend","views","hasOtherwise","otherwise","get","service","$get","provider","modalHelperProvider","$uibModal","$q","modals","_ret","obj","ModalResultComplete","ModalResultFailed","reason","reject","resolve","result","configHelperProvider","ConfigHelper","notifyConfig","configName","numberFixedLen","a","b","slice","join","array","separator","fromNow","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","isFinite","units","number","floor","pow","toFixed","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","on","$apply","v","val","$","$setValidity","directive","pushMenu","$window","$document","element","_body","body","bind","innerWidth","screenSizes","sm","hasClass","removeClass","addClass","xs","md","lg","ngThumb","helper","support","FileReader","CanvasRenderingContext2D","isFile","isObject","File","isImage","type","lastIndexOf","indexOf","template","attributes","onLoadFile","event","img","Image","onload","onLoadImage","src","target","width","height","canvas","attr","getContext","drawImage","$eval","reader","readAsDataURL","ngPrint","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","errSrc","ngSrc","$set","remove","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","contentWrapper","wrapper","fix","window_height","innerHeight","footer_height","css","subtree","appRun","$rootScope","APP","$on","toState","description","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","useXDomain","common","SettingsService","$resource","GetSettings","Service","chain","rows","map","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","SettingsModals","SettingsGeneralController","InvoicesOverviewController","Invoice","limit","_invoices","invoices","InvoicesInvoiceController","news","FilesAddController","Upload","uploader","onErrorItem","error","ContactsTopMenuController","ContactsModals","AddCompany","go","AddPerson","AddEvent","ExportImport","ContactsAddPersonController","loadCompanies","Companies","ContactsOverviewController","_getAccessed","_companies","ContactsAddCompanyController","create","_company","close","AuthLoginController","LoginMessages","AppUser","ref","_signMessage","toUpperCase","SignIn","Alert","login","copy","credentials","rejection","password","code","AppUsersOverviewController","_loadAppUsers","users","AppUsers","UserForm","AppUserID","UserFormController","appuser","user","ChangePasswordController","toaster","prototype$updateAttributes","getCurrentId","Password","pop","isAuthenticated","getCurrent","_user","fullname","split","DashboardController","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","AuthInterceptorConfig","interceptors","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","evt","redirectTo","version","repository","author","email","client"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', [\r\n      'leaflet-directive',\r\n      'chart.js',\r\n    ]);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.contacts.company',\r\n            config: {\r\n                abstract: true,\r\n                url: \"/company/:id\",\r\n                templateUrl: 'src/contacts/company.view/_common/_layout.html',\r\n                controller: 'ContactsCompanyController',\r\n            }\r\n        }, {\r\n            state: \"app.contacts.company.overview\",\r\n            config: {\r\n                title: \"overview\",\r\n                url: \"/overview\",\r\n                templateUrl: 'src/contacts/company.view/overview/view.html',\r\n                controller: 'ContactsCompanyOverviewController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.persons\",\r\n            config: {\r\n                title: \"persons\",\r\n                url: \"/persons\",\r\n                templateUrl: 'src/contacts/company.view/persons/view.html',\r\n                controller: 'ContactsCompanyPersonsController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.events\",\r\n            config: {\r\n                title: \"events\",\r\n                url: \"/events\",\r\n                templateUrl: 'src/contacts/company.view/events/view.html',\r\n                controller: 'ContactsCompanyEventsController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.transactions\",\r\n            config: {\r\n                title: \"transactions\",\r\n                url: \"/transactions\",\r\n                templateUrl: 'src/contacts/company.view/transactions/view.html',\r\n                controller: 'ContactsCompanyTransactionsController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.files\",\r\n            config: {\r\n                title: \"files\",\r\n                url: \"/files\",\r\n                templateUrl: 'src/contacts/company.view/files/view.html',\r\n                controller: 'ContactsCompanyFilesController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.map\",\r\n            config: {\r\n                title: \"map\",\r\n                url: \"/map\",\r\n                templateUrl: 'src/contacts/company.view/map/view.html',\r\n                controller: 'ContactsCompanyMapController',\r\n            },\r\n        }];\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', [\r\n      'leaflet-directive',\r\n      'chart.js',\r\n    ]);\r\n})();\r\n;(function() {\r\n    'use strict';\r\n\r\n    RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n    angular\r\n        .module('app.contacts')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.contacts.company',\r\n            config: {\r\n                abstract: true,\r\n                url: \"/company/:id\",\r\n                templateUrl: 'src/contacts/company.view/_common/_layout.html',\r\n                controller: 'ContactsCompanyController',\r\n            }\r\n        }, {\r\n            state: \"app.contacts.company.overview\",\r\n            config: {\r\n                title: \"overview\",\r\n                url: \"/overview\",\r\n                templateUrl: 'src/contacts/company.view/overview/view.html',\r\n                controller: 'ContactsCompanyOverviewController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.persons\",\r\n            config: {\r\n                title: \"persons\",\r\n                url: \"/persons\",\r\n                templateUrl: 'src/contacts/company.view/persons/view.html',\r\n                controller: 'ContactsCompanyPersonsController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.events\",\r\n            config: {\r\n                title: \"events\",\r\n                url: \"/events\",\r\n                templateUrl: 'src/contacts/company.view/events/view.html',\r\n                controller: 'ContactsCompanyEventsController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.transactions\",\r\n            config: {\r\n                title: \"transactions\",\r\n                url: \"/transactions\",\r\n                templateUrl: 'src/contacts/company.view/transactions/view.html',\r\n                controller: 'ContactsCompanyTransactionsController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.files\",\r\n            config: {\r\n                title: \"files\",\r\n                url: \"/files\",\r\n                templateUrl: 'src/contacts/company.view/files/view.html',\r\n                controller: 'ContactsCompanyFilesController',\r\n            },\r\n        }, {\r\n            state: \"app.contacts.company.map\",\r\n            config: {\r\n                title: \"map\",\r\n                url: \"/map\",\r\n                templateUrl: 'src/contacts/company.view/map/view.html',\r\n                controller: 'ContactsCompanyMapController',\r\n            },\r\n        }];\r\n    }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .factory('CompanyModals', CompanyModals);\r\n\r\n    CompanyModals.$inject = ['modalHelper'];\r\n\r\n    function CompanyModals(modalHelper) {\r\n        return modalHelper.configureModals(getModals());\r\n\r\n        function getModals() {\r\n            return [{\r\n                modal: \"EditLogo\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/company.view/editlogo/view.html',\r\n                    controller: \"ContactsCompanyEditLogoController\",\r\n                    size: \"md\",\r\n                }\r\n            }];\r\n        }\r\n    }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyController.$inject = [\"$stateParams\", \"Company\", \"CompanyTabs\", \"CompanyModals\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company, CompanyTabs, CompanyModals) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = CompanyTabs;\r\n\r\n    vm.EditLogo = EditLogo;\r\n\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n    function EditLogo() {\r\n      \r\n      CompanyModals\r\n        .EditLogo({\r\n          Company: vm.Company\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .constant(\"CompanyTabs\", [{\r\n            heading: {\r\n                icon: \"bars\",\r\n                title: 'Overview'\r\n            },\r\n            route: 'app.contacts.company.overview',\r\n        }, {\r\n            heading: {\r\n                icon: \"money\",\r\n                class: \"hidden-xs\",\r\n                title: 'Transactions'\r\n            },\r\n            route: 'app.contacts.company.transactions',\r\n        }, {\r\n            heading: {\r\n                icon: \"files-o\",\r\n                class: \"hidden-xs\",\r\n                title: 'Files'\r\n            },\r\n            route: 'app.contacts.company.files',\r\n        }, {\r\n            heading: {\r\n                icon: \"map-o\",\r\n                class: \"hidden-xs\",\r\n                title: 'Map'\r\n            },\r\n            route: 'app.contacts.company.map',\r\n        }]);\r\n\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyTransactionsController.$inject = [\"$stateParams\", \"Transaction\", \"DataFilters\", \"ChartGroups\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController(\r\n    $stateParams,\r\n    Transaction,\r\n    DataFilters,\r\n    ChartGroups) {\r\n\r\n    var vm = this;\r\n\r\n    vm.filter = {\r\n      where: {\r\n        companyId: $stateParams.id,\r\n      },\r\n      order: \"date ASC\",\r\n    }\r\n\r\n    vm.chart = {\r\n      labels: [],\r\n      data: [\r\n        []\r\n      ],\r\n      params: {\r\n        group: \"weekly\",\r\n      },\r\n      options: {\r\n        bezierCurve: false,\r\n        datasetFill: false,\r\n      }\r\n    };\r\n\r\n    vm.params = {\r\n      filter: \"one_month\",\r\n    }\r\n\r\n    vm.DataFilters = DataFilters;\r\n    vm.ChartGroups = ChartGroups;\r\n\r\n    vm.LoadTransactions = LoadTransactions;\r\n    vm.ReloadChart = ReloadChart;\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadTransactions();\r\n    }\r\n\r\n    function LoadTransactions() {\r\n      vm.loading = true;\r\n\r\n      return Transaction\r\n        .find({\r\n          filter: vm.filter\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n          vm.ReloadChart();\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function ReloadChart() {\r\n      console.log(vm.chart.params.group);\r\n      vm.chart.labels = [];\r\n      vm.chart.data[0] = [];\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(ChartGroups[vm.chart.params.group].value);\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.chart.labels.push(keydate);\r\n        vm.chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .constant(\"DataFilters\", {\n      one_month: {\n        alias: \"one_month\",\n        label: \"+-1 Month\",\n        value: {\n          // date\n        },\n      },\n      three_months: {\n        alias: \"three_months\",\n        label: \"+-3 Months\",\n        value: {\n          // date\n        },\n      },\n      all: {\n        alias: \"all\",\n        label: \"All Transactions\",\n        value: false,\n      }\n    })\n    .constant(\"ChartGroups\", {\n      daily: {\n        alias: \"daily\",\n        label: \"Daily\",\n        value: \"DD/MM/YYYY\",\n      },\n      weekly: {\n        alias: \"weekly\",\n        label: \"Weekly\",\n        value: \"[W]ww MM/YYYY\",\r\n      },\n      monthly: {\n        alias: \"monthly\",\n        label: \"Monthly\",\n        value: \"MM/YYYY\",\n      }\n    })\n\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyPersonsController.$inject = [\"$stateParams\", \"Person\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController($stateParams,Person) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadPersons();\r\n    }\r\n\r\n    function _loadPersons() {\r\n      vm.loading = true;\r\n      return Person\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"fullname ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Persons = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    ContactsCompanyOverviewController.$inject = [\"$stateParams\", \"Event\"];\r\n    angular\r\n        .module('app.contacts')\r\n        .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n    /* @ngInject */\r\n    function ContactsCompanyOverviewController($stateParams, Event) {\r\n\r\n        var vm = this;\r\n\r\n        vm.reload = reload;\r\n\r\n        vm.params = {\r\n            range: \"WEEK\",\r\n        };\r\n\r\n        var _ranges = {\r\n            \"WEEK\": {\r\n                from: moment().subtract(7, \"days\"),\r\n                to: moment().add(7, \"days\"),\r\n            },\r\n            \"HALFMONTH\": {\r\n                from: moment().subtract(15, \"days\"),\r\n                to: moment().add(15, \"days\"),\r\n            },\r\n            \"MONTH\": {\r\n                from: moment().subtract(1, \"month\"),\r\n                to: moment().add(1, \"month\"),\r\n            }\r\n        };\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            _loadEvents();\r\n        }\r\n\r\n        function reload() {\r\n            activate();\r\n        }\r\n\r\n        function _loadEvents() {\r\n            vm.loading = true;\r\n            return Event\r\n                .find({\r\n                    filter: {\r\n                        where: {\r\n                            date: {\r\n                                gt: _ranges[vm.params.range].from,\r\n                                lt: _ranges[vm.params.range].to,\r\n                            },\r\n                            companyId: $stateParams.id,\r\n                        },\r\n                        order: \"date DESC\",\r\n                    }\r\n                })\r\n                .$promise\r\n                .then(function(data) {\r\n                    vm.Events = data;\r\n                })\r\n                .finally(function() {\r\n                    vm.loading = false;\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyMapController.$inject = [\"$stateParams\", \"Company\", \"$timeout\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      vm.loading = true;\r\n\r\n      vm.center = {};\r\n      vm.markers = {};\r\n\r\n      Company.findById({\r\n          id: $stateParams.id,\r\n        })\r\n        .$promise\r\n        .then(function(company) {\r\n          vm.Company = company;\r\n\r\n          $timeout(function() {\r\n\r\n            vm.center = {\r\n              lat: parseFloat(company.location.lat),\r\n              lng: parseFloat(company.location.lon),\r\n              zoom: 14,\r\n            };\r\n            vm.markers = {\r\n              company: {\r\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\r\n                lat: parseFloat(company.location.lat),\r\n                lng: parseFloat(company.location.lon),\r\n                opacity: 0.8,\r\n                focus: true,\r\n              }\r\n            };\r\n\r\n            vm.loading = false;\r\n\r\n          }, 1000);\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyFilesController.$inject = [\"$stateParams\", \"Container\", \"FilesModals\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\r\n    var vm = this;\r\n\r\n    vm.container = $stateParams.id;\r\n    vm.UploadFiles = UploadFiles;\r\n    // vm.Download = Download;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadFiles();\r\n    }\r\n\r\n    function UploadFiles() {\r\n      FilesModals\r\n        .AddFiles({\r\n          Label: \"Company\",\r\n          Container: vm.container\r\n        })\r\n        .then(function() {\r\n          _loadFiles();\r\n        });\r\n    }\r\n\r\n    //\r\n    // function Download(file) {\r\n    //   Container\r\n    //     .download({\r\n    //       container: vm.container,\r\n    //       file: file,\r\n    //     })\r\n    //     .$promise\r\n    //     .then(function(data) {\r\n    //       console.log(data);\r\n    //     });\r\n    // }\r\n\r\n    function _loadFiles() {\r\n      vm.loading = true;\r\n      return Container\r\n        .getFiles({\r\n          container: vm.container,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Files = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyEditLogoController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"Company\", \"FileUploader\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEditLogoController\", ContactsCompanyEditLogoController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEditLogoController($uibModalInstance, ModalParams, Company, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Company = ModalParams.Company;\r\n    vm.Uploader = new FileUploader({\r\n      vm: vm,\r\n      url: '/api/Containers/' + vm.Company.id + '/upload',\r\n    });\r\n    vm.Uploader.onCompleteItem = function(item, response, status, headers) {\r\n      vm.Company.logo = '/api/Containers/' + vm.Company.id + '/download/' + item.file.name;\r\n      Company.upsert(vm.Company);\r\n    };\r\n    vm.Uploader.onAfterAddingFile = function(item) {\r\n      // console.info('After adding a file', item);\r\n      // console.info(vm.Uploader.queue);\r\n    };\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n\r\n    function Upload() {}\r\n\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.Uploader.uploadItem(0);\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  routerHelperProvider.$inject = [\"$locationProvider\", \"$stateProvider\", \"$urlRouterProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (bytes === 0) return 'Empty';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app._common')\r\n        .directive('pushMenu', pushMenu);\r\n\r\n    pushMenu.$inject = ['$window', '$document'];\r\n\r\n    function pushMenu($window, $document) {\r\n\r\n        var screenSizes = {\r\n            xs: 480,\r\n            sm: 768,\r\n            md: 992,\r\n            lg: 1200\r\n        };\r\n\r\n        var directive = {\r\n            restrict: \"A\",\r\n            link: link\r\n        };\r\n\r\n        return directive;\r\n\r\n        function link(scope, element, attrs) {\r\n\r\n            var _body = angular.element($document[0].body);\r\n\r\n            element.bind(\"click\", function() {\r\n\r\n                if ($window.innerWidth > (screenSizes.sm - 1)) {\r\n                    if (_body.hasClass('sidebar-collapse')) {\r\n                        _body\r\n                            .removeClass('sidebar-collapse');\r\n                    } else {\r\n                        _body\r\n                            .addClass('sidebar-collapse');\r\n                    }\r\n                } else {\r\n                    if (_body.hasClass('sidebar-open')) {\r\n                        _body\r\n                            .removeClass('sidebar-open')\r\n                            .removeClass('sidebar-collapse');\r\n                    } else {\r\n                        _body\r\n                            .addClass('sidebar-open');\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  ngThumb.$inject = [\"$window\"];\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngThumb', ngThumb);\r\n\r\n  /* @ngInject */\r\n  function ngThumb($window) {\r\n    var helper = {\r\n      support: !!($window.FileReader && $window.CanvasRenderingContext2D),\r\n      isFile: function(item) {\r\n        return angular.isObject(item) && item instanceof $window.File;\r\n      },\r\n      isImage: function(file) {\r\n        var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';\r\n        return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\r\n      }\r\n    };\r\n\r\n    return {\r\n      restrict: 'A',\r\n      template: '<canvas/>',\r\n      link: function(scope, element, attributes) {\r\n        if (!helper.support) {\r\n          console.log(\"ngThumb: FileReader not supported\");\r\n          return;\r\n        }\r\n\r\n\r\n        var params = scope.$eval(attributes.ngThumb);\r\n\r\n        console.log(\"ngThumb: params\", params);\r\n        if (!helper.isFile(params.file)) {\r\n          console.log(\"ngThumb: params.file is not a file\");\r\n          return;\r\n        }\r\n\r\n        if (!helper.isImage(params.file)) {\r\n          console.log(\"ngThumb: params.file is not an image\");\r\n          return;\r\n        }\r\n\r\n        var canvas = element.find('canvas');\r\n        var reader = new FileReader();\r\n\r\n        reader.onload = onLoadFile;\r\n        reader.readAsDataURL(params.file);\r\n\r\n        function onLoadFile(event) {\r\n          var img = new Image();\r\n          img.onload = onLoadImage;\r\n          img.src = event.target.result;\r\n        }\r\n\r\n        function onLoadImage() {\r\n          var width = params.width || this.width / this.height * params.height;\r\n          var height = params.height || this.height / this.width * params.width;\r\n          canvas.attr({\r\n            width: width,\r\n            height: height\r\n          });\r\n          canvas[0].getContext('2d').drawImage(this, 0, 0, width, height);\r\n        }\r\n      }\r\n    };\r\n  }\r\n})();\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    contentWrapper.$inject = [\"$window\", \"$timeout\"];\r\n    angular\r\n        .module('app._common')\r\n        .directive('contentWrapper', contentWrapper);\r\n\r\n    /* @ngInject */\r\n    function contentWrapper($window, $timeout) {\r\n\r\n        var directive = {\r\n            restrict: \"C\",\r\n            link: link\r\n        };\r\n\r\n        return directive;\r\n\r\n        function link(scope, wrapper, attrs) {\r\n\r\n            fix(wrapper);\r\n\r\n            angular.element($window)\r\n                .bind('resize', function() {\r\n                    fix(wrapper);\r\n                });\r\n\r\n        }\r\n\r\n        function fix(element) {\r\n            var window_height = window.innerHeight;\r\n            var footer_height = 77;\r\n\r\n            element.css({\r\n                height: window_height - footer_height + \"px\"\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.appusers',\r\n    'app.auth',\r\n    'app.contacts',\r\n    'app.dashboard',\r\n    'app.files',\r\n    'app.settings',\r\n    'app.static',\r\n    'app.invoices',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.static',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/stat\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.static.help',\r\n      config: {\r\n        title: 'Help',\r\n        url: \"/help\",\r\n        templateUrl: 'src/static/pages/help.html',\r\n      }\r\n    }, {\r\n      state: 'app.static.terms',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/terms\",\r\n        templateUrl: 'src/static/pages/terms.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  SettingsService.$inject = [\"$resource\"];\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"routerHelper\"];\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        abstract: true,\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/_common/layout.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.general',\r\n      config: {\r\n        url: '/general',\r\n        controller: \"SettingsGeneralController\",\r\n        templateUrl: 'src/settings/general/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.users',\r\n      config: {\r\n        url: '/users',\r\n        controller: \"SettingsAppUsersController\",\r\n        templateUrl: 'src/settings/users/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.profile',\r\n      config: {\r\n        url: '/profile',\r\n        controller: \"SettingsProfileController\",\r\n        templateUrl: 'src/settings/profile/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.help',\r\n      config: {\r\n        url: '/help',\r\n        controller: \"SettingsHelpController\",\r\n        templateUrl: 'src/settings/help/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.terms',\r\n      config: {\r\n        url: '/terms',\r\n        controller: \"SettingsTermsController\",\r\n        templateUrl: 'src/settings/terms/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }, {\r\n        modal: \"UserForm\",\r\n        config: {\r\n          templateUrl: 'src/settings/user.form/view.html',\r\n          controller: \"UserFormController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsGeneralController', SettingsGeneralController);\r\n\r\n  /* @ngInject */\r\n  function SettingsGeneralController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.invoices', []);\r\n})();\r\n;(function() {\r\n    'use strict';\r\n\r\n    RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n    angular\r\n        .module('app.invoices')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.invoices',\r\n            config: {\r\n                abstract: true,\r\n                url: \"/invoices\",\r\n                template: '<ui-view/>',\r\n            }\r\n        }, {\r\n            state: 'app.invoices.overview',\r\n            config: {\r\n                title: 'Invoices Dashboard',\r\n                url: \"/\",\r\n                templateUrl: 'src/invoices/overview/view.html',\r\n                controller: 'InvoicesOverviewController',\r\n            }\r\n        }, {\r\n            state: 'app.invoices.invoice',\r\n            config: {\r\n                title: 'Invoice Preview',\r\n                url: \"/\",\r\n                templateUrl: 'src/invoices/invoice/view.html',\r\n                controller: 'InvoicesInvoiceController',\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    InvoicesOverviewController.$inject = [\"Invoice\"];\r\n    angular\r\n        .module('app.invoices')\r\n        .controller(\"InvoicesOverviewController\", InvoicesOverviewController);\r\n\r\n    /* @ngInject */\r\n    function InvoicesOverviewController(Invoice) {\r\n        var vm = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            Invoice.find({\r\n                    filter: {\r\n                        limit: 10,\r\n                        order: \"date DESC\",\r\n                    }\r\n                })\r\n                .$promise\r\n                .then(function(_invoices) {\r\n                    vm.invoices = _invoices;\r\n                })\r\n                .finally(function() {\r\n\r\n                });\r\n        }\r\n\r\n\r\n    }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.invoices')\r\n        .controller(\"InvoicesInvoiceController\", InvoicesInvoiceController);\r\n\r\n    /* @ngInject */\r\n    function InvoicesInvoiceController() {\r\n        var vm = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            vm.news = _.sortBy([{\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Tempor ut qui non mollit qui.\",\r\n                \"title\": \"ea enim veniam laboris ullamco\",\r\n                \"url\": \"http://google.com\"\r\n            }, {\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n                \"title\": \"cillum aute deserunt labore est\",\r\n                \"url\": \"http://google.com\"\r\n            }, {\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n                \"title\": \"velit occaecat adipisicing tempor sit\",\r\n                \"url\": \"http://google.com\"\r\n            }, {\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n                \"title\": \"non do ipsum et cillum\",\r\n                \"url\": \"http://google.com\"\r\n            }], 'date');\r\n        }\r\n\r\n\r\n    }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .factory('FilesModals', FilesModals);\r\n\r\n  FilesModals.$inject = ['modalHelper'];\r\n\r\n  function FilesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddFiles\",\r\n        config: {\r\n          templateUrl: 'src/files/add/view.html',\r\n          controller: \"FilesAddController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  FilesAddController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"FileUploader\"];\r\n  angular\r\n    .module('app.files')\r\n    .controller(\"FilesAddController\", FilesAddController);\r\n\r\n  /* @ngInject */\r\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Label = ModalParams.Label;\r\n    vm.Container = ModalParams.Container;\r\n\r\n    vm.Upload = Upload;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n\r\n    function Upload() {}\r\n\r\n    var uploader = vm.uploader = new FileUploader({\r\n      vm: vm, // to automatically update the html. Default: $rootScope\r\n      url: '/api/containers/' + vm.Container + '/upload',\r\n      // formData: [{\r\n      //   key: 'value'\r\n      // }]\r\n    });\r\n\r\n    // ADDING FILTERS\r\n    // uploader.filters.push({\r\n    //   name: 'filterName',\r\n    //   fn: function(item, options) { // second user filter\r\n    //     console.info('filter2');\r\n    //     return true;\r\n    //   }\r\n    // });\r\n\r\n    // REGISTER HANDLERS\r\n    // --------------------\r\n    // uploader.onAfterAddingFile = function(item) {\r\n    //   console.info('After adding a file', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onAfterAddingAll = function(items) {\r\n    //   console.info('After adding all files', items);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\r\n    //   console.info('When adding a file failed', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onBeforeUploadItem = function(item) {\r\n    //   console.info('Before upload', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressItem = function(item, progress) {\r\n    //   console.info('Progress: ' + progress, item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressAll = function(progress) {\r\n    //   console.info('Total progress: ' + progress);\r\n    // };\r\n    // --------------------\r\n    // uploader.onSuccessItem = function(item, response, status, headers) {\r\n    //   console.info('Success', response, status, headers);\r\n    //   vm.$broadcast('uploadCompleted', item);\r\n    // };\r\n    // --------------------\r\n    uploader.onErrorItem = function(item, response, status, headers) {\r\n      item.error = response.error;\r\n      // console.info('Error', response, status, headers);\r\n    };\r\n    // // --------------------\r\n    // uploader.onCancelItem = function(item, response, status, headers) {\r\n    //   console.info('Cancel', response, status);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteItem = function(item, response, status, headers) {\r\n    //   console.info('Complete', response, status, headers);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteAll = function() {\r\n    //   console.info('Complete all');\r\n    // };\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    ContactsTopMenuController.$inject = [\"$state\", \"ContactsModals\"];\r\n    angular\r\n        .module('app.contacts')\r\n        .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n    /* @ngInject */\r\n    function ContactsTopMenuController($state, ContactsModals) {\r\n        var vm = this;\r\n\r\n        vm.AddCompany = AddCompany;\r\n        vm.AddPerson = AddPerson;\r\n        vm.AddEvent = AddEvent;\r\n        vm.ExportImport = ExportImport;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n\r\n        function AddCompany() {\r\n            ContactsModals\r\n                .AddCompany()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.company\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n        function AddPerson() {\r\n            ContactsModals\r\n                .AddPerson()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.person\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n        function AddEvent() {\r\n            ContactsModals\r\n                .AddEvent()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.events.event\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n        function ExportImport() {\r\n            ContactsModals\r\n                .ExportImport()\r\n                .then(function() {});\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n    angular\r\n        .module('app.contacts')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.contacts',\r\n            config: {\r\n                abstract: true,\r\n                url: \"/contacts\",\r\n                template: '<ui-view/>',\r\n            }\r\n        }, {\r\n            state: 'app.contacts.overview',\r\n            config: {\r\n                title: 'Contacts Overview',\r\n                url: \"/\",\r\n                templateUrl: 'src/contacts/overview/view.html',\r\n                controller: 'ContactsOverviewController',\r\n            }\r\n        }, {\r\n            state: 'app.contacts.person',\r\n            config: {\r\n                title: 'Person',\r\n                url: \"/person/:id\",\r\n                templateUrl: 'src/contacts/person/view.html',\r\n                controller: 'ContactsPersonController',\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .factory('ContactsModals', ContactsModals);\r\n\r\n    ContactsModals.$inject = ['modalHelper'];\r\n\r\n    function ContactsModals(modalHelper) {\r\n        return modalHelper.configureModals(getModals());\r\n\r\n        function getModals() {\r\n            return [{\r\n                modal: \"AddPerson\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/person.add/view.html',\r\n                    controller: \"ContactsAddPersonController\",\r\n                    size: \"sm\",\r\n                }\r\n            }, {\r\n                modal: \"AddCompany\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/company.add/view.html',\r\n                    controller: \"ContactsAddCompanyController\",\r\n                    size: \"sm\",\r\n                }\r\n            }, {\r\n                modal: \"AddEvent\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/event.add/view.html',\r\n                    controller: \"ContactsAddEventController\",\r\n                }\r\n            }, {\r\n                modal: \"ExportImport\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/exportimport/view.html',\r\n                    controller: \"ContactsExportImportController\",\r\n                }\r\n            }];\r\n        }\r\n    }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsAddPersonController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    ContactsOverviewController.$inject = [\"$state\", \"Company\", \"ContactsModals\"];\r\n    angular\r\n        .module('app.contacts')\r\n        .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n    /* @ngInject */\r\n    function ContactsOverviewController($state, Company, ContactsModals) {\r\n        var vm = this;\r\n\r\n        vm.AddCompany = AddCompany;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            _getAccessed();\r\n        }\r\n\r\n        function _getAccessed() {\r\n            vm.loading = true;\r\n            Company.find({\r\n                    filter: {\r\n                        limit: 10,\r\n                        order: \"lastAccess DESC\",\r\n                    }\r\n                })\r\n                .$promise\r\n                .then(function(_companies) {\r\n                    vm.Companies = _companies;\r\n                })\r\n                .finally(function() {\r\n                    vm.loading = false;\r\n                });\r\n        }\r\n\r\n        function AddCompany() {\r\n            ContactsModals\r\n                .AddCompany()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.company\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsAddCompanyController.$inject = [\"$uibModalInstance\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($uibModalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $uibModalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"AppUser\"];\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, AppUser) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      AppUser\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.appusers', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"routerHelper\"];\r\n  angular\r\n    .module('app.appusers')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.appusers',\r\n      config: {\r\n        url: '/users',\r\n        controller: \"AppUsersOverviewController\",\r\n        templateUrl: 'src/appusers/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }, {\r\n        modal: \"UserForm\",\r\n        config: {\r\n          templateUrl: 'src/settings/user.form/view.html',\r\n          controller: \"UserFormController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  AppUsersOverviewController.$inject = [\"AppUser\", \"SettingsModals\"];\r\n  angular\r\n    .module('app.appusers')\r\n    .controller('AppUsersOverviewController', AppUsersOverviewController);\r\n\r\n  /* @ngInject */\r\n  function AppUsersOverviewController(AppUser, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.UserForm = UserForm;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadAppUsers();\r\n    }\r\n\r\n    function _loadAppUsers() {\r\n      vm.loading = true;\r\n      return AppUser\r\n        .find()\r\n        .$promise\r\n        .then(function(users) {\r\n          vm.AppUsers = users;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function UserForm(AppUserID) {\r\n      SettingsModals\r\n        .UserForm({\r\n          AppUserID: AppUserID\r\n        })\r\n        .then(function() {\r\n          _loadAppUsers();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  UserFormController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"AppUser\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"UserFormController\", UserFormController);\r\n\r\n  /* @ngInject */\r\n  function UserFormController($uibModalInstance, ModalParams, AppUser) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (ModalParams.AppUserID) {\r\n        AppUser\r\n          .findById({\r\n            id: ModalParams.AppUserID\r\n          })\r\n          .$promise\r\n          .then(function(appuser) {\r\n            vm.AppUser = appuser;\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      AppUser.upsert(vm.AppUser)\r\n        .$promise\r\n        .then(function(user) {\r\n          $uibModalInstance.close();\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  UserFormController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"AppUser\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"UserFormController\", UserFormController);\r\n\r\n  /* @ngInject */\r\n  function UserFormController($uibModalInstance, ModalParams, AppUser) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (ModalParams.AppUserID) {\r\n        AppUser\r\n          .findById({\r\n            id: ModalParams.AppUserID\r\n          })\r\n          .$promise\r\n          .then(function(appuser) {\r\n            vm.AppUser = appuser;\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      AppUser.upsert(vm.AppUser)\r\n        .$promise\r\n        .then(function(user) {\r\n          $uibModalInstance.close();\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ChangePasswordController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"AppUser\", \"toaster\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, AppUser, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      AppUser.prototype$updateAttributes({\r\n          id: AppUser.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n    'use strict';\r\n\r\n    RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n    angular\r\n        .module('app._common')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates(), \"/\");\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app',\r\n            config: {\r\n                abstract: true,\r\n                resolve: {\r\n                    isAuthenticated: function($state, AppUser, $timeout) {\r\n                        $timeout(function() {\r\n                            if (!AppUser.isAuthenticated()) {\r\n                                $state.go(\"auth.login\");\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                templateUrl: 'src/_common/views/layout.html',\r\n                controller: function(AppUser) {\r\n                    var vm = this;\r\n\r\n                    AppUser\r\n                        .getCurrent()\r\n                        .$promise\r\n                        .then(function(_user) {\r\n                            vm.name = _user.fullname.split(\" \")[1];\r\n                        });\r\n\r\n                },\r\n\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n;(function() {\r\n    'use strict';\r\n\r\n    RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n    angular\r\n        .module('app.dashboard')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.dashboard',\r\n            config: {\r\n                title: 'Dashboard',\r\n                url: \"/\",\r\n                templateUrl: 'src/dashboard/view.html',\r\n                controller: 'DashboardController',\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(AppUser, $state) {\r\n          AppUser\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/AppUsers/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;(function() { window.APP={\"name\":\"Balance\",\"description\":\"Manage simple day-to-day jobs for small companies and freelancers\",\"version\":\"0.2.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .factory('CompanyModals', CompanyModals);\r\n\r\n    CompanyModals.$inject = ['modalHelper'];\r\n\r\n    function CompanyModals(modalHelper) {\r\n        return modalHelper.configureModals(getModals());\r\n\r\n        function getModals() {\r\n            return [{\r\n                modal: \"EditLogo\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/company.view/editlogo/view.html',\r\n                    controller: \"ContactsCompanyEditLogoController\",\r\n                    size: \"md\",\r\n                }\r\n            }];\r\n        }\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company, CompanyTabs, CompanyModals) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = CompanyTabs;\r\n\r\n    vm.EditLogo = EditLogo;\r\n\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n    function EditLogo() {\r\n      \r\n      CompanyModals\r\n        .EditLogo({\r\n          Company: vm.Company\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .constant(\"CompanyTabs\", [{\r\n            heading: {\r\n                icon: \"bars\",\r\n                title: 'Overview'\r\n            },\r\n            route: 'app.contacts.company.overview',\r\n        }, {\r\n            heading: {\r\n                icon: \"money\",\r\n                class: \"hidden-xs\",\r\n                title: 'Transactions'\r\n            },\r\n            route: 'app.contacts.company.transactions',\r\n        }, {\r\n            heading: {\r\n                icon: \"files-o\",\r\n                class: \"hidden-xs\",\r\n                title: 'Files'\r\n            },\r\n            route: 'app.contacts.company.files',\r\n        }, {\r\n            heading: {\r\n                icon: \"map-o\",\r\n                class: \"hidden-xs\",\r\n                title: 'Map'\r\n            },\r\n            route: 'app.contacts.company.map',\r\n        }]);\r\n\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController(\r\n    $stateParams,\r\n    Transaction,\r\n    DataFilters,\r\n    ChartGroups) {\r\n\r\n    var vm = this;\r\n\r\n    vm.filter = {\r\n      where: {\r\n        companyId: $stateParams.id,\r\n      },\r\n      order: \"date ASC\",\r\n    }\r\n\r\n    vm.chart = {\r\n      labels: [],\r\n      data: [\r\n        []\r\n      ],\r\n      params: {\r\n        group: \"weekly\",\r\n      },\r\n      options: {\r\n        bezierCurve: false,\r\n        datasetFill: false,\r\n      }\r\n    };\r\n\r\n    vm.params = {\r\n      filter: \"one_month\",\r\n    }\r\n\r\n    vm.DataFilters = DataFilters;\r\n    vm.ChartGroups = ChartGroups;\r\n\r\n    vm.LoadTransactions = LoadTransactions;\r\n    vm.ReloadChart = ReloadChart;\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadTransactions();\r\n    }\r\n\r\n    function LoadTransactions() {\r\n      vm.loading = true;\r\n\r\n      return Transaction\r\n        .find({\r\n          filter: vm.filter\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n          vm.ReloadChart();\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function ReloadChart() {\r\n      console.log(vm.chart.params.group);\r\n      vm.chart.labels = [];\r\n      vm.chart.data[0] = [];\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(ChartGroups[vm.chart.params.group].value);\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.chart.labels.push(keydate);\r\n        vm.chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .constant(\"DataFilters\", {\n      one_month: {\n        alias: \"one_month\",\n        label: \"+-1 Month\",\n        value: {\n          // date\n        },\n      },\n      three_months: {\n        alias: \"three_months\",\n        label: \"+-3 Months\",\n        value: {\n          // date\n        },\n      },\n      all: {\n        alias: \"all\",\n        label: \"All Transactions\",\n        value: false,\n      }\n    })\n    .constant(\"ChartGroups\", {\n      daily: {\n        alias: \"daily\",\n        label: \"Daily\",\n        value: \"DD/MM/YYYY\",\n      },\n      weekly: {\n        alias: \"weekly\",\n        label: \"Weekly\",\n        value: \"[W]ww MM/YYYY\",\r\n      },\n      monthly: {\n        alias: \"monthly\",\n        label: \"Monthly\",\n        value: \"MM/YYYY\",\n      }\n    })\n\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController($stateParams,Person) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadPersons();\r\n    }\r\n\r\n    function _loadPersons() {\r\n      vm.loading = true;\r\n      return Person\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"fullname ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Persons = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n    /* @ngInject */\r\n    function ContactsCompanyOverviewController($stateParams, Event) {\r\n\r\n        var vm = this;\r\n\r\n        vm.reload = reload;\r\n\r\n        vm.params = {\r\n            range: \"WEEK\",\r\n        };\r\n\r\n        var _ranges = {\r\n            \"WEEK\": {\r\n                from: moment().subtract(7, \"days\"),\r\n                to: moment().add(7, \"days\"),\r\n            },\r\n            \"HALFMONTH\": {\r\n                from: moment().subtract(15, \"days\"),\r\n                to: moment().add(15, \"days\"),\r\n            },\r\n            \"MONTH\": {\r\n                from: moment().subtract(1, \"month\"),\r\n                to: moment().add(1, \"month\"),\r\n            }\r\n        };\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            _loadEvents();\r\n        }\r\n\r\n        function reload() {\r\n            activate();\r\n        }\r\n\r\n        function _loadEvents() {\r\n            vm.loading = true;\r\n            return Event\r\n                .find({\r\n                    filter: {\r\n                        where: {\r\n                            date: {\r\n                                gt: _ranges[vm.params.range].from,\r\n                                lt: _ranges[vm.params.range].to,\r\n                            },\r\n                            companyId: $stateParams.id,\r\n                        },\r\n                        order: \"date DESC\",\r\n                    }\r\n                })\r\n                .$promise\r\n                .then(function(data) {\r\n                    vm.Events = data;\r\n                })\r\n                .finally(function() {\r\n                    vm.loading = false;\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      vm.loading = true;\r\n\r\n      vm.center = {};\r\n      vm.markers = {};\r\n\r\n      Company.findById({\r\n          id: $stateParams.id,\r\n        })\r\n        .$promise\r\n        .then(function(company) {\r\n          vm.Company = company;\r\n\r\n          $timeout(function() {\r\n\r\n            vm.center = {\r\n              lat: parseFloat(company.location.lat),\r\n              lng: parseFloat(company.location.lon),\r\n              zoom: 14,\r\n            };\r\n            vm.markers = {\r\n              company: {\r\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\r\n                lat: parseFloat(company.location.lat),\r\n                lng: parseFloat(company.location.lon),\r\n                opacity: 0.8,\r\n                focus: true,\r\n              }\r\n            };\r\n\r\n            vm.loading = false;\r\n\r\n          }, 1000);\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\r\n    var vm = this;\r\n\r\n    vm.container = $stateParams.id;\r\n    vm.UploadFiles = UploadFiles;\r\n    // vm.Download = Download;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadFiles();\r\n    }\r\n\r\n    function UploadFiles() {\r\n      FilesModals\r\n        .AddFiles({\r\n          Label: \"Company\",\r\n          Container: vm.container\r\n        })\r\n        .then(function() {\r\n          _loadFiles();\r\n        });\r\n    }\r\n\r\n    //\r\n    // function Download(file) {\r\n    //   Container\r\n    //     .download({\r\n    //       container: vm.container,\r\n    //       file: file,\r\n    //     })\r\n    //     .$promise\r\n    //     .then(function(data) {\r\n    //       console.log(data);\r\n    //     });\r\n    // }\r\n\r\n    function _loadFiles() {\r\n      vm.loading = true;\r\n      return Container\r\n        .getFiles({\r\n          container: vm.container,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Files = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEditLogoController\", ContactsCompanyEditLogoController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEditLogoController($uibModalInstance, ModalParams, Company, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Company = ModalParams.Company;\r\n    vm.Uploader = new FileUploader({\r\n      vm: vm,\r\n      url: '/api/Containers/' + vm.Company.id + '/upload',\r\n    });\r\n    vm.Uploader.onCompleteItem = function(item, response, status, headers) {\r\n      vm.Company.logo = '/api/Containers/' + vm.Company.id + '/download/' + item.file.name;\r\n      Company.upsert(vm.Company);\r\n    };\r\n    vm.Uploader.onAfterAddingFile = function(item) {\r\n      // console.info('After adding a file', item);\r\n      // console.info(vm.Uploader.queue);\r\n    };\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n\r\n    function Upload() {}\r\n\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.Uploader.uploadItem(0);\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (bytes === 0) return 'Empty';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app._common')\r\n        .directive('pushMenu', pushMenu);\r\n\r\n    pushMenu.$inject = ['$window', '$document'];\r\n\r\n    function pushMenu($window, $document) {\r\n\r\n        var screenSizes = {\r\n            xs: 480,\r\n            sm: 768,\r\n            md: 992,\r\n            lg: 1200\r\n        };\r\n\r\n        var directive = {\r\n            restrict: \"A\",\r\n            link: link\r\n        };\r\n\r\n        return directive;\r\n\r\n        function link(scope, element, attrs) {\r\n\r\n            var _body = angular.element($document[0].body);\r\n\r\n            element.bind(\"click\", function() {\r\n\r\n                if ($window.innerWidth > (screenSizes.sm - 1)) {\r\n                    if (_body.hasClass('sidebar-collapse')) {\r\n                        _body\r\n                            .removeClass('sidebar-collapse');\r\n                    } else {\r\n                        _body\r\n                            .addClass('sidebar-collapse');\r\n                    }\r\n                } else {\r\n                    if (_body.hasClass('sidebar-open')) {\r\n                        _body\r\n                            .removeClass('sidebar-open')\r\n                            .removeClass('sidebar-collapse');\r\n                    } else {\r\n                        _body\r\n                            .addClass('sidebar-open');\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngThumb', ngThumb);\r\n\r\n  /* @ngInject */\r\n  function ngThumb($window) {\r\n    var helper = {\r\n      support: !!($window.FileReader && $window.CanvasRenderingContext2D),\r\n      isFile: function(item) {\r\n        return angular.isObject(item) && item instanceof $window.File;\r\n      },\r\n      isImage: function(file) {\r\n        var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';\r\n        return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\r\n      }\r\n    };\r\n\r\n    return {\r\n      restrict: 'A',\r\n      template: '<canvas/>',\r\n      link: function(scope, element, attributes) {\r\n        if (!helper.support) {\r\n          console.log(\"ngThumb: FileReader not supported\");\r\n          return;\r\n        }\r\n\r\n\r\n        var params = scope.$eval(attributes.ngThumb);\r\n\r\n        console.log(\"ngThumb: params\", params);\r\n        if (!helper.isFile(params.file)) {\r\n          console.log(\"ngThumb: params.file is not a file\");\r\n          return;\r\n        }\r\n\r\n        if (!helper.isImage(params.file)) {\r\n          console.log(\"ngThumb: params.file is not an image\");\r\n          return;\r\n        }\r\n\r\n        var canvas = element.find('canvas');\r\n        var reader = new FileReader();\r\n\r\n        reader.onload = onLoadFile;\r\n        reader.readAsDataURL(params.file);\r\n\r\n        function onLoadFile(event) {\r\n          var img = new Image();\r\n          img.onload = onLoadImage;\r\n          img.src = event.target.result;\r\n        }\r\n\r\n        function onLoadImage() {\r\n          var width = params.width || this.width / this.height * params.height;\r\n          var height = params.height || this.height / this.width * params.width;\r\n          canvas.attr({\r\n            width: width,\r\n            height: height\r\n          });\r\n          canvas[0].getContext('2d').drawImage(this, 0, 0, width, height);\r\n        }\r\n      }\r\n    };\r\n  }\r\n})();\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app._common')\r\n        .directive('contentWrapper', contentWrapper);\r\n\r\n    /* @ngInject */\r\n    function contentWrapper($window, $timeout) {\r\n\r\n        var directive = {\r\n            restrict: \"C\",\r\n            link: link\r\n        };\r\n\r\n        return directive;\r\n\r\n        function link(scope, wrapper, attrs) {\r\n\r\n            fix(wrapper);\r\n\r\n            angular.element($window)\r\n                .bind('resize', function() {\r\n                    fix(wrapper);\r\n                });\r\n\r\n        }\r\n\r\n        function fix(element) {\r\n            var window_height = window.innerHeight;\r\n            var footer_height = 77;\r\n\r\n            element.css({\r\n                height: window_height - footer_height + \"px\"\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.appusers',\r\n    'app.auth',\r\n    'app.contacts',\r\n    'app.dashboard',\r\n    'app.files',\r\n    'app.settings',\r\n    'app.static',\r\n    'app.invoices',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.static',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/stat\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.static.help',\r\n      config: {\r\n        title: 'Help',\r\n        url: \"/help\",\r\n        templateUrl: 'src/static/pages/help.html',\r\n      }\r\n    }, {\r\n      state: 'app.static.terms',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/terms\",\r\n        templateUrl: 'src/static/pages/terms.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        abstract: true,\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/_common/layout.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.general',\r\n      config: {\r\n        url: '/general',\r\n        controller: \"SettingsGeneralController\",\r\n        templateUrl: 'src/settings/general/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.users',\r\n      config: {\r\n        url: '/users',\r\n        controller: \"SettingsAppUsersController\",\r\n        templateUrl: 'src/settings/users/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.profile',\r\n      config: {\r\n        url: '/profile',\r\n        controller: \"SettingsProfileController\",\r\n        templateUrl: 'src/settings/profile/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.help',\r\n      config: {\r\n        url: '/help',\r\n        controller: \"SettingsHelpController\",\r\n        templateUrl: 'src/settings/help/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.settings.terms',\r\n      config: {\r\n        url: '/terms',\r\n        controller: \"SettingsTermsController\",\r\n        templateUrl: 'src/settings/terms/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }, {\r\n        modal: \"UserForm\",\r\n        config: {\r\n          templateUrl: 'src/settings/user.form/view.html',\r\n          controller: \"UserFormController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsGeneralController', SettingsGeneralController);\r\n\r\n  /* @ngInject */\r\n  function SettingsGeneralController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.invoices', []);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.invoices')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.invoices',\r\n            config: {\r\n                abstract: true,\r\n                url: \"/invoices\",\r\n                template: '<ui-view/>',\r\n            }\r\n        }, {\r\n            state: 'app.invoices.overview',\r\n            config: {\r\n                title: 'Invoices Dashboard',\r\n                url: \"/\",\r\n                templateUrl: 'src/invoices/overview/view.html',\r\n                controller: 'InvoicesOverviewController',\r\n            }\r\n        }, {\r\n            state: 'app.invoices.invoice',\r\n            config: {\r\n                title: 'Invoice Preview',\r\n                url: \"/\",\r\n                templateUrl: 'src/invoices/invoice/view.html',\r\n                controller: 'InvoicesInvoiceController',\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.invoices')\r\n        .controller(\"InvoicesOverviewController\", InvoicesOverviewController);\r\n\r\n    /* @ngInject */\r\n    function InvoicesOverviewController(Invoice) {\r\n        var vm = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            Invoice.find({\r\n                    filter: {\r\n                        limit: 10,\r\n                        order: \"date DESC\",\r\n                    }\r\n                })\r\n                .$promise\r\n                .then(function(_invoices) {\r\n                    vm.invoices = _invoices;\r\n                })\r\n                .finally(function() {\r\n\r\n                });\r\n        }\r\n\r\n\r\n    }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.invoices')\r\n        .controller(\"InvoicesInvoiceController\", InvoicesInvoiceController);\r\n\r\n    /* @ngInject */\r\n    function InvoicesInvoiceController() {\r\n        var vm = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            vm.news = _.sortBy([{\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Tempor ut qui non mollit qui.\",\r\n                \"title\": \"ea enim veniam laboris ullamco\",\r\n                \"url\": \"http://google.com\"\r\n            }, {\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n                \"title\": \"cillum aute deserunt labore est\",\r\n                \"url\": \"http://google.com\"\r\n            }, {\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n                \"title\": \"velit occaecat adipisicing tempor sit\",\r\n                \"url\": \"http://google.com\"\r\n            }, {\r\n                \"date\": \"2015-01-01\",\r\n                \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n                \"title\": \"non do ipsum et cillum\",\r\n                \"url\": \"http://google.com\"\r\n            }], 'date');\r\n        }\r\n\r\n\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .factory('FilesModals', FilesModals);\r\n\r\n  FilesModals.$inject = ['modalHelper'];\r\n\r\n  function FilesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddFiles\",\r\n        config: {\r\n          templateUrl: 'src/files/add/view.html',\r\n          controller: \"FilesAddController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .controller(\"FilesAddController\", FilesAddController);\r\n\r\n  /* @ngInject */\r\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Label = ModalParams.Label;\r\n    vm.Container = ModalParams.Container;\r\n\r\n    vm.Upload = Upload;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n\r\n    function Upload() {}\r\n\r\n    var uploader = vm.uploader = new FileUploader({\r\n      vm: vm, // to automatically update the html. Default: $rootScope\r\n      url: '/api/containers/' + vm.Container + '/upload',\r\n      // formData: [{\r\n      //   key: 'value'\r\n      // }]\r\n    });\r\n\r\n    // ADDING FILTERS\r\n    // uploader.filters.push({\r\n    //   name: 'filterName',\r\n    //   fn: function(item, options) { // second user filter\r\n    //     console.info('filter2');\r\n    //     return true;\r\n    //   }\r\n    // });\r\n\r\n    // REGISTER HANDLERS\r\n    // --------------------\r\n    // uploader.onAfterAddingFile = function(item) {\r\n    //   console.info('After adding a file', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onAfterAddingAll = function(items) {\r\n    //   console.info('After adding all files', items);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\r\n    //   console.info('When adding a file failed', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onBeforeUploadItem = function(item) {\r\n    //   console.info('Before upload', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressItem = function(item, progress) {\r\n    //   console.info('Progress: ' + progress, item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressAll = function(progress) {\r\n    //   console.info('Total progress: ' + progress);\r\n    // };\r\n    // --------------------\r\n    // uploader.onSuccessItem = function(item, response, status, headers) {\r\n    //   console.info('Success', response, status, headers);\r\n    //   vm.$broadcast('uploadCompleted', item);\r\n    // };\r\n    // --------------------\r\n    uploader.onErrorItem = function(item, response, status, headers) {\r\n      item.error = response.error;\r\n      // console.info('Error', response, status, headers);\r\n    };\r\n    // // --------------------\r\n    // uploader.onCancelItem = function(item, response, status, headers) {\r\n    //   console.info('Cancel', response, status);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteItem = function(item, response, status, headers) {\r\n    //   console.info('Complete', response, status, headers);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteAll = function() {\r\n    //   console.info('Complete all');\r\n    // };\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n    /* @ngInject */\r\n    function ContactsTopMenuController($state, ContactsModals) {\r\n        var vm = this;\r\n\r\n        vm.AddCompany = AddCompany;\r\n        vm.AddPerson = AddPerson;\r\n        vm.AddEvent = AddEvent;\r\n        vm.ExportImport = ExportImport;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n\r\n        function AddCompany() {\r\n            ContactsModals\r\n                .AddCompany()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.company\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n        function AddPerson() {\r\n            ContactsModals\r\n                .AddPerson()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.person\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n        function AddEvent() {\r\n            ContactsModals\r\n                .AddEvent()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.events.event\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n        function ExportImport() {\r\n            ContactsModals\r\n                .ExportImport()\r\n                .then(function() {});\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.contacts',\r\n            config: {\r\n                abstract: true,\r\n                url: \"/contacts\",\r\n                template: '<ui-view/>',\r\n            }\r\n        }, {\r\n            state: 'app.contacts.overview',\r\n            config: {\r\n                title: 'Contacts Overview',\r\n                url: \"/\",\r\n                templateUrl: 'src/contacts/overview/view.html',\r\n                controller: 'ContactsOverviewController',\r\n            }\r\n        }, {\r\n            state: 'app.contacts.person',\r\n            config: {\r\n                title: 'Person',\r\n                url: \"/person/:id\",\r\n                templateUrl: 'src/contacts/person/view.html',\r\n                controller: 'ContactsPersonController',\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .factory('ContactsModals', ContactsModals);\r\n\r\n    ContactsModals.$inject = ['modalHelper'];\r\n\r\n    function ContactsModals(modalHelper) {\r\n        return modalHelper.configureModals(getModals());\r\n\r\n        function getModals() {\r\n            return [{\r\n                modal: \"AddPerson\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/person.add/view.html',\r\n                    controller: \"ContactsAddPersonController\",\r\n                    size: \"sm\",\r\n                }\r\n            }, {\r\n                modal: \"AddCompany\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/company.add/view.html',\r\n                    controller: \"ContactsAddCompanyController\",\r\n                    size: \"sm\",\r\n                }\r\n            }, {\r\n                modal: \"AddEvent\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/event.add/view.html',\r\n                    controller: \"ContactsAddEventController\",\r\n                }\r\n            }, {\r\n                modal: \"ExportImport\",\r\n                config: {\r\n                    templateUrl: 'src/contacts/exportimport/view.html',\r\n                    controller: \"ContactsExportImportController\",\r\n                }\r\n            }];\r\n        }\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.contacts')\r\n        .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n    /* @ngInject */\r\n    function ContactsOverviewController($state, Company, ContactsModals) {\r\n        var vm = this;\r\n\r\n        vm.AddCompany = AddCompany;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            _getAccessed();\r\n        }\r\n\r\n        function _getAccessed() {\r\n            vm.loading = true;\r\n            Company.find({\r\n                    filter: {\r\n                        limit: 10,\r\n                        order: \"lastAccess DESC\",\r\n                    }\r\n                })\r\n                .$promise\r\n                .then(function(_companies) {\r\n                    vm.Companies = _companies;\r\n                })\r\n                .finally(function() {\r\n                    vm.loading = false;\r\n                });\r\n        }\r\n\r\n        function AddCompany() {\r\n            ContactsModals\r\n                .AddCompany()\r\n                .then(function(response) {\r\n                    $state.go(\"app.contacts.company\", {\r\n                        id: response.id\r\n                    });\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($uibModalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $uibModalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, AppUser) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      AppUser\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.appusers', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.appusers')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.appusers',\r\n      config: {\r\n        url: '/users',\r\n        controller: \"AppUsersOverviewController\",\r\n        templateUrl: 'src/appusers/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }, {\r\n        modal: \"UserForm\",\r\n        config: {\r\n          templateUrl: 'src/settings/user.form/view.html',\r\n          controller: \"UserFormController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.appusers')\r\n    .controller('AppUsersOverviewController', AppUsersOverviewController);\r\n\r\n  /* @ngInject */\r\n  function AppUsersOverviewController(AppUser, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.UserForm = UserForm;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadAppUsers();\r\n    }\r\n\r\n    function _loadAppUsers() {\r\n      vm.loading = true;\r\n      return AppUser\r\n        .find()\r\n        .$promise\r\n        .then(function(users) {\r\n          vm.AppUsers = users;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function UserForm(AppUserID) {\r\n      SettingsModals\r\n        .UserForm({\r\n          AppUserID: AppUserID\r\n        })\r\n        .then(function() {\r\n          _loadAppUsers();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"UserFormController\", UserFormController);\r\n\r\n  /* @ngInject */\r\n  function UserFormController($uibModalInstance, ModalParams, AppUser) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (ModalParams.AppUserID) {\r\n        AppUser\r\n          .findById({\r\n            id: ModalParams.AppUserID\r\n          })\r\n          .$promise\r\n          .then(function(appuser) {\r\n            vm.AppUser = appuser;\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      AppUser.upsert(vm.AppUser)\r\n        .$promise\r\n        .then(function(user) {\r\n          $uibModalInstance.close();\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"UserFormController\", UserFormController);\r\n\r\n  /* @ngInject */\r\n  function UserFormController($uibModalInstance, ModalParams, AppUser) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (ModalParams.AppUserID) {\r\n        AppUser\r\n          .findById({\r\n            id: ModalParams.AppUserID\r\n          })\r\n          .$promise\r\n          .then(function(appuser) {\r\n            vm.AppUser = appuser;\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      }\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      AppUser.upsert(vm.AppUser)\r\n        .$promise\r\n        .then(function(user) {\r\n          $uibModalInstance.close();\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, AppUser, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      AppUser.prototype$updateAttributes({\r\n          id: AppUser.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app._common')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates(), \"/\");\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app',\r\n            config: {\r\n                abstract: true,\r\n                resolve: {\r\n                    isAuthenticated: function($state, AppUser, $timeout) {\r\n                        $timeout(function() {\r\n                            if (!AppUser.isAuthenticated()) {\r\n                                $state.go(\"auth.login\");\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                templateUrl: 'src/_common/views/layout.html',\r\n                controller: function(AppUser) {\r\n                    var vm = this;\r\n\r\n                    AppUser\r\n                        .getCurrent()\r\n                        .$promise\r\n                        .then(function(_user) {\r\n                            vm.name = _user.fullname.split(\" \")[1];\r\n                        });\r\n\r\n                },\r\n\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.dashboard')\r\n        .run(RoutesConfig);\r\n\r\n    /* @ngInject */\r\n    function RoutesConfig(configHelper, routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [{\r\n            state: 'app.dashboard',\r\n            config: {\r\n                title: 'Dashboard',\r\n                url: \"/\",\r\n                templateUrl: 'src/dashboard/view.html',\r\n                controller: 'DashboardController',\r\n            }\r\n        }];\r\n    }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"2015-01-01\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(AppUser, $state) {\r\n          AppUser\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/AppUsers/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","(function() { window.APP={\"name\":\"Balance\",\"description\":\"Manage simple day-to-day jobs for small companies and freelancers\",\"version\":\"0.2.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()"],"sourceRoot":"/source/"}