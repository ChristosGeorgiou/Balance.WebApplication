{"version":3,"sources":["contacts/_module.js","contacts/company/transactions/controller.js","app.min.js","contacts/company/persons/controller.js","contacts/company/overview/controller.js","contacts/company/info/controller.js","contacts/company/files/controller.js","contacts/company/events/controller.js","_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/join.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/constants/topmenu.js","app.js","_common/configs/rootscope.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","settings/changepassword/controller.js","files/_module.js","files/_common/modals.js","files/add/controller.js","contacts/_common/routes.js","contacts/_common/modals.js","contacts/topmenu/controller.js","contacts/overview/controller.js","contacts/contact/controller.js","contacts/company/controller.js","contacts/addperson/controller.js","contacts/addcompany/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","static/_module.js","static/routes.js","settings/service.js","settings/routes.js","settings/modals.js","dashboard/_module.js","dashboard/routes.js","dashboard/controller.js","auth/routes.js","auth/interceptor.js","auth/constants.js","run.js","config.js"],"names":["angular","module","ContactsCompanyTransactionsController","$stateParams","Transaction","activate","_loadTransactions","then","_reloadChart","vm","loading","find","filter","where","companyId","id","order","$promise","data","_total","_","each","transaction","amount","total","Transactions","groupby","Chart","labels","options","bezierCurve","datasetFill","grouped_transactions","groupBy","moment","date","format","transactions","keydate","_date_total","reduce","Math","round","push","this","$inject","controller","ContactsCompanyPersonsController","Person","_loadPersons","Persons","ContactsCompanyOverviewController","ContactsCompanyInfoController","ContactsCompanyFilesController","Container","FilesModals","_loadFiles","UploadFiles","AddFiles","Label","container","getFiles","Files","ContactsCompanyEventsController","Event","_loadEvents","reload","gt","_ranges","params","range","from","lt","to","Events","WEEK","subtract","add","HALFMONTH","MONTH","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","configureStates","states","otherwisePath","forEach","state","config","controllerAs","extend","views","item","hasOtherwise","otherwise","getStates","get","service","$get","provider","modalHelperProvider","modalHelper","$uibModal","$q","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","open","result","configHelperProvider","ConfigHelper","notifyConfig","configName","message","console","log","numberFixedLen","a","b","slice","join","array","separator","fromNow","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","parseFloat","isFinite","units","number","floor","pow","toFixed","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","on","$apply","v","val","$","$setValidity","directive","ngPrint","element","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","body","errSrc","ngSrc","$set","bind","remove","src","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","constant","name","subtree","appRun","$rootScope","APP","$on","event","toState","title","description","run","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","useXDomain","headers","common","SettingsController","SettingsService","SettingsModals","ChangePassword","go","ref","ChangePasswordController","$uibModalInstance","User","toaster","Save","prototype$updateAttributes","getCurrentId","password","Password","user","pop","close","getModals","templateUrl","size","factory","FilesAddController","FileUploader","Upload","uploader","url","formData","key","filters","fn","info","onAfterAddingFile","onAfterAddingAll","items","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","progress","onProgressAll","onErrorItem","status","onCancelItem","onCompleteItem","onCompleteAll","RoutesConfig","configHelper","routerHelper","abstract","template","ContactsModals","ContactsTopMenuController","AddCompany","AddPerson","AddEvent","ExportImport","ContactsOverviewController","Company","_getAccessed","loading_accessed","limit","_companies","accessed","ContactsContactController","ContactsCompanyController","findById","Tabs","heading","icon","route","class","Print","docDefinition","content","pdfMake","createPdf","ContactsAddPersonController","loadCompanies","Companies","ContactsAddCompanyController","create","_company","AuthLoginController","LoginMessages","_signMessage","toUpperCase","SignIn","Alert","login","copy","credentials","rejection","error","code","isAuthenticated","$timeout","","getCurrent","_user","username","menu-contacts@app","libs","href","$resource","GetSettings","Service","chain","rows","map","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","DashboardController","news","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","AuthInterceptorConfig","interceptors","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","evt","redirectTo","version","repository","author","email","client","database","roles","users","role"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\r\n\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadTransactions()\r\n        .then(function() {\r\n          _reloadChart();\r\n        });\r\n    }\r\n\r\n    function _loadTransactions() {\r\n      vm.loading = true;\r\n      return Transaction\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function _reloadChart(groupby) {\r\n\r\n      vm.Chart = {\r\n        labels: [],\r\n        data: [\r\n          []\r\n        ],\r\n        options:{\r\n          bezierCurve : false,\r\n          datasetFill : false,\r\n        }\r\n      };\r\n\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.Chart.labels.push(keydate);\r\n        vm.Chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyTransactionsController.$inject = [\"$stateParams\", \"Transaction\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\r\n\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadTransactions()\r\n        .then(function() {\r\n          _reloadChart();\r\n        });\r\n    }\r\n\r\n    function _loadTransactions() {\r\n      vm.loading = true;\r\n      return Transaction\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function _reloadChart(groupby) {\r\n\r\n      vm.Chart = {\r\n        labels: [],\r\n        data: [\r\n          []\r\n        ],\r\n        options:{\r\n          bezierCurve : false,\r\n          datasetFill : false,\r\n        }\r\n      };\r\n\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.Chart.labels.push(keydate);\r\n        vm.Chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyPersonsController.$inject = [\"$stateParams\", \"Person\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\n\n  /* @ngInject */\n  function ContactsCompanyPersonsController($stateParams,Person) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadPersons();\n    }\n\n    function _loadPersons() {\n      vm.loading = true;\n      return Person\n        .find({\n          filter: {\n            where: {\n              companyId: $stateParams.id,\n            },\n            order: \"fullname ASC\",\n          }\n        })\n        .$promise\n        .then(function(data) {\n          vm.Persons = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyInfoController\", ContactsCompanyInfoController);\n\n  /* @ngInject */\n  function ContactsCompanyInfoController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyFilesController.$inject = [\"$stateParams\", \"Container\", \"FilesModals\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\n\n  /* @ngInject */\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\n    var vm = this;\n\n    vm.container = $stateParams.id;\n    vm.UploadFiles = UploadFiles;\n    // vm.Download = Download;\n\n    activate();\n\n    function activate() {\n      _loadFiles();\n    }\n\n    function UploadFiles() {\n      FilesModals\n        .AddFiles({\n          Label: \"Company\",\n          Container: vm.container\n        })\n        .then(function() {\n          _loadFiles();\n        });\n    }\n\n    //\n    // function Download(file) {\n    //   Container\n    //     .download({\n    //       container: vm.container,\n    //       file: file,\n    //     })\n    //     .$promise\n    //     .then(function(data) {\n    //       console.log(data);\n    //     });\n    // }\n\n    function _loadFiles() {\n      vm.loading = true;\n      return Container\n        .getFiles({\n          container: vm.container,\n        })\n        .$promise\n        .then(function(data) {\n          vm.Files = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyEventsController.$inject = [\"$stateParams\", \"Event\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  routerHelperProvider.$inject = [\"$locationProvider\", \"$stateProvider\", \"$urlRouterProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .provider('configHelper', configHelperProvider);\n\n  /* @ngInject */\n  function configHelperProvider() {\n    /* jshint validthis:true */\n    this.$get = ConfigHelper;\n\n    // $locationProvider.html5Mode(true);\n\n    ConfigHelper.$inject = [];\n\n    function ConfigHelper() {\n\n      var service = {\n        notifyConfig: notifyConfig\n      };\n\n      return service;\n\n      //function notifyConfig() {}\n      function notifyConfig(configName, message) {\n        message = message || {};\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\n      }\n\n    }\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('numberFixedLen', numberFixedLen)\n\n  /* @ngInject */\n  function numberFixedLen() {\n    return function(a, b) {\n      return (1e4 + a + \"\").slice(-b)\n    }\n  }\n\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('join', join)\n\n  /* @ngInject */\n  function join() {\n    return function(array, separator) {\n      if (!array) {\n        return '';\n      }\n      if (!separator) {\n        separator = ', ';\n      }\n      return array.join(separator);\n    };\n  }\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fromNow', fromNow)\n\n  /* @ngInject */\n  function fromNow() {\n    return function(date) {\n      return moment(date).fromNow();\n    }\n  }\n  \n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fileicon', fileicon)\n\n  /* @ngInject */\n  function fileicon() {\n    var _icons = {\n      \"application/pdf\": \"fa-file-pdf-o\",\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\n      \"application/x-msword\": \"fa-file-word-o\",\n      \"application/x-msexcel\": \"fa-file-excel-o\",\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\n      \"image/gif\": \"fa-file-image-o\",\n      \"image/png\": \"fa-file-image-o\",\n      \"image/tiff\": \"fa-file-image-o\",\n      \"image/jpeg\": \"fa-file-image-o\",\n      \"video/avi\": \"fa-file-video-o\",\n      \"video/mpeg\": \"fa-file-video-o\",\n      \"video/msvideo\": \"fa-file-video-o\",\n      \"video/quicktime\": \"fa-file-video-o\",\n      \"application/zip\": \"fa-file-zip-o\"\n    };\n    return function(a) {\n      return _icons[a] || \"fa-file-o\";\n    }\n  }\n}());\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('bytes', bytes)\n\n  /* @ngInject */\n  function bytes() {\n    return function(bytes, precision) {\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\n      if (bytes === 0) return 'Empty';\n      if (typeof precision === 'undefined') precision = 1;\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\n    }\n  }\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .constant(\"topmenu\", [{\n      name: \"States\",\n      link: \"#\",\n      subtree: [{\n        name: \"state 1\",\n        link: \"state1\"\n      }, {\n        name: \"state 2\",\n        link: \"state2\"\n      }]\n    }])\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  SettingsController.$inject = [\"$state\", \"SettingsService\", \"SettingsModals\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ChangePasswordController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"User\", \"toaster\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.files')\n    .factory('FilesModals', FilesModals);\n\n  FilesModals.$inject = ['modalHelper'];\n\n  function FilesModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddFiles\",\n        config: {\n          templateUrl: 'src/files/add/view.html',\n          controller: \"FilesAddController\",\n          size:\"md\",\n        }\n      }];\n    }\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  FilesAddController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"FileUploader\"];\n  angular\n    .module('app.files')\n    .controller(\"FilesAddController\", FilesAddController);\n\n  /* @ngInject */\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\n    var vm = this;\n\n    vm.Label = ModalParams.Label;\n    vm.Container = ModalParams.Container;\n\n    vm.Upload = Upload;\n\n    activate();\n\n    function activate() {}\n\n\n    function Upload() {}\n\n    var uploader = vm.uploader = new FileUploader({\n      vm: vm, // to automatically update the html. Default: $rootScope\n      url: '/api/containers/'+vm.Container+'/upload',\n      formData: [{\n        key: 'value'\n      }]\n    });\n\n    // ADDING FILTERS\n    uploader.filters.push({\n      name: 'filterName',\n      fn: function(item, options) { // second user filter\n        console.info('filter2');\n        return true;\n      }\n    });\n\n    // REGISTER HANDLERS\n    // --------------------\n    uploader.onAfterAddingFile = function(item) {\n      console.info('After adding a file', item);\n    };\n    // --------------------\n    uploader.onAfterAddingAll = function(items) {\n      console.info('After adding all files', items);\n    };\n    // --------------------\n    uploader.onWhenAddingFileFailed = function(item, filter, options) {\n      console.info('When adding a file failed', item);\n    };\n    // --------------------\n    uploader.onBeforeUploadItem = function(item) {\n      console.info('Before upload', item);\n    };\n    // --------------------\n    uploader.onProgressItem = function(item, progress) {\n      console.info('Progress: ' + progress, item);\n    };\n    // --------------------\n    uploader.onProgressAll = function(progress) {\n      console.info('Total progress: ' + progress);\n    };\n    // --------------------\n    // uploader.onSuccessItem = function(item, response, status, headers) {\n    //   console.info('Success', response, status, headers);\n    //   vm.$broadcast('uploadCompleted', item);\n    // };\n    // --------------------\n    uploader.onErrorItem = function(item, response, status, headers) {\n      console.info('Error', response, status, headers);\n    };\n    // --------------------\n    uploader.onCancelItem = function(item, response, status, headers) {\n      console.info('Cancel', response, status);\n    };\n    // --------------------\n    uploader.onCompleteItem = function(item, response, status, headers) {\n      console.info('Complete', response, status, headers);\n    };\n    // --------------------\n    uploader.onCompleteAll = function() {\n      console.info('Complete all');\n    };\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/contacts\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.overview',\r\n      config: {\r\n        title: 'Contacts Overview',\r\n        url: \"/\",\r\n        templateUrl: 'src/contacts/overview/view.html',\r\n        controller: 'ContactsOverviewController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.person',\r\n      config: {\r\n        title: 'Person',\r\n        url: \"/person/:id\",\r\n        templateUrl: 'src/contacts/person/view.html',\r\n        controller: 'ContactsPersonController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        templateUrl: 'src/contacts/company/view.html',\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.info\",\r\n      config: {\r\n        title: \"info\",\r\n        url: \"/info\",\r\n        templateUrl: 'src/contacts/company/info/view.html',\r\n        controller: 'ContactsCompanyInfoController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .factory('ContactsModals', ContactsModals);\n\n  ContactsModals.$inject = ['modalHelper'];\n\n  function ContactsModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddPerson\",\n        config: {\n          templateUrl: 'src/contacts/addperson/view.html',\n          controller: \"ContactsAddPersonController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddCompany\",\n        config: {\n          templateUrl: 'src/contacts/addcompany/view.html',\n          controller: \"ContactsAddCompanyController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddEvent\",\n        config: {\n          templateUrl: 'src/contacts/addevent/view.html',\n          controller: \"ContactsAddEventController\",\n        }\n      }, {\n        modal: \"ExportImport\",\n        config: {\n          templateUrl: 'src/contacts/exportimport/view.html',\n          controller: \"ContactsExportImportController\",\n        }\n      }];\n    }\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsTopMenuController.$inject = [\"$state\", \"ContactsModals\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\n\n  /* @ngInject */\n  function ContactsTopMenuController($state, ContactsModals) {\n    var vm = this;\n\n    vm.AddCompany = AddCompany;\n    vm.AddPerson = AddPerson;\n    vm.AddEvent = AddEvent;\n    vm.ExportImport = ExportImport;\n\n    activate();\n\n    function activate() {\n\n    }\n\n    function AddCompany() {\n      ContactsModals\n        .AddCompany()\n        .then(function(response) {\n          $state.go(\"app.contacts.company\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddPerson() {\n      ContactsModals\n        .AddPerson()\n        .then(function(response) {\n          $state.go(\"app.contacts.person\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddEvent() {\n      ContactsModals\n        .AddEvent()\n        .then(function(response) {\n          $state.go(\"app.contacts.events.event\", {\n            id: response.id\n          });\n        });\n    }\n\n    function ExportImport() {\n      ContactsModals\n        .ExportImport()\n        .then(function() {});\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsOverviewController.$inject = [\"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\n\n  /* @ngInject */\n  function ContactsOverviewController(Company) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _getAccessed();\n    }\n\n    function _getAccessed() {\n      vm.loading_accessed = true;\n      Company.find({\n          filter: {\n            limit: 10,\n            order: \"lastAccess DESC\",\n          }\n        })\n        .$promise\n        .then(function(_companies) {\n          vm.accessed = _companies;\n        })\n        .finally(function() {\n          vm.loading_accessed = false;\n        });\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsContactController\", ContactsContactController);\n\n  /* @ngInject */\n  function ContactsContactController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyController.$inject = [\"$stateParams\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = [{\r\n      heading: {\r\n        icon: \"bars\",\r\n        title: 'Info'\r\n      },\r\n      route: 'app.contacts.company.info',\r\n      params: {\r\n        class: \"visible-xs visible-sm\",\r\n      }\r\n    }, {\r\n      heading: {\r\n        icon: \"bell-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Overview'\r\n      },\r\n      route: 'app.contacts.company.overview',\r\n    }, {\r\n      heading: {\r\n        icon: \"calendar\",\r\n        class: \"hidden-xs\",\r\n        title: 'Events'\r\n      },\r\n      route: 'app.contacts.company.events',\r\n    }, {\r\n      heading: {\r\n        icon: \"users\",\r\n        class: \"hidden-xs\",\r\n        title: 'Persons'\r\n      },\r\n      route: 'app.contacts.company.persons',\r\n    }, {\r\n      heading: {\r\n        icon: \"money\",\r\n        class: \"hidden-xs\",\r\n        title: 'Transactions'\r\n      },\r\n      route: 'app.contacts.company.transactions',\r\n    }, {\r\n      heading: {\r\n        icon: \"files-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Files'\r\n      },\r\n      route: 'app.contacts.company.files',\r\n    }];\r\n\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  ContactsAddPersonController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\n\n  /* @ngInject */\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter:{\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {}\n\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\r\n  ContactsAddCompanyController.$inject = [\"$uibModalInstance\", \"Company\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\n\n  /* @ngInject */\n  function ContactsAddCompanyController($uibModalInstance, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter: {\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {\n      Company\n        .create(vm.Company)\n        .$promise\n        .then(function(_company) {\n          $uibModalInstance.close(_company);\n        });\n    }\n\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app._common')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates(), \"/\");\n  }\n\n  function getStates() {\n    return [{\n      state: 'app',\n      config: {\n        abstract: true,\n        resolve: {\n          isAuthenticated: function($state, User, $timeout) {\n            $timeout(function() {\n              if (!User.isAuthenticated()) {\n                $state.go(\"auth.login\");\n                return false;\n              }\n            });\n          }\n        },\n        views: {\n          \"\": {\n            templateUrl: 'src/_common/views/layout.html',\n            controller: function(User) {\n              var vm = this;\n\n              User\n                .getCurrent()\n                .$promise\n                .then(function(_user) {\n                  vm.username = _user.username;\n                });\n\n            },\n          },\n          \"menu-contacts@app\": {\n            templateUrl: 'src/contacts/topmenu/view.html',\n            controller: \"ContactsTopMenuController\",\n          },\n          // \"menu-contacts@app\": {\n          //   templateUrl: 'src/contacts/topmenu/view.html',\n          //   controller: \"ContactsTopMenuController\",\n          // },\n        }\n      }\n    }];\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  SettingsService.$inject = [\"$resource\"];\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  appRun.$inject = [\"routerHelper\"];\n  angular\n    .module('app.settings')\n    .run(appRun);\n\n  /* @ngInject */\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.settings',\n      config: {\n        url: '/settings',\n        controller: \"SettingsController\",\n        templateUrl: 'src/settings/overview/view.html',\n      }\n    }];\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n;/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\n  angular\n    .module('app.dashboard')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.dashboard',\n      config: {\n        title: 'Dashboard',\n        url: \"/\",\n        templateUrl: 'src/dashboard/view.html',\n        controller: 'DashboardController',\n      }\n    }];\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .controller(\"DashboardController\", DashboardController);\n\n  /* @ngInject */\n  function DashboardController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.news = _.sortBy([{\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\n        \"content\": \"Tempor ut qui non mollit qui.\",\n        \"title\": \"ea enim veniam laboris ullamco\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\n        \"title\": \"cillum aute deserunt labore est\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\n        \"title\": \"velit occaecat adipisicing tempor sit\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\n        \"title\": \"non do ipsum et cillum\",\n        \"url\": \"http://google.com\"\n      }], 'date');\n    }\n\n\n  }\n\n}());\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"config\":{\"client\":{\"name\":\"Demo Company\"},\"database\":\"balance\",\"roles\":[\"ADMIN\",\"MEMBER\"],\"users\":[{\"username\":\"admin\",\"email\":\"admin@admin.com\",\"password\":\"admin\",\"role\":\"ADMIN\"},{\"username\":\"member\",\"email\":\"member@member.com\",\"password\":\"member\",\"role\":\"MEMBER\"}]}}; })()","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\n\n  /* @ngInject */\n  function ContactsCompanyPersonsController($stateParams,Person) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadPersons();\n    }\n\n    function _loadPersons() {\n      vm.loading = true;\n      return Person\n        .find({\n          filter: {\n            where: {\n              companyId: $stateParams.id,\n            },\n            order: \"fullname ASC\",\n          }\n        })\n        .$promise\n        .then(function(data) {\n          vm.Persons = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyInfoController\", ContactsCompanyInfoController);\n\n  /* @ngInject */\n  function ContactsCompanyInfoController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\n\n  /* @ngInject */\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\n    var vm = this;\n\n    vm.container = $stateParams.id;\n    vm.UploadFiles = UploadFiles;\n    // vm.Download = Download;\n\n    activate();\n\n    function activate() {\n      _loadFiles();\n    }\n\n    function UploadFiles() {\n      FilesModals\n        .AddFiles({\n          Label: \"Company\",\n          Container: vm.container\n        })\n        .then(function() {\n          _loadFiles();\n        });\n    }\n\n    //\n    // function Download(file) {\n    //   Container\n    //     .download({\n    //       container: vm.container,\n    //       file: file,\n    //     })\n    //     .$promise\n    //     .then(function(data) {\n    //       console.log(data);\n    //     });\n    // }\n\n    function _loadFiles() {\n      vm.loading = true;\n      return Container\n        .getFiles({\n          container: vm.container,\n        })\n        .$promise\n        .then(function(data) {\n          vm.Files = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .provider('configHelper', configHelperProvider);\n\n  /* @ngInject */\n  function configHelperProvider() {\n    /* jshint validthis:true */\n    this.$get = ConfigHelper;\n\n    // $locationProvider.html5Mode(true);\n\n    ConfigHelper.$inject = [];\n\n    function ConfigHelper() {\n\n      var service = {\n        notifyConfig: notifyConfig\n      };\n\n      return service;\n\n      //function notifyConfig() {}\n      function notifyConfig(configName, message) {\n        message = message || {};\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\n      }\n\n    }\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('numberFixedLen', numberFixedLen)\n\n  /* @ngInject */\n  function numberFixedLen() {\n    return function(a, b) {\n      return (1e4 + a + \"\").slice(-b)\n    }\n  }\n\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('join', join)\n\n  /* @ngInject */\n  function join() {\n    return function(array, separator) {\n      if (!array) {\n        return '';\n      }\n      if (!separator) {\n        separator = ', ';\n      }\n      return array.join(separator);\n    };\n  }\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fromNow', fromNow)\n\n  /* @ngInject */\n  function fromNow() {\n    return function(date) {\n      return moment(date).fromNow();\n    }\n  }\n  \n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('fileicon', fileicon)\n\n  /* @ngInject */\n  function fileicon() {\n    var _icons = {\n      \"application/pdf\": \"fa-file-pdf-o\",\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\n      \"application/x-msword\": \"fa-file-word-o\",\n      \"application/x-msexcel\": \"fa-file-excel-o\",\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\n      \"image/gif\": \"fa-file-image-o\",\n      \"image/png\": \"fa-file-image-o\",\n      \"image/tiff\": \"fa-file-image-o\",\n      \"image/jpeg\": \"fa-file-image-o\",\n      \"video/avi\": \"fa-file-video-o\",\n      \"video/mpeg\": \"fa-file-video-o\",\n      \"video/msvideo\": \"fa-file-video-o\",\n      \"video/quicktime\": \"fa-file-video-o\",\n      \"application/zip\": \"fa-file-zip-o\"\n    };\n    return function(a) {\n      return _icons[a] || \"fa-file-o\";\n    }\n  }\n}());\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .filter('bytes', bytes)\n\n  /* @ngInject */\n  function bytes() {\n    return function(bytes, precision) {\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\n      if (bytes === 0) return 'Empty';\n      if (typeof precision === 'undefined') precision = 1;\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\n    }\n  }\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .constant(\"topmenu\", [{\n      name: \"States\",\n      link: \"#\",\n      subtree: [{\n        name: \"state 1\",\n        link: \"state1\"\n      }, {\n        name: \"state 2\",\n        link: \"state2\"\n      }]\n    }])\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.files')\n    .factory('FilesModals', FilesModals);\n\n  FilesModals.$inject = ['modalHelper'];\n\n  function FilesModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddFiles\",\n        config: {\n          templateUrl: 'src/files/add/view.html',\n          controller: \"FilesAddController\",\n          size:\"md\",\n        }\n      }];\n    }\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.files')\n    .controller(\"FilesAddController\", FilesAddController);\n\n  /* @ngInject */\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\n    var vm = this;\n\n    vm.Label = ModalParams.Label;\n    vm.Container = ModalParams.Container;\n\n    vm.Upload = Upload;\n\n    activate();\n\n    function activate() {}\n\n\n    function Upload() {}\n\n    var uploader = vm.uploader = new FileUploader({\n      vm: vm, // to automatically update the html. Default: $rootScope\n      url: '/api/containers/'+vm.Container+'/upload',\n      formData: [{\n        key: 'value'\n      }]\n    });\n\n    // ADDING FILTERS\n    uploader.filters.push({\n      name: 'filterName',\n      fn: function(item, options) { // second user filter\n        console.info('filter2');\n        return true;\n      }\n    });\n\n    // REGISTER HANDLERS\n    // --------------------\n    uploader.onAfterAddingFile = function(item) {\n      console.info('After adding a file', item);\n    };\n    // --------------------\n    uploader.onAfterAddingAll = function(items) {\n      console.info('After adding all files', items);\n    };\n    // --------------------\n    uploader.onWhenAddingFileFailed = function(item, filter, options) {\n      console.info('When adding a file failed', item);\n    };\n    // --------------------\n    uploader.onBeforeUploadItem = function(item) {\n      console.info('Before upload', item);\n    };\n    // --------------------\n    uploader.onProgressItem = function(item, progress) {\n      console.info('Progress: ' + progress, item);\n    };\n    // --------------------\n    uploader.onProgressAll = function(progress) {\n      console.info('Total progress: ' + progress);\n    };\n    // --------------------\n    // uploader.onSuccessItem = function(item, response, status, headers) {\n    //   console.info('Success', response, status, headers);\n    //   vm.$broadcast('uploadCompleted', item);\n    // };\n    // --------------------\n    uploader.onErrorItem = function(item, response, status, headers) {\n      console.info('Error', response, status, headers);\n    };\n    // --------------------\n    uploader.onCancelItem = function(item, response, status, headers) {\n      console.info('Cancel', response, status);\n    };\n    // --------------------\n    uploader.onCompleteItem = function(item, response, status, headers) {\n      console.info('Complete', response, status, headers);\n    };\n    // --------------------\n    uploader.onCompleteAll = function() {\n      console.info('Complete all');\n    };\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/contacts\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.overview',\r\n      config: {\r\n        title: 'Contacts Overview',\r\n        url: \"/\",\r\n        templateUrl: 'src/contacts/overview/view.html',\r\n        controller: 'ContactsOverviewController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.person',\r\n      config: {\r\n        title: 'Person',\r\n        url: \"/person/:id\",\r\n        templateUrl: 'src/contacts/person/view.html',\r\n        controller: 'ContactsPersonController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        templateUrl: 'src/contacts/company/view.html',\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.info\",\r\n      config: {\r\n        title: \"info\",\r\n        url: \"/info\",\r\n        templateUrl: 'src/contacts/company/info/view.html',\r\n        controller: 'ContactsCompanyInfoController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .factory('ContactsModals', ContactsModals);\n\n  ContactsModals.$inject = ['modalHelper'];\n\n  function ContactsModals(modalHelper) {\n    return modalHelper.configureModals(getModals());\n\n    function getModals() {\n      return [{\n        modal: \"AddPerson\",\n        config: {\n          templateUrl: 'src/contacts/addperson/view.html',\n          controller: \"ContactsAddPersonController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddCompany\",\n        config: {\n          templateUrl: 'src/contacts/addcompany/view.html',\n          controller: \"ContactsAddCompanyController\",\n          size:\"sm\",\n        }\n      }, {\n        modal: \"AddEvent\",\n        config: {\n          templateUrl: 'src/contacts/addevent/view.html',\n          controller: \"ContactsAddEventController\",\n        }\n      }, {\n        modal: \"ExportImport\",\n        config: {\n          templateUrl: 'src/contacts/exportimport/view.html',\n          controller: \"ContactsExportImportController\",\n        }\n      }];\n    }\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\n\n  /* @ngInject */\n  function ContactsTopMenuController($state, ContactsModals) {\n    var vm = this;\n\n    vm.AddCompany = AddCompany;\n    vm.AddPerson = AddPerson;\n    vm.AddEvent = AddEvent;\n    vm.ExportImport = ExportImport;\n\n    activate();\n\n    function activate() {\n\n    }\n\n    function AddCompany() {\n      ContactsModals\n        .AddCompany()\n        .then(function(response) {\n          $state.go(\"app.contacts.company\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddPerson() {\n      ContactsModals\n        .AddPerson()\n        .then(function(response) {\n          $state.go(\"app.contacts.person\", {\n            id: response.id\n          });\n        });\n    }\n\n    function AddEvent() {\n      ContactsModals\n        .AddEvent()\n        .then(function(response) {\n          $state.go(\"app.contacts.events.event\", {\n            id: response.id\n          });\n        });\n    }\n\n    function ExportImport() {\n      ContactsModals\n        .ExportImport()\n        .then(function() {});\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\n\n  /* @ngInject */\n  function ContactsOverviewController(Company) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _getAccessed();\n    }\n\n    function _getAccessed() {\n      vm.loading_accessed = true;\n      Company.find({\n          filter: {\n            limit: 10,\n            order: \"lastAccess DESC\",\n          }\n        })\n        .$promise\n        .then(function(_companies) {\n          vm.accessed = _companies;\n        })\n        .finally(function() {\n          vm.loading_accessed = false;\n        });\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsContactController\", ContactsContactController);\n\n  /* @ngInject */\n  function ContactsContactController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n    }\n\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = [{\r\n      heading: {\r\n        icon: \"bars\",\r\n        title: 'Info'\r\n      },\r\n      route: 'app.contacts.company.info',\r\n      params: {\r\n        class: \"visible-xs visible-sm\",\r\n      }\r\n    }, {\r\n      heading: {\r\n        icon: \"bell-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Overview'\r\n      },\r\n      route: 'app.contacts.company.overview',\r\n    }, {\r\n      heading: {\r\n        icon: \"calendar\",\r\n        class: \"hidden-xs\",\r\n        title: 'Events'\r\n      },\r\n      route: 'app.contacts.company.events',\r\n    }, {\r\n      heading: {\r\n        icon: \"users\",\r\n        class: \"hidden-xs\",\r\n        title: 'Persons'\r\n      },\r\n      route: 'app.contacts.company.persons',\r\n    }, {\r\n      heading: {\r\n        icon: \"money\",\r\n        class: \"hidden-xs\",\r\n        title: 'Transactions'\r\n      },\r\n      route: 'app.contacts.company.transactions',\r\n    }, {\r\n      heading: {\r\n        icon: \"files-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Files'\r\n      },\r\n      route: 'app.contacts.company.files',\r\n    }];\r\n\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\n\n  /* @ngInject */\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter:{\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {}\n\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\n\n  /* @ngInject */\n  function ContactsAddCompanyController($uibModalInstance, Company) {\n    var vm = this;\n\n    vm.Save = Save;\n\n    activate();\n\n    function activate() {\n      loadCompanies();\n    }\n\n    function loadCompanies() {\n      vm.Companies = Company.find({\n        filter: {\n          order: 'name ASC',\n        }\n      });\n    }\n\n    function Save() {\n      Company\n        .create(vm.Company)\n        .$promise\n        .then(function(_company) {\n          $uibModalInstance.close(_company);\n        });\n    }\n\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app._common')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates(), \"/\");\n  }\n\n  function getStates() {\n    return [{\n      state: 'app',\n      config: {\n        abstract: true,\n        resolve: {\n          isAuthenticated: function($state, User, $timeout) {\n            $timeout(function() {\n              if (!User.isAuthenticated()) {\n                $state.go(\"auth.login\");\n                return false;\n              }\n            });\n          }\n        },\n        views: {\n          \"\": {\n            templateUrl: 'src/_common/views/layout.html',\n            controller: function(User) {\n              var vm = this;\n\n              User\n                .getCurrent()\n                .$promise\n                .then(function(_user) {\n                  vm.username = _user.username;\n                });\n\n            },\n          },\n          \"menu-contacts@app\": {\n            templateUrl: 'src/contacts/topmenu/view.html',\n            controller: \"ContactsTopMenuController\",\n          },\n          // \"menu-contacts@app\": {\n          //   templateUrl: 'src/contacts/topmenu/view.html',\n          //   controller: \"ContactsTopMenuController\",\n          // },\n        }\n      }\n    }];\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.settings')\n    .run(appRun);\n\n  /* @ngInject */\n  function appRun(routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.settings',\n      config: {\n        url: '/settings',\n        controller: \"SettingsController\",\n        templateUrl: 'src/settings/overview/view.html',\n      }\n    }];\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n","/* jshint -W097, -W033 */\n(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .run(RoutesConfig);\n\n  /* @ngInject */\n  function RoutesConfig(configHelper, routerHelper) {\n    routerHelper.configureStates(getStates());\n  }\n\n  function getStates() {\n    return [{\n      state: 'app.dashboard',\n      config: {\n        title: 'Dashboard',\n        url: \"/\",\n        templateUrl: 'src/dashboard/view.html',\n        controller: 'DashboardController',\n      }\n    }];\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.dashboard')\n    .controller(\"DashboardController\", DashboardController);\n\n  /* @ngInject */\n  function DashboardController() {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.news = _.sortBy([{\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\n        \"content\": \"Tempor ut qui non mollit qui.\",\n        \"title\": \"ea enim veniam laboris ullamco\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\n        \"title\": \"cillum aute deserunt labore est\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\n        \"title\": \"velit occaecat adipisicing tempor sit\",\n        \"url\": \"http://google.com\"\n      }, {\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\n        \"title\": \"non do ipsum et cillum\",\n        \"url\": \"http://google.com\"\n      }], 'date');\n    }\n\n\n  }\n\n}());\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"config\":{\"client\":{\"name\":\"Demo Company\"},\"database\":\"balance\",\"roles\":[\"ADMIN\",\"MEMBER\"],\"users\":[{\"username\":\"admin\",\"email\":\"admin@admin.com\",\"password\":\"admin\",\"role\":\"ADMIN\"},{\"username\":\"member\",\"email\":\"member@member.com\",\"password\":\"member\",\"role\":\"MEMBER\"}]}}; })()"],"sourceRoot":"/source/"}