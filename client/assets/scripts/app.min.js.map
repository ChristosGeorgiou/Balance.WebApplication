{"version":3,"sources":["contacts/_module.js","contacts/company/_common/routes.js","app.min.js","contacts/company/_common/modals.js","contacts/company/_common/controller.js","contacts/company/_common/constants.js","contacts/company/transactions/controller.js","contacts/company/transactions/constants.js","contacts/company/persons/controller.js","contacts/company/overview/controller.js","contacts/company/map/controller.js","contacts/company/files/controller.js","contacts/company/events/controller.js","contacts/company/editlogo/controller.js","_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/join.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/ngthumb.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/constants/topmenu.js","app.js","_common/configs/rootscope.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","settings/changepassword/controller.js","files/_module.js","files/add/controller.js","files/_common/modals.js","contacts/_common/routes.js","contacts/_common/modals.js","contacts/topmenu/controller.js","contacts/overview/controller.js","contacts/contact/controller.js","contacts/addperson/controller.js","contacts/addcompany/controller.js","auth/_module.js","auth/login/controller.js","static/_module.js","static/routes.js","_common/routes.js","settings/service.js","settings/routes.js","settings/modals.js","dashboard/_module.js","dashboard/routes.js","dashboard/controller.js","auth/routes.js","auth/interceptor.js","auth/constants.js","run.js","config.js"],"names":["angular","module","RoutesConfig","configHelper","routerHelper","configureStates","getStates","state","config","abstract","url","template","controller","title","templateUrl","$inject","run","CompanyModals","modalHelper","getModals","modal","size","configureModals","factory","ContactsCompanyController","$stateParams","Company","CompanyTabs","activate","vm","findById","id","EditLogo","this","Tabs","Print","docDefinition","content","pdfMake","createPdf","open","constant","heading","icon","route","class","ContactsCompanyTransactionsController","Transaction","DataFilters","ChartGroups","LoadTransactions","loading","find","filter","$promise","then","data","_total","_","each","transaction","amount","total","Transactions","ReloadChart","console","log","chart","params","group","labels","grouped_transactions","groupBy","moment","date","format","value","transactions","keydate","_date_total","reduce","Math","round","push","where","companyId","order","options","bezierCurve","datasetFill","one_month","alias","label","three_months","all","daily","weekly","monthly","ContactsCompanyPersonsController","Person","_loadPersons","Persons","ContactsCompanyOverviewController","_loadCompany","include","ContactsCompanyMapController","$timeout","center","markers","company","lat","parseFloat","location","lng","lon","zoom","message","name","street","opacity","focus","ContactsCompanyFilesController","Container","FilesModals","_loadFiles","UploadFiles","AddFiles","Label","container","getFiles","Files","ContactsCompanyEventsController","Event","_loadEvents","reload","gt","_ranges","range","from","lt","to","Events","WEEK","subtract","add","HALFMONTH","MONTH","ContactsCompanyEditLogoController","$uibModalInstance","ModalParams","FileUploader","Save","Uploader","uploadItem","onCompleteItem","item","response","status","headers","logo","file","upsert","onAfterAddingFile","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","states","otherwisePath","forEach","controllerAs","extend","views","hasOtherwise","otherwise","get","service","$get","provider","modalHelperProvider","$uibModal","$q","modals","_ret","obj","ModalResultComplete","ModalResultFailed","reason","reject","resolve","result","configHelperProvider","ConfigHelper","notifyConfig","configName","numberFixedLen","a","b","slice","join","array","separator","fromNow","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","isFinite","units","number","floor","pow","toFixed","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","on","$apply","v","val","$","$setValidity","directive","ngThumb","$window","helper","support","FileReader","CanvasRenderingContext2D","isFile","isObject","File","isImage","type","lastIndexOf","indexOf","element","attributes","onLoadFile","event","img","Image","onload","onLoadImage","src","target","width","height","canvas","attr","getContext","drawImage","$eval","reader","readAsDataURL","ngPrint","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","body","errSrc","ngSrc","$set","bind","remove","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","subtree","appRun","$rootScope","APP","$on","toState","description","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","useXDomain","common","SettingsController","SettingsService","SettingsModals","ChangePassword","go","ref","ChangePasswordController","User","toaster","prototype$updateAttributes","getCurrentId","password","Password","user","pop","close","FilesAddController","Upload","uploader","onErrorItem","error","ContactsModals","ContactsTopMenuController","AddCompany","AddPerson","AddEvent","ExportImport","ContactsOverviewController","_getAccessed","loading_accessed","limit","_companies","accessed","ContactsContactController","ContactsAddPersonController","loadCompanies","Companies","ContactsAddCompanyController","create","_company","AuthLoginController","LoginMessages","_signMessage","toUpperCase","SignIn","Alert","login","copy","credentials","rejection","code","libs","href","isAuthenticated","","getCurrent","_user","username","menu-contacts@app","$resource","GetSettings","Service","chain","rows","map","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","DashboardController","news","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","AuthInterceptorConfig","interceptors","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","evt","redirectTo","version","repository","author","email","client"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', [\r\n      'leaflet-directive',\r\n      'chart.js',\r\n    ]);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        template:\"<ui-view/>\",\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.map\",\r\n      config: {\r\n        title: \"map\",\r\n        url: \"/map\",\r\n        templateUrl: 'src/contacts/company/map/view.html',\r\n        controller: 'ContactsCompanyMapController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile\",\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/contacts/company/_common/_profile.html',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', [\r\n      'leaflet-directive',\r\n      'chart.js',\r\n    ]);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        template:\"<ui-view/>\",\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.map\",\r\n      config: {\r\n        title: \"map\",\r\n        url: \"/map\",\r\n        templateUrl: 'src/contacts/company/map/view.html',\r\n        controller: 'ContactsCompanyMapController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile\",\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/contacts/company/_common/_profile.html',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .factory('CompanyModals', CompanyModals);\r\n\r\n  CompanyModals.$inject = ['modalHelper'];\r\n\r\n  function CompanyModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"EditLogo\",\r\n        config: {\r\n          templateUrl: 'src/contacts/company/editlogo/view.html',\r\n          controller: \"ContactsCompanyEditLogoController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyController.$inject = [\"$stateParams\", \"Company\", \"CompanyTabs\", \"CompanyModals\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company, CompanyTabs, CompanyModals) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = CompanyTabs;\r\n\r\n    vm.EditLogo = EditLogo;\r\n\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n    function EditLogo() {\r\n      \r\n      CompanyModals\r\n        .EditLogo({\r\n          Company: vm.Company\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .constant(\"CompanyTabs\", [{\r\n      heading: {\r\n        icon: \"bars\",\r\n        title: 'Overview'\r\n      },\r\n      route: 'app.contacts.company.profile.overview',\r\n    }, {\r\n      heading: {\r\n        icon: \"calendar\",\r\n        class: \"hidden-xs\",\r\n        title: 'Events'\r\n      },\r\n      route: 'app.contacts.company.profile.events',\r\n    }, {\r\n      heading: {\r\n        icon: \"money\",\r\n        class: \"hidden-xs\",\r\n        title: 'Transactions'\r\n      },\r\n      route: 'app.contacts.company.profile.transactions',\r\n    }, {\r\n      heading: {\r\n        icon: \"files-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Files'\r\n      },\r\n      route: 'app.contacts.company.profile.files',\r\n    }]);\r\n\r\n\r\n}());\r\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyTransactionsController.$inject = [\"$stateParams\", \"Transaction\", \"DataFilters\", \"ChartGroups\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\n\n  /* @ngInject */\n  function ContactsCompanyTransactionsController(\n    $stateParams,\n    Transaction,\n    DataFilters,\n    ChartGroups) {\n\n    var vm = this;\n\n    vm.filter = {\n      where: {\n        companyId: $stateParams.id,\n      },\n      order: \"date ASC\",\n    }\n\n    vm.chart = {\n      labels: [],\n      data: [\n        []\n      ],\n      params: {\n        group: \"weekly\",\n      },\n      options: {\n        bezierCurve: false,\n        datasetFill: false,\n      }\n    };\n\n    vm.params = {\n      filter: \"one_month\",\n    }\n\n    vm.DataFilters = DataFilters;\n    vm.ChartGroups = ChartGroups;\n\n    vm.LoadTransactions = LoadTransactions;\n    vm.ReloadChart = ReloadChart;\n    activate();\n\n    function activate() {\n      vm.LoadTransactions();\n    }\n\n    function LoadTransactions() {\n      vm.loading = true;\n\n      return Transaction\n        .find({\n          filter: vm.filter\n        })\n        .$promise\n        .then(function(data) {\n          var _total = 0;\n          _.each(data, function(transaction) {\n            _total += transaction.amount;\n            transaction.total = _total;\n          });\n          vm.Transactions = data;\n          vm.ReloadChart();\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n    function ReloadChart() {\n      console.log(vm.chart.params.group);\n      vm.chart.labels = [];\n      vm.chart.data[0] = [];\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\n        return moment(transaction.date).format(ChartGroups[vm.chart.params.group].value);\n      });\n\n      _.each(grouped_transactions, function(transactions, keydate) {\n        var _date_total = _.reduce(transactions, function(total, transaction) {\n          return Math.round(transaction.amount + total);\n        }, 0);\n        vm.chart.labels.push(keydate);\n        vm.chart.data[0].push(_date_total);\n      });\n\n    }\n\n  }\n\n}());\n;(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .constant(\"DataFilters\", {\n      one_month: {\n        alias: \"one_month\",\n        label: \"+-1 Month\",\n        value: {\n          // date\n        },\n      },\n      three_months: {\n        alias: \"three_months\",\n        label: \"+-3 Months\",\n        value: {\n          // date\n        },\n      },\n      all: {\n        alias: \"all\",\n        label: \"All Transactions\",\n        value: false,\n      }\n    })\n    .constant(\"ChartGroups\", {\n      daily: {\n        alias: \"daily\",\n        label: \"Daily\",\n        value: \"DD/MM/YYYY\",\n      },\n      weekly: {\n        alias: \"weekly\",\n        label: \"Weekly\",\n        value: \"[W]ww MM/YYYY\",\r\n      },\n      monthly: {\n        alias: \"monthly\",\n        label: \"Monthly\",\n        value: \"MM/YYYY\",\n      }\n    })\n\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyPersonsController.$inject = [\"$stateParams\", \"Person\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController($stateParams,Person) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadPersons();\r\n    }\r\n\r\n    function _loadPersons() {\r\n      vm.loading = true;\r\n      return Person\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"fullname ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Persons = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyOverviewController.$inject = [\"$stateParams\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController($stateParams,Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadCompany();\r\n    }\r\n\r\n    function _loadCompany() {\r\n      vm.loading = true;\r\n      return Company\r\n        .findById({\r\n          id: $stateParams.id,\r\n          filter: {\r\n            include: [\"persons\"],\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Company = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyMapController.$inject = [\"$stateParams\", \"Company\", \"$timeout\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      vm.loading = true;\r\n\r\n      vm.center = {};\r\n      vm.markers = {};\r\n\r\n      Company.findById({\r\n          id: $stateParams.id,\r\n        })\r\n        .$promise\r\n        .then(function(company) {\r\n          vm.Company = company;\r\n\r\n          $timeout(function() {\r\n\r\n            vm.center = {\r\n              lat: parseFloat(company.location.lat),\r\n              lng: parseFloat(company.location.lon),\r\n              zoom: 14,\r\n            };\r\n            vm.markers = {\r\n              company: {\r\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\r\n                lat: parseFloat(company.location.lat),\r\n                lng: parseFloat(company.location.lon),\r\n                opacity: 0.8,\r\n                focus: true,\r\n              }\r\n            };\r\n\r\n            vm.loading = false;\r\n\r\n          }, 1000);\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyFilesController.$inject = [\"$stateParams\", \"Container\", \"FilesModals\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\r\n    var vm = this;\r\n\r\n    vm.container = $stateParams.id;\r\n    vm.UploadFiles = UploadFiles;\r\n    // vm.Download = Download;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadFiles();\r\n    }\r\n\r\n    function UploadFiles() {\r\n      FilesModals\r\n        .AddFiles({\r\n          Label: \"Company\",\r\n          Container: vm.container\r\n        })\r\n        .then(function() {\r\n          _loadFiles();\r\n        });\r\n    }\r\n\r\n    //\r\n    // function Download(file) {\r\n    //   Container\r\n    //     .download({\r\n    //       container: vm.container,\r\n    //       file: file,\r\n    //     })\r\n    //     .$promise\r\n    //     .then(function(data) {\r\n    //       console.log(data);\r\n    //     });\r\n    // }\r\n\r\n    function _loadFiles() {\r\n      vm.loading = true;\r\n      return Container\r\n        .getFiles({\r\n          container: vm.container,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Files = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyEventsController.$inject = [\"$stateParams\", \"Event\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyEditLogoController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"Company\", \"FileUploader\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEditLogoController\", ContactsCompanyEditLogoController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEditLogoController($uibModalInstance, ModalParams, Company, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Company = ModalParams.Company;\r\n    vm.Uploader = new FileUploader({\r\n      vm: vm,\r\n      url: '/api/Containers/' + vm.Company.id + '/upload',\r\n    });\r\n    vm.Uploader.onCompleteItem = function(item, response, status, headers) {\r\n      vm.Company.logo = '/api/Containers/' + vm.Company.id + '/download/' + item.file.name;\r\n      Company.upsert(vm.Company);\r\n    };\r\n    vm.Uploader.onAfterAddingFile = function(item) {\r\n      // console.info('After adding a file', item);\r\n      // console.info(vm.Uploader.queue);\r\n    };\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n\r\n    function Upload() {}\r\n\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.Uploader.uploadItem(0);\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  routerHelperProvider.$inject = [\"$locationProvider\", \"$stateProvider\", \"$urlRouterProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n  \r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (bytes === 0) return 'Empty';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  ngThumb.$inject = [\"$window\"];\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngThumb', ngThumb)\r\n\r\n  /* @ngInject */\r\n  function ngThumb($window) {\r\n    var helper = {\r\n      support: !!($window.FileReader && $window.CanvasRenderingContext2D),\r\n      isFile: function(item) {\r\n        return angular.isObject(item) && item instanceof $window.File;\r\n      },\r\n      isImage: function(file) {\r\n        var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';\r\n        return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\r\n      }\r\n    };\r\n\r\n    return {\r\n      restrict: 'A',\r\n      template: '<canvas/>',\r\n      link: function(scope, element, attributes) {\r\n        if (!helper.support) {\r\n          console.log(\"ngThumb: FileReader not supported\");\r\n          return;\r\n        }\r\n\r\n\r\n        var params = scope.$eval(attributes.ngThumb);\r\n\r\n        console.log(\"ngThumb: params\", params);\r\n        if (!helper.isFile(params.file)) {\r\n          console.log(\"ngThumb: params.file is not a file\");\r\n          return;\r\n        }\r\n\r\n        if (!helper.isImage(params.file)) {\r\n          console.log(\"ngThumb: params.file is not an image\");\r\n          return;\r\n        }\r\n\r\n        var canvas = element.find('canvas');\r\n        var reader = new FileReader();\r\n\r\n        reader.onload = onLoadFile;\r\n        reader.readAsDataURL(params.file);\r\n\r\n        function onLoadFile(event) {\r\n          var img = new Image();\r\n          img.onload = onLoadImage;\r\n          img.src = event.target.result;\r\n        }\r\n\r\n        function onLoadImage() {\r\n          var width = params.width || this.width / this.height * params.height;\r\n          var height = params.height || this.height / this.width * params.width;\r\n          canvas.attr({\r\n            width: width,\r\n            height: height\r\n          });\r\n          canvas[0].getContext('2d').drawImage(this, 0, 0, width, height);\r\n        }\r\n      }\r\n    };\r\n  }\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  SettingsController.$inject = [\"$state\", \"SettingsService\", \"SettingsModals\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ChangePasswordController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"User\", \"toaster\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  FilesAddController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"FileUploader\"];\r\n  angular\r\n    .module('app.files')\r\n    .controller(\"FilesAddController\", FilesAddController);\r\n\r\n  /* @ngInject */\r\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Label = ModalParams.Label;\r\n    vm.Container = ModalParams.Container;\r\n\r\n    vm.Upload = Upload;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n\r\n    function Upload() {}\r\n\r\n    var uploader = vm.uploader = new FileUploader({\r\n      vm: vm, // to automatically update the html. Default: $rootScope\r\n      url: '/api/containers/' + vm.Container + '/upload',\r\n      // formData: [{\r\n      //   key: 'value'\r\n      // }]\r\n    });\r\n\r\n    // ADDING FILTERS\r\n    // uploader.filters.push({\r\n    //   name: 'filterName',\r\n    //   fn: function(item, options) { // second user filter\r\n    //     console.info('filter2');\r\n    //     return true;\r\n    //   }\r\n    // });\r\n\r\n    // REGISTER HANDLERS\r\n    // --------------------\r\n    // uploader.onAfterAddingFile = function(item) {\r\n    //   console.info('After adding a file', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onAfterAddingAll = function(items) {\r\n    //   console.info('After adding all files', items);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\r\n    //   console.info('When adding a file failed', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onBeforeUploadItem = function(item) {\r\n    //   console.info('Before upload', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressItem = function(item, progress) {\r\n    //   console.info('Progress: ' + progress, item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressAll = function(progress) {\r\n    //   console.info('Total progress: ' + progress);\r\n    // };\r\n    // --------------------\r\n    // uploader.onSuccessItem = function(item, response, status, headers) {\r\n    //   console.info('Success', response, status, headers);\r\n    //   vm.$broadcast('uploadCompleted', item);\r\n    // };\r\n    // --------------------\r\n    uploader.onErrorItem = function(item, response, status, headers) {\r\n      item.error = response.error;\r\n      // console.info('Error', response, status, headers);\r\n    };\r\n    // // --------------------\r\n    // uploader.onCancelItem = function(item, response, status, headers) {\r\n    //   console.info('Cancel', response, status);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteItem = function(item, response, status, headers) {\r\n    //   console.info('Complete', response, status, headers);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteAll = function() {\r\n    //   console.info('Complete all');\r\n    // };\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .factory('FilesModals', FilesModals);\r\n\r\n  FilesModals.$inject = ['modalHelper'];\r\n\r\n  function FilesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddFiles\",\r\n        config: {\r\n          templateUrl: 'src/files/add/view.html',\r\n          controller: \"FilesAddController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/contacts\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.overview',\r\n      config: {\r\n        title: 'Contacts Overview',\r\n        url: \"/\",\r\n        templateUrl: 'src/contacts/overview/view.html',\r\n        controller: 'ContactsOverviewController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.person',\r\n      config: {\r\n        title: 'Person',\r\n        url: \"/person/:id\",\r\n        templateUrl: 'src/contacts/person/view.html',\r\n        controller: 'ContactsPersonController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .factory('ContactsModals', ContactsModals);\r\n\r\n  ContactsModals.$inject = ['modalHelper'];\r\n\r\n  function ContactsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddPerson\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addperson/view.html',\r\n          controller: \"ContactsAddPersonController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddCompany\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addcompany/view.html',\r\n          controller: \"ContactsAddCompanyController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddEvent\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addevent/view.html',\r\n          controller: \"ContactsAddEventController\",\r\n        }\r\n      }, {\r\n        modal: \"ExportImport\",\r\n        config: {\r\n          templateUrl: 'src/contacts/exportimport/view.html',\r\n          controller: \"ContactsExportImportController\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsTopMenuController.$inject = [\"$state\", \"ContactsModals\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n  /* @ngInject */\r\n  function ContactsTopMenuController($state, ContactsModals) {\r\n    var vm = this;\r\n\r\n    vm.AddCompany = AddCompany;\r\n    vm.AddPerson = AddPerson;\r\n    vm.AddEvent = AddEvent;\r\n    vm.ExportImport = ExportImport;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function AddCompany() {\r\n      ContactsModals\r\n        .AddCompany()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.company\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddPerson() {\r\n      ContactsModals\r\n        .AddPerson()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.person\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddEvent() {\r\n      ContactsModals\r\n        .AddEvent()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.events.event\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function ExportImport() {\r\n      ContactsModals\r\n        .ExportImport()\r\n        .then(function() {});\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsOverviewController.$inject = [\"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsOverviewController(Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _getAccessed();\r\n    }\r\n\r\n    function _getAccessed() {\r\n      vm.loading_accessed = true;\r\n      Company.find({\r\n          filter: {\r\n            limit: 10,\r\n            order: \"lastAccess DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(_companies) {\r\n          vm.accessed = _companies;\r\n        })\r\n        .finally(function() {\r\n          vm.loading_accessed = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsContactController\", ContactsContactController);\r\n\r\n  /* @ngInject */\r\n  function ContactsContactController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsAddPersonController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsAddCompanyController.$inject = [\"$uibModalInstance\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($uibModalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $uibModalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates(), \"/\");\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        resolve: {\r\n          isAuthenticated: function($state, User, $timeout) {\r\n            $timeout(function() {\r\n              if (!User.isAuthenticated()) {\r\n                $state.go(\"auth.login\");\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n        },\r\n        views: {\r\n          \"\": {\r\n            templateUrl: 'src/_common/views/layout.html',\r\n            controller: function(User) {\r\n              var vm = this;\r\n\r\n              User\r\n                .getCurrent()\r\n                .$promise\r\n                .then(function(_user) {\r\n                  vm.username = _user.username;\r\n                });\r\n\r\n            },\r\n          },\r\n          \"menu-contacts@app\": {\r\n            templateUrl: 'src/contacts/topmenu/view.html',\r\n            controller: \"ContactsTopMenuController\",\r\n          },\r\n          // \"menu-contacts@app\": {\r\n          //   templateUrl: 'src/contacts/topmenu/view.html',\r\n          //   controller: \"ContactsTopMenuController\",\r\n          // },\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  SettingsService.$inject = [\"$resource\"];\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"routerHelper\"];\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.dashboard')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.dashboard',\r\n      config: {\r\n        title: 'Dashboard',\r\n        url: \"/\",\r\n        templateUrl: 'src/dashboard/view.html',\r\n        controller: 'DashboardController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .factory('CompanyModals', CompanyModals);\r\n\r\n  CompanyModals.$inject = ['modalHelper'];\r\n\r\n  function CompanyModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"EditLogo\",\r\n        config: {\r\n          templateUrl: 'src/contacts/company/editlogo/view.html',\r\n          controller: \"ContactsCompanyEditLogoController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company, CompanyTabs, CompanyModals) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = CompanyTabs;\r\n\r\n    vm.EditLogo = EditLogo;\r\n\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n    function EditLogo() {\r\n      \r\n      CompanyModals\r\n        .EditLogo({\r\n          Company: vm.Company\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .constant(\"CompanyTabs\", [{\r\n      heading: {\r\n        icon: \"bars\",\r\n        title: 'Overview'\r\n      },\r\n      route: 'app.contacts.company.profile.overview',\r\n    }, {\r\n      heading: {\r\n        icon: \"calendar\",\r\n        class: \"hidden-xs\",\r\n        title: 'Events'\r\n      },\r\n      route: 'app.contacts.company.profile.events',\r\n    }, {\r\n      heading: {\r\n        icon: \"money\",\r\n        class: \"hidden-xs\",\r\n        title: 'Transactions'\r\n      },\r\n      route: 'app.contacts.company.profile.transactions',\r\n    }, {\r\n      heading: {\r\n        icon: \"files-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Files'\r\n      },\r\n      route: 'app.contacts.company.profile.files',\r\n    }]);\r\n\r\n\r\n}());\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\n\n  /* @ngInject */\n  function ContactsCompanyTransactionsController(\n    $stateParams,\n    Transaction,\n    DataFilters,\n    ChartGroups) {\n\n    var vm = this;\n\n    vm.filter = {\n      where: {\n        companyId: $stateParams.id,\n      },\n      order: \"date ASC\",\n    }\n\n    vm.chart = {\n      labels: [],\n      data: [\n        []\n      ],\n      params: {\n        group: \"weekly\",\n      },\n      options: {\n        bezierCurve: false,\n        datasetFill: false,\n      }\n    };\n\n    vm.params = {\n      filter: \"one_month\",\n    }\n\n    vm.DataFilters = DataFilters;\n    vm.ChartGroups = ChartGroups;\n\n    vm.LoadTransactions = LoadTransactions;\n    vm.ReloadChart = ReloadChart;\n    activate();\n\n    function activate() {\n      vm.LoadTransactions();\n    }\n\n    function LoadTransactions() {\n      vm.loading = true;\n\n      return Transaction\n        .find({\n          filter: vm.filter\n        })\n        .$promise\n        .then(function(data) {\n          var _total = 0;\n          _.each(data, function(transaction) {\n            _total += transaction.amount;\n            transaction.total = _total;\n          });\n          vm.Transactions = data;\n          vm.ReloadChart();\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n    function ReloadChart() {\n      console.log(vm.chart.params.group);\n      vm.chart.labels = [];\n      vm.chart.data[0] = [];\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\n        return moment(transaction.date).format(ChartGroups[vm.chart.params.group].value);\n      });\n\n      _.each(grouped_transactions, function(transactions, keydate) {\n        var _date_total = _.reduce(transactions, function(total, transaction) {\n          return Math.round(transaction.amount + total);\n        }, 0);\n        vm.chart.labels.push(keydate);\n        vm.chart.data[0].push(_date_total);\n      });\n\n    }\n\n  }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .constant(\"DataFilters\", {\n      one_month: {\n        alias: \"one_month\",\n        label: \"+-1 Month\",\n        value: {\n          // date\n        },\n      },\n      three_months: {\n        alias: \"three_months\",\n        label: \"+-3 Months\",\n        value: {\n          // date\n        },\n      },\n      all: {\n        alias: \"all\",\n        label: \"All Transactions\",\n        value: false,\n      }\n    })\n    .constant(\"ChartGroups\", {\n      daily: {\n        alias: \"daily\",\n        label: \"Daily\",\n        value: \"DD/MM/YYYY\",\n      },\n      weekly: {\n        alias: \"weekly\",\n        label: \"Weekly\",\n        value: \"[W]ww MM/YYYY\",\r\n      },\n      monthly: {\n        alias: \"monthly\",\n        label: \"Monthly\",\n        value: \"MM/YYYY\",\n      }\n    })\n\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController($stateParams,Person) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadPersons();\r\n    }\r\n\r\n    function _loadPersons() {\r\n      vm.loading = true;\r\n      return Person\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"fullname ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Persons = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController($stateParams,Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadCompany();\r\n    }\r\n\r\n    function _loadCompany() {\r\n      vm.loading = true;\r\n      return Company\r\n        .findById({\r\n          id: $stateParams.id,\r\n          filter: {\r\n            include: [\"persons\"],\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Company = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      vm.loading = true;\r\n\r\n      vm.center = {};\r\n      vm.markers = {};\r\n\r\n      Company.findById({\r\n          id: $stateParams.id,\r\n        })\r\n        .$promise\r\n        .then(function(company) {\r\n          vm.Company = company;\r\n\r\n          $timeout(function() {\r\n\r\n            vm.center = {\r\n              lat: parseFloat(company.location.lat),\r\n              lng: parseFloat(company.location.lon),\r\n              zoom: 14,\r\n            };\r\n            vm.markers = {\r\n              company: {\r\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\r\n                lat: parseFloat(company.location.lat),\r\n                lng: parseFloat(company.location.lon),\r\n                opacity: 0.8,\r\n                focus: true,\r\n              }\r\n            };\r\n\r\n            vm.loading = false;\r\n\r\n          }, 1000);\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\r\n    var vm = this;\r\n\r\n    vm.container = $stateParams.id;\r\n    vm.UploadFiles = UploadFiles;\r\n    // vm.Download = Download;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadFiles();\r\n    }\r\n\r\n    function UploadFiles() {\r\n      FilesModals\r\n        .AddFiles({\r\n          Label: \"Company\",\r\n          Container: vm.container\r\n        })\r\n        .then(function() {\r\n          _loadFiles();\r\n        });\r\n    }\r\n\r\n    //\r\n    // function Download(file) {\r\n    //   Container\r\n    //     .download({\r\n    //       container: vm.container,\r\n    //       file: file,\r\n    //     })\r\n    //     .$promise\r\n    //     .then(function(data) {\r\n    //       console.log(data);\r\n    //     });\r\n    // }\r\n\r\n    function _loadFiles() {\r\n      vm.loading = true;\r\n      return Container\r\n        .getFiles({\r\n          container: vm.container,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Files = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEditLogoController\", ContactsCompanyEditLogoController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEditLogoController($uibModalInstance, ModalParams, Company, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Company = ModalParams.Company;\r\n    vm.Uploader = new FileUploader({\r\n      vm: vm,\r\n      url: '/api/Containers/' + vm.Company.id + '/upload',\r\n    });\r\n    vm.Uploader.onCompleteItem = function(item, response, status, headers) {\r\n      vm.Company.logo = '/api/Containers/' + vm.Company.id + '/download/' + item.file.name;\r\n      Company.upsert(vm.Company);\r\n    };\r\n    vm.Uploader.onAfterAddingFile = function(item) {\r\n      // console.info('After adding a file', item);\r\n      // console.info(vm.Uploader.queue);\r\n    };\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n\r\n    function Upload() {}\r\n\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function Save() {\r\n      vm.Uploader.uploadItem(0);\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n  \r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (bytes === 0) return 'Empty';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngThumb', ngThumb)\r\n\r\n  /* @ngInject */\r\n  function ngThumb($window) {\r\n    var helper = {\r\n      support: !!($window.FileReader && $window.CanvasRenderingContext2D),\r\n      isFile: function(item) {\r\n        return angular.isObject(item) && item instanceof $window.File;\r\n      },\r\n      isImage: function(file) {\r\n        var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';\r\n        return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\r\n      }\r\n    };\r\n\r\n    return {\r\n      restrict: 'A',\r\n      template: '<canvas/>',\r\n      link: function(scope, element, attributes) {\r\n        if (!helper.support) {\r\n          console.log(\"ngThumb: FileReader not supported\");\r\n          return;\r\n        }\r\n\r\n\r\n        var params = scope.$eval(attributes.ngThumb);\r\n\r\n        console.log(\"ngThumb: params\", params);\r\n        if (!helper.isFile(params.file)) {\r\n          console.log(\"ngThumb: params.file is not a file\");\r\n          return;\r\n        }\r\n\r\n        if (!helper.isImage(params.file)) {\r\n          console.log(\"ngThumb: params.file is not an image\");\r\n          return;\r\n        }\r\n\r\n        var canvas = element.find('canvas');\r\n        var reader = new FileReader();\r\n\r\n        reader.onload = onLoadFile;\r\n        reader.readAsDataURL(params.file);\r\n\r\n        function onLoadFile(event) {\r\n          var img = new Image();\r\n          img.onload = onLoadImage;\r\n          img.src = event.target.result;\r\n        }\r\n\r\n        function onLoadImage() {\r\n          var width = params.width || this.width / this.height * params.height;\r\n          var height = params.height || this.height / this.width * params.width;\r\n          canvas.attr({\r\n            width: width,\r\n            height: height\r\n          });\r\n          canvas[0].getContext('2d').drawImage(this, 0, 0, width, height);\r\n        }\r\n      }\r\n    };\r\n  }\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .controller(\"FilesAddController\", FilesAddController);\r\n\r\n  /* @ngInject */\r\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Label = ModalParams.Label;\r\n    vm.Container = ModalParams.Container;\r\n\r\n    vm.Upload = Upload;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n\r\n    function Upload() {}\r\n\r\n    var uploader = vm.uploader = new FileUploader({\r\n      vm: vm, // to automatically update the html. Default: $rootScope\r\n      url: '/api/containers/' + vm.Container + '/upload',\r\n      // formData: [{\r\n      //   key: 'value'\r\n      // }]\r\n    });\r\n\r\n    // ADDING FILTERS\r\n    // uploader.filters.push({\r\n    //   name: 'filterName',\r\n    //   fn: function(item, options) { // second user filter\r\n    //     console.info('filter2');\r\n    //     return true;\r\n    //   }\r\n    // });\r\n\r\n    // REGISTER HANDLERS\r\n    // --------------------\r\n    // uploader.onAfterAddingFile = function(item) {\r\n    //   console.info('After adding a file', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onAfterAddingAll = function(items) {\r\n    //   console.info('After adding all files', items);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\r\n    //   console.info('When adding a file failed', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onBeforeUploadItem = function(item) {\r\n    //   console.info('Before upload', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressItem = function(item, progress) {\r\n    //   console.info('Progress: ' + progress, item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressAll = function(progress) {\r\n    //   console.info('Total progress: ' + progress);\r\n    // };\r\n    // --------------------\r\n    // uploader.onSuccessItem = function(item, response, status, headers) {\r\n    //   console.info('Success', response, status, headers);\r\n    //   vm.$broadcast('uploadCompleted', item);\r\n    // };\r\n    // --------------------\r\n    uploader.onErrorItem = function(item, response, status, headers) {\r\n      item.error = response.error;\r\n      // console.info('Error', response, status, headers);\r\n    };\r\n    // // --------------------\r\n    // uploader.onCancelItem = function(item, response, status, headers) {\r\n    //   console.info('Cancel', response, status);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteItem = function(item, response, status, headers) {\r\n    //   console.info('Complete', response, status, headers);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteAll = function() {\r\n    //   console.info('Complete all');\r\n    // };\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .factory('FilesModals', FilesModals);\r\n\r\n  FilesModals.$inject = ['modalHelper'];\r\n\r\n  function FilesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddFiles\",\r\n        config: {\r\n          templateUrl: 'src/files/add/view.html',\r\n          controller: \"FilesAddController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/contacts\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.overview',\r\n      config: {\r\n        title: 'Contacts Overview',\r\n        url: \"/\",\r\n        templateUrl: 'src/contacts/overview/view.html',\r\n        controller: 'ContactsOverviewController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.person',\r\n      config: {\r\n        title: 'Person',\r\n        url: \"/person/:id\",\r\n        templateUrl: 'src/contacts/person/view.html',\r\n        controller: 'ContactsPersonController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .factory('ContactsModals', ContactsModals);\r\n\r\n  ContactsModals.$inject = ['modalHelper'];\r\n\r\n  function ContactsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddPerson\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addperson/view.html',\r\n          controller: \"ContactsAddPersonController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddCompany\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addcompany/view.html',\r\n          controller: \"ContactsAddCompanyController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddEvent\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addevent/view.html',\r\n          controller: \"ContactsAddEventController\",\r\n        }\r\n      }, {\r\n        modal: \"ExportImport\",\r\n        config: {\r\n          templateUrl: 'src/contacts/exportimport/view.html',\r\n          controller: \"ContactsExportImportController\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n  /* @ngInject */\r\n  function ContactsTopMenuController($state, ContactsModals) {\r\n    var vm = this;\r\n\r\n    vm.AddCompany = AddCompany;\r\n    vm.AddPerson = AddPerson;\r\n    vm.AddEvent = AddEvent;\r\n    vm.ExportImport = ExportImport;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function AddCompany() {\r\n      ContactsModals\r\n        .AddCompany()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.company\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddPerson() {\r\n      ContactsModals\r\n        .AddPerson()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.person\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddEvent() {\r\n      ContactsModals\r\n        .AddEvent()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.events.event\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function ExportImport() {\r\n      ContactsModals\r\n        .ExportImport()\r\n        .then(function() {});\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsOverviewController(Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _getAccessed();\r\n    }\r\n\r\n    function _getAccessed() {\r\n      vm.loading_accessed = true;\r\n      Company.find({\r\n          filter: {\r\n            limit: 10,\r\n            order: \"lastAccess DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(_companies) {\r\n          vm.accessed = _companies;\r\n        })\r\n        .finally(function() {\r\n          vm.loading_accessed = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsContactController\", ContactsContactController);\r\n\r\n  /* @ngInject */\r\n  function ContactsContactController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($uibModalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $uibModalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates(), \"/\");\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        resolve: {\r\n          isAuthenticated: function($state, User, $timeout) {\r\n            $timeout(function() {\r\n              if (!User.isAuthenticated()) {\r\n                $state.go(\"auth.login\");\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n        },\r\n        views: {\r\n          \"\": {\r\n            templateUrl: 'src/_common/views/layout.html',\r\n            controller: function(User) {\r\n              var vm = this;\r\n\r\n              User\r\n                .getCurrent()\r\n                .$promise\r\n                .then(function(_user) {\r\n                  vm.username = _user.username;\r\n                });\r\n\r\n            },\r\n          },\r\n          \"menu-contacts@app\": {\r\n            templateUrl: 'src/contacts/topmenu/view.html',\r\n            controller: \"ContactsTopMenuController\",\r\n          },\r\n          // \"menu-contacts@app\": {\r\n          //   templateUrl: 'src/contacts/topmenu/view.html',\r\n          //   controller: \"ContactsTopMenuController\",\r\n          // },\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.dashboard',\r\n      config: {\r\n        title: 'Dashboard',\r\n        url: \"/\",\r\n        templateUrl: 'src/dashboard/view.html',\r\n        controller: 'DashboardController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()"],"sourceRoot":"/source/"}