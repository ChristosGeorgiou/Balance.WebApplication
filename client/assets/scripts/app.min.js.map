{"version":3,"sources":["contacts/_module.js","contacts/company/transactions/controller.js","app.min.js","contacts/company/persons/controller.js","contacts/company/files/controller.js","contacts/company/overview/controller.js","contacts/company/info/controller.js","_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/join.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/constants/topmenu.js","app.js","_common/configs/rootscope.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","settings/changepassword/controller.js","plists/_module.js","plists/overview/controller.js","plists/form/controller.js","lotteries/_module.js","lotteries/overview/controller.js","lotteries/lottery/controller.js","lotteries/init/controller.js","contacts/_common/routes.js","contacts/_common/modals.js","contacts/topmenu/controller.js","contacts/overview/controller.js","contacts/contact/controller.js","contacts/company/controller.js","contacts/addperson/controller.js","contacts/addcompany/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","static/_module.js","static/routes.js","settings/service.js","settings/routes.js","settings/modals.js","plists/service.js","plists/routes.js","plists/modals.js","lotteries/service.js","lotteries/routes.js","lotteries/modals.js","dashboard/_module.js","dashboard/routes.js","dashboard/controller.js","auth/routes.js","auth/interceptor.js","auth/constants.js","run.js","config.js"],"names":["angular","module","ContactsCompanyTransactionsController","$stateParams","Transaction","activate","_loadTransactions","then","_reloadChart","_rangeDeploy","vm","loading","find","filter","where","companyId","id","order","$promise","data","_total","_","each","transaction","parseFloat","amount","toFixed","total","Transactions","groupby","Chart","labels","grouped_transactions","groupBy","moment","date","format","transactions","keydate","_date_total","reduce","_val","push","_start","first","_now","_range","Chart2","_iter","timestamp","startOf","unix","ISO","toISOString","clone","add","diff","_transaction_date","i","length","_next_timestamp","_item","console","log","this","$inject","controller","ContactsCompanyPersonsController","CompanyData","Persons","persons","ContactsCompanyFilesController","ContactsCompanyOverviewController","ContactsCompanyInfoController","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","configureStates","states","otherwisePath","forEach","state","config","controllerAs","extend","views","item","hasOtherwise","otherwise","getStates","get","service","$get","provider","modalHelperProvider","modalHelper","$uibModal","$q","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","open","result","configHelperProvider","ConfigHelper","notifyConfig","configName","message","numberFixedLen","a","b","slice","join","array","separator","fromNow","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","isFinite","units","number","Math","floor","pow","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","on","$apply","v","val","$","$setValidity","directive","ngPrint","element","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","body","errSrc","ngSrc","$set","bind","remove","src","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","constant","name","subtree","appRun","$rootScope","APP","$on","event","toState","title","description","run","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","useXDomain","headers","common","SettingsController","SettingsService","SettingsModals","ChangePassword","go","ref","ChangePasswordController","$modalInstance","User","toaster","Save","prototype$updateAttributes","getCurrentId","password","Password","user","pop","close","PlistsController","PlistsService","PlistsModals","LoadPlists","params","GetPlists","plists","Plists","AddPlist","PlistForm","ViewPlist","ID","PlistFormController","Plist","GetPlist","SavePlist","Delete","DeletePlist","Participants","LotteriesController","LotteriesService","LotteriesModals","LoadLotteries","GetLotteries","Lotteries","AddLottery","LotteryInit","LotteryController","LoadLottery","GetLottery","Lottery","DeleteLottery","LotteryInitController","SaveLottery","resp","Name","Date","getTime","RoutesConfig","configHelper","routerHelper","abstract","url","template","templateUrl","ContactsModals","getModals","size","factory","ContactsTopMenuController","AddCompany","AddPerson","AddEvent","ExportImport","ContactsOverviewController","Company","_getAccessed","loading_accessed","limit","_companies","accessed","ContactsContactController","ContactsCompanyController","findById","Tabs","heading","icon","route","class","ContactsAddPersonController","loadCompanies","Companies","ContactsAddCompanyController","create","_company","AuthLoginController","LoginMessages","_signMessage","toUpperCase","SignIn","Alert","login","copy","credentials","rejection","error","code","isAuthenticated","$timeout","","getCurrent","_user","username","menu-contacts@app","libs","href","$resource","GetSettings","Service","chain","rows","map","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","plist","CreatedAt","updateOrCreate","deleteById","backdrop","lottery","shuffle","DashboardController","news","content","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","status","AuthInterceptorConfig","interceptors","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","evt","to","redirectTo","version","repository","author","email","client","database","roles","users","role"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', []);\r\n})();\r\n","(function() {\n  'use strict';\n\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\n\n  /* @ngInject */\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\n\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadTransactions()\n        .then(function() {\n          _reloadChart();\n          _rangeDeploy();\n        });\n    }\n\n    function _loadTransactions() {\n      vm.loading = true;\n      return Transaction\n        .find({\n          filter: {\n            where: {\n              companyId: $stateParams.id,\n            },\n            order: \"date ASC\",\n          }\n        })\n        .$promise\n        .then(function(data) {\n          var _total = 0;\n          _.each(data, function(transaction) {\n            _total = parseFloat(_total) + parseFloat(transaction.amount);\n            _total = _total.toFixed(2);\n            transaction.total = _total;\n          });\n          vm.Transactions = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n    function _reloadChart(groupby) {\n\n      vm.Chart = {\n        labels: [],\n        data: [\n          []\n        ],\n      };\n\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\n      });\n\n      _.each(grouped_transactions, function(transactions, keydate) {\n\n        var _date_total = _.reduce(transactions, function(total, transaction) {\n          var _val = transaction.amount + parseFloat(total);\n          return _val.toFixed(2);\n        }, 0);\n        vm.Chart.labels.push(keydate);\n        vm.Chart.data[0].push(_date_total);\n      });\n\n    }\n\n    function _rangeDeploy() {\n      var _start = moment(_.first(vm.Transactions).date);\n      var _now = moment();\n      var _range = [];\n      vm.Chart2 = {\n        labels: [],\n        data: [\n          []\n        ],\n      };\n\n      var _iter = _start;\n      do {\n        _range.push({\n          timestamp: _iter.startOf('day').unix(),\n          ISO: _iter.startOf('day').toISOString(),\n          transactions: [],\n        });\n        _iter = _.clone(_iter.add(7, \"days\"));\n      } while (_iter.diff(_now) < 0);\n\n\n      _.each(vm.Transactions, function(transaction) {\n\n        var _transaction_date = moment(transaction.date).unix();\n        for (var i = 0; i < _range.length; i++) {\n          var _next_timestamp = moment().unix();\n          if (_range[i + 1]) {\n            var _next_timestamp = _range[i + 1].timestamp;\n          }\n          if (_transaction_date >= _range[i].timestamp && _transaction_date < _next_timestamp) {\n            _range[i].transactions.push(transaction);\n          }\n        }\n\n      })\n\n      for (var i = 0; i < _range.length; i++) {\n        var _item = _range[i];\n\n        _item.total = _.reduce(_item.transactions, function(total, transaction) {\n          var _val = transaction.amount + parseFloat(total);\n          return _val.toFixed(2);\n        }, 0);\n\n        var _extra = 0\n        if (i > 0) {\n          _item.total = parseFloat(_range[i - 1].total) + parseFloat(_item.total);\n        }\n\n        vm.Chart2.labels.push(moment.unix(_item.timestamp).format(\"[W]ww MM/YYYY\"));\n        vm.Chart2.data[0].push(parseFloat(_item.total).toFixed(2));\n\n      }\n      console.log(_range);\n    }\n\n  }\n\n}());\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', []);\r\n})();\r\n;(function() {\n  'use strict';\n\r\n  ContactsCompanyTransactionsController.$inject = [\"$stateParams\", \"Transaction\"];\n  angular\n    .module('app.contacts')\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\n\n  /* @ngInject */\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\n\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      _loadTransactions()\n        .then(function() {\n          _reloadChart();\n          _rangeDeploy();\n        });\n    }\n\n    function _loadTransactions() {\n      vm.loading = true;\n      return Transaction\n        .find({\n          filter: {\n            where: {\n              companyId: $stateParams.id,\n            },\n            order: \"date ASC\",\n          }\n        })\n        .$promise\n        .then(function(data) {\n          var _total = 0;\n          _.each(data, function(transaction) {\n            _total = parseFloat(_total) + parseFloat(transaction.amount);\n            _total = _total.toFixed(2);\n            transaction.total = _total;\n          });\n          vm.Transactions = data;\n        })\n        .finally(function() {\n          vm.loading = false;\n        });\n    }\n\n    function _reloadChart(groupby) {\n\n      vm.Chart = {\n        labels: [],\n        data: [\n          []\n        ],\n      };\n\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\n      });\n\n      _.each(grouped_transactions, function(transactions, keydate) {\n\n        var _date_total = _.reduce(transactions, function(total, transaction) {\n          var _val = transaction.amount + parseFloat(total);\n          return _val.toFixed(2);\n        }, 0);\n        vm.Chart.labels.push(keydate);\n        vm.Chart.data[0].push(_date_total);\n      });\n\n    }\n\n    function _rangeDeploy() {\n      var _start = moment(_.first(vm.Transactions).date);\n      var _now = moment();\n      var _range = [];\n      vm.Chart2 = {\n        labels: [],\n        data: [\n          []\n        ],\n      };\n\n      var _iter = _start;\n      do {\n        _range.push({\n          timestamp: _iter.startOf('day').unix(),\n          ISO: _iter.startOf('day').toISOString(),\n          transactions: [],\n        });\n        _iter = _.clone(_iter.add(7, \"days\"));\n      } while (_iter.diff(_now) < 0);\n\n\n      _.each(vm.Transactions, function(transaction) {\n\n        var _transaction_date = moment(transaction.date).unix();\n        for (var i = 0; i < _range.length; i++) {\n          var _next_timestamp = moment().unix();\n          if (_range[i + 1]) {\n            var _next_timestamp = _range[i + 1].timestamp;\n          }\n          if (_transaction_date >= _range[i].timestamp && _transaction_date < _next_timestamp) {\n            _range[i].transactions.push(transaction);\n          }\n        }\n\n      })\n\n      for (var i = 0; i < _range.length; i++) {\n        var _item = _range[i];\n\n        _item.total = _.reduce(_item.transactions, function(total, transaction) {\n          var _val = transaction.amount + parseFloat(total);\n          return _val.toFixed(2);\n        }, 0);\n\n        var _extra = 0\n        if (i > 0) {\n          _item.total = parseFloat(_range[i - 1].total) + parseFloat(_item.total);\n        }\n\n        vm.Chart2.labels.push(moment.unix(_item.timestamp).format(\"[W]ww MM/YYYY\"));\n        vm.Chart2.data[0].push(parseFloat(_item.total).toFixed(2));\n\n      }\n      console.log(_range);\n    }\n\n  }\n\n}());\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyPersonsController.$inject = [\"CompanyData\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController(CompanyData) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Persons = CompanyData.persons;\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyFilesController.$inject = [\"$stateParams\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyInfoController\", ContactsCompanyInfoController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyInfoController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  routerHelperProvider.$inject = [\"$locationProvider\", \"$stateProvider\", \"$urlRouterProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n  \r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'chart.js',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    // 'app.plists',\r\n    // 'app.settings',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  SettingsController.$inject = [\"$state\", \"SettingsService\", \"SettingsModals\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ChangePasswordController.$inject = [\"$modalInstance\", \"ModalParams\", \"User\", \"toaster\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($modalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  PlistsController.$inject = [\"PlistsService\", \"PlistsModals\"];\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  PlistFormController.$inject = [\"$modalInstance\", \"ModalParams\", \"PlistsService\"];\r\n  angular\r\n    .module('app.plists')\r\n    .controller(\"PlistFormController\", PlistFormController);\r\n\r\n  /* @ngInject */\r\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Plist = {\r\n      id: ModalParams.ID || null,\r\n      Participants: [],\r\n    };\r\n\r\n    vm.Save = Save;\r\n    vm.Delete = Delete;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (vm.Plist.id) {\r\n        vm.loading = true;\r\n        PlistsService\r\n          .GetPlist(vm.Plist.id)\r\n          .then(function(data) {\r\n            vm.Plist = data;\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      }\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .SavePlist(vm.Plist)\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n    function Delete() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .DeletePlist(vm.Plist.id)\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  LotteriesController.$inject = [\"$state\", \"LotteriesService\", \"LotteriesModals\"];\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController($state, LotteriesService, LotteriesModals) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries();\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  LotteryController.$inject = [\"$state\", \"LotteriesService\", \"$stateParams\"];\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController($state, LotteriesService, $stateParams) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function DeleteLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .DeleteLottery(vm.Lottery.id)\r\n        .then(function() {\r\n          $state.go(\"app.lotteries.overview\");\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  LotteryInitController.$inject = [\"$modalInstance\", \"ModalParams\", \"LotteriesService\", \"PlistsService\"];\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller(\"LotteryInitController\", LotteryInitController);\r\n\r\n  /* @ngInject */\r\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Lottery = {\r\n      Name: \"Lottery #\" + (new Date()).getTime(),\r\n    };\r\n\r\n    vm.LoadPlists = LoadPlists;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists()\r\n        .then(function(data) {\r\n          vm.Plists = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function Save() {\r\n      LotteriesService\r\n        .SaveLottery(vm.Lottery)\r\n        .then(function(resp) {\r\n          $modalInstance.close(resp.id);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/contacts\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.overview',\r\n      config: {\r\n        title: 'Contacts Overview',\r\n        url: \"/\",\r\n        templateUrl: 'src/contacts/overview/view.html',\r\n        controller: 'ContactsOverviewController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.person',\r\n      config: {\r\n        title: 'Person',\r\n        url: \"/person/:id\",\r\n        templateUrl: 'src/contacts/person/view.html',\r\n        controller: 'ContactsPersonController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        templateUrl: 'src/contacts/company/view.html',\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.info\",\r\n      config: {\r\n        title: \"info\",\r\n        url: \"/info\",\r\n        templateUrl: 'src/contacts/company/info/view.html',\r\n        controller: 'ContactsCompanyInfoController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        // controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .factory('ContactsModals', ContactsModals);\r\n\r\n  ContactsModals.$inject = ['modalHelper'];\r\n\r\n  function ContactsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddPerson\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addperson/view.html',\r\n          controller: \"ContactsAddPersonController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddCompany\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addcompany/view.html',\r\n          controller: \"ContactsAddCompanyController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddEvent\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addevent/view.html',\r\n          controller: \"ContactsAddEventController\",\r\n        }\r\n      }, {\r\n        modal: \"ExportImport\",\r\n        config: {\r\n          templateUrl: 'src/contacts/exportimport/view.html',\r\n          controller: \"ContactsExportImportController\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsTopMenuController.$inject = [\"$state\", \"ContactsModals\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n  /* @ngInject */\r\n  function ContactsTopMenuController($state, ContactsModals) {\r\n    var vm = this;\r\n\r\n    vm.AddCompany = AddCompany;\r\n    vm.AddPerson = AddPerson;\r\n    vm.AddEvent = AddEvent;\r\n    vm.ExportImport = ExportImport;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function AddCompany() {\r\n      ContactsModals\r\n        .AddCompany()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.company\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddPerson() {\r\n      ContactsModals\r\n        .AddPerson()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.person\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddEvent() {\r\n      ContactsModals\r\n        .AddEvent()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.events.event\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function ExportImport() {\r\n      ContactsModals\r\n        .ExportImport()\r\n        .then(function() {});\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsOverviewController.$inject = [\"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsOverviewController(Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _getAccessed();\r\n    }\r\n\r\n    function _getAccessed() {\r\n      vm.loading_accessed = true;\r\n      Company.find({\r\n          filter: {\r\n            limit: 10,\r\n            order: \"lastAccess DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(_companies) {\r\n          vm.accessed = _companies;\r\n        })\r\n        .finally(function() {\r\n          vm.loading_accessed = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsContactController\", ContactsContactController);\r\n\r\n  /* @ngInject */\r\n  function ContactsContactController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyController.$inject = [\"$stateParams\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = [{\r\n      heading: {\r\n        icon: \"bars\",\r\n        title: 'Info'\r\n      },\r\n      route: 'app.contacts.company.info',\r\n      params: {\r\n        class: \"visible-xs visible-sm\",\r\n      }\r\n    }, {\r\n      heading: {\r\n        icon: \"bell-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Overview'\r\n      },\r\n      route: 'app.contacts.company.overview',\r\n    }, {\r\n      heading: {\r\n        icon: \"users\",\r\n        class: \"hidden-xs\",\r\n        title: 'Persons'\r\n      },\r\n      route: 'app.contacts.company.persons',\r\n    }, {\r\n      heading: {\r\n        icon: \"money\",\r\n        class: \"hidden-xs\",\r\n        title: 'Transactions'\r\n      },\r\n      route: 'app.contacts.company.transactions',\r\n    }, {\r\n      heading: {\r\n        icon: \"files-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Files'\r\n      },\r\n      route: 'app.contacts.company.files',\r\n    }];\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsAddPersonController.$inject = [\"$modalInstance\", \"ModalParams\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($modalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsAddCompanyController.$inject = [\"$modalInstance\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($modalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $modalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates(), \"/\");\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        resolve: {\r\n          isAuthenticated: function($state, User, $timeout) {\r\n            $timeout(function() {\r\n              if (!User.isAuthenticated()) {\r\n                $state.go(\"auth.login\");\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n        },\r\n        views: {\r\n          \"\": {\r\n            templateUrl: 'src/_common/views/layout.html',\r\n            controller: function(User) {\r\n              var vm = this;\r\n\r\n              User\r\n                .getCurrent()\r\n                .$promise\r\n                .then(function(_user) {\r\n                  vm.username = _user.username;\r\n                });\r\n\r\n            },\r\n          },\r\n          \"menu-contacts@app\": {\r\n            templateUrl: 'src/contacts/topmenu/view.html',\r\n            controller: \"ContactsTopMenuController\",\r\n          },\r\n          // \"menu-contacts@app\": {\r\n          //   templateUrl: 'src/contacts/topmenu/view.html',\r\n          //   controller: \"ContactsTopMenuController\",\r\n          // },\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  SettingsService.$inject = [\"$resource\"];\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"routerHelper\"];\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  PlistsService.$inject = [\"$resource\", \"Plist\"];\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsService', PlistsService);\r\n\r\n  /* @ngInject */\r\n  function PlistsService($resource, Plist) {\r\n\r\n    var service = {\r\n      GetPlists: GetPlists,\r\n      GetPlist: GetPlist,\r\n      SavePlist: SavePlist,\r\n      DeletePlist: DeletePlist,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetPlists(params) {\r\n      var params = params || {};\r\n      return Plist\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetPlist(id) {\r\n      return Plist\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SavePlist(plist) {\r\n\r\n      if (!plist.id) {\r\n        plist.CreatedAt = new Date();\r\n      }\r\n\r\n      return Plist\r\n        .updateOrCreate(plist)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n\r\n      return Plist\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LotteriesService.$inject = [\"$resource\", \"Lottery\"];\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesService', LotteriesService);\r\n\r\n  /* @ngInject */\r\n  function LotteriesService($resource, Lottery) {\r\n\r\n    var service = {\r\n      GetLotteries: GetLotteries,\r\n      GetLottery: GetLottery,\r\n      SaveLottery: SaveLottery,\r\n      DeleteLottery: DeleteLottery,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetLotteries(params) {\r\n      var params = params || {};\r\n      return Lottery\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetLottery(id) {\r\n      return Lottery\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SaveLottery(lottery) {\r\n\r\n      lottery.DrewAt = new Date();\r\n      lottery.Participants = _.shuffle(lottery.Participants);\r\n      \r\n      return Lottery\r\n        .create(lottery)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeleteLottery(id) {\r\n\r\n      return Lottery\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.dashboard')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.dashboard',\r\n      config: {\r\n        title: 'Dashboard',\r\n        url: \"/\",\r\n        templateUrl: 'src/dashboard/view.html',\r\n        controller: 'DashboardController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;(function() { window.APP={\"name\":\"Balance\",\"description\":\"Christos' CRM tool that you need too\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"config\":{\"client\":{\"name\":\"Demo Company\"},\"database\":\"balance\",\"roles\":[\"ADMIN\",\"MEMBER\"],\"users\":[{\"username\":\"admin\",\"email\":\"admin@admin.com\",\"password\":\"admin\",\"role\":\"ADMIN\"},{\"username\":\"member\",\"email\":\"member@member.com\",\"password\":\"member\",\"role\":\"MEMBER\"}]}}; })()","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController(CompanyData) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Persons = CompanyData.persons;\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyInfoController\", ContactsCompanyInfoController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyInfoController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n  \r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'chart.js',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    // 'app.plists',\r\n    // 'app.settings',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($modalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller('PlistsController', PlistsController);\r\n\r\n  /* @ngInject */\r\n  function PlistsController(PlistsService, PlistsModals) {\r\n\r\n    var vm = this;\r\n\r\n    vm.AddPlist = AddPlist;\r\n    vm.ViewPlist = ViewPlist;\r\n    vm.LoadPlists = LoadPlists;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists(params) {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists(params)\r\n        .then(function(plists) {\r\n          vm.Plists = plists;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddPlist() {\r\n      PlistsModals\r\n        .PlistForm()\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n    function ViewPlist(id) {\r\n      PlistsModals\r\n        .PlistForm({\r\n          ID: id\r\n        })\r\n        .then(function() {\r\n          vm.LoadPlists();\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .controller(\"PlistFormController\", PlistFormController);\r\n\r\n  /* @ngInject */\r\n  function PlistFormController($modalInstance, ModalParams, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Plist = {\r\n      id: ModalParams.ID || null,\r\n      Participants: [],\r\n    };\r\n\r\n    vm.Save = Save;\r\n    vm.Delete = Delete;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      if (vm.Plist.id) {\r\n        vm.loading = true;\r\n        PlistsService\r\n          .GetPlist(vm.Plist.id)\r\n          .then(function(data) {\r\n            vm.Plist = data;\r\n          })\r\n          .finally(function() {\r\n            vm.loading = false;\r\n          });\r\n      }\r\n    }\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .SavePlist(vm.Plist)\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n    function Delete() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .DeletePlist(vm.Plist.id)\r\n        .then(function() {\r\n          vm.loading = false;\r\n          $modalInstance.close();\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteriesController', LotteriesController);\r\n\r\n  /* @ngInject */\r\n  function LotteriesController($state, LotteriesService, LotteriesModals) {\r\n    var vm = this;\r\n\r\n    vm.AddLottery = AddLottery;\r\n    vm.LoadLotteries = LoadLotteries;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLotteries();\r\n    }\r\n\r\n    function LoadLotteries() {\r\n      vm.loading = true;\r\n      return LotteriesService\r\n        .GetLotteries()\r\n        .then(function(data) {\r\n          vm.Lotteries = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function AddLottery() {\r\n      LotteriesModals\r\n        .LotteryInit()\r\n        .then(function(id) {\r\n          if (id) {\r\n            $state.go(\"app.lotteries.lottery\", {\r\n              ID: id\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller('LotteryController', LotteryController);\r\n\r\n  /* @ngInject */\r\n  function LotteryController($state, LotteriesService, $stateParams) {\r\n    var vm = this;\r\n\r\n    vm.LoadLottery = LoadLottery;\r\n    vm.DeleteLottery = DeleteLottery;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadLottery();\r\n    }\r\n\r\n    function LoadLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .GetLottery($stateParams.ID)\r\n        .then(function(data) {\r\n          vm.Lottery = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function DeleteLottery() {\r\n      vm.loading = true;\r\n      LotteriesService\r\n        .DeleteLottery(vm.Lottery.id)\r\n        .then(function() {\r\n          $state.go(\"app.lotteries.overview\");\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .controller(\"LotteryInitController\", LotteryInitController);\r\n\r\n  /* @ngInject */\r\n  function LotteryInitController($modalInstance, ModalParams, LotteriesService, PlistsService) {\r\n    var vm = this;\r\n\r\n    vm.Lottery = {\r\n      Name: \"Lottery #\" + (new Date()).getTime(),\r\n    };\r\n\r\n    vm.LoadPlists = LoadPlists;\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.LoadPlists();\r\n    }\r\n\r\n    function LoadPlists() {\r\n      vm.loading = true;\r\n      PlistsService\r\n        .GetPlists()\r\n        .then(function(data) {\r\n          vm.Plists = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function Save() {\r\n      LotteriesService\r\n        .SaveLottery(vm.Lottery)\r\n        .then(function(resp) {\r\n          $modalInstance.close(resp.id);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/contacts\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.overview',\r\n      config: {\r\n        title: 'Contacts Overview',\r\n        url: \"/\",\r\n        templateUrl: 'src/contacts/overview/view.html',\r\n        controller: 'ContactsOverviewController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.person',\r\n      config: {\r\n        title: 'Person',\r\n        url: \"/person/:id\",\r\n        templateUrl: 'src/contacts/person/view.html',\r\n        controller: 'ContactsPersonController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        templateUrl: 'src/contacts/company/view.html',\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.info\",\r\n      config: {\r\n        title: \"info\",\r\n        url: \"/info\",\r\n        templateUrl: 'src/contacts/company/info/view.html',\r\n        controller: 'ContactsCompanyInfoController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        // controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .factory('ContactsModals', ContactsModals);\r\n\r\n  ContactsModals.$inject = ['modalHelper'];\r\n\r\n  function ContactsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddPerson\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addperson/view.html',\r\n          controller: \"ContactsAddPersonController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddCompany\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addcompany/view.html',\r\n          controller: \"ContactsAddCompanyController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddEvent\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addevent/view.html',\r\n          controller: \"ContactsAddEventController\",\r\n        }\r\n      }, {\r\n        modal: \"ExportImport\",\r\n        config: {\r\n          templateUrl: 'src/contacts/exportimport/view.html',\r\n          controller: \"ContactsExportImportController\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n  /* @ngInject */\r\n  function ContactsTopMenuController($state, ContactsModals) {\r\n    var vm = this;\r\n\r\n    vm.AddCompany = AddCompany;\r\n    vm.AddPerson = AddPerson;\r\n    vm.AddEvent = AddEvent;\r\n    vm.ExportImport = ExportImport;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function AddCompany() {\r\n      ContactsModals\r\n        .AddCompany()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.company\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddPerson() {\r\n      ContactsModals\r\n        .AddPerson()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.person\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddEvent() {\r\n      ContactsModals\r\n        .AddEvent()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.events.event\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function ExportImport() {\r\n      ContactsModals\r\n        .ExportImport()\r\n        .then(function() {});\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsOverviewController(Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _getAccessed();\r\n    }\r\n\r\n    function _getAccessed() {\r\n      vm.loading_accessed = true;\r\n      Company.find({\r\n          filter: {\r\n            limit: 10,\r\n            order: \"lastAccess DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(_companies) {\r\n          vm.accessed = _companies;\r\n        })\r\n        .finally(function() {\r\n          vm.loading_accessed = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsContactController\", ContactsContactController);\r\n\r\n  /* @ngInject */\r\n  function ContactsContactController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = [{\r\n      heading: {\r\n        icon: \"bars\",\r\n        title: 'Info'\r\n      },\r\n      route: 'app.contacts.company.info',\r\n      params: {\r\n        class: \"visible-xs visible-sm\",\r\n      }\r\n    }, {\r\n      heading: {\r\n        icon: \"bell-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Overview'\r\n      },\r\n      route: 'app.contacts.company.overview',\r\n    }, {\r\n      heading: {\r\n        icon: \"users\",\r\n        class: \"hidden-xs\",\r\n        title: 'Persons'\r\n      },\r\n      route: 'app.contacts.company.persons',\r\n    }, {\r\n      heading: {\r\n        icon: \"money\",\r\n        class: \"hidden-xs\",\r\n        title: 'Transactions'\r\n      },\r\n      route: 'app.contacts.company.transactions',\r\n    }, {\r\n      heading: {\r\n        icon: \"files-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Files'\r\n      },\r\n      route: 'app.contacts.company.files',\r\n    }];\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($modalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($modalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $modalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates(), \"/\");\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        resolve: {\r\n          isAuthenticated: function($state, User, $timeout) {\r\n            $timeout(function() {\r\n              if (!User.isAuthenticated()) {\r\n                $state.go(\"auth.login\");\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n        },\r\n        views: {\r\n          \"\": {\r\n            templateUrl: 'src/_common/views/layout.html',\r\n            controller: function(User) {\r\n              var vm = this;\r\n\r\n              User\r\n                .getCurrent()\r\n                .$promise\r\n                .then(function(_user) {\r\n                  vm.username = _user.username;\r\n                });\r\n\r\n            },\r\n          },\r\n          \"menu-contacts@app\": {\r\n            templateUrl: 'src/contacts/topmenu/view.html',\r\n            controller: \"ContactsTopMenuController\",\r\n          },\r\n          // \"menu-contacts@app\": {\r\n          //   templateUrl: 'src/contacts/topmenu/view.html',\r\n          //   controller: \"ContactsTopMenuController\",\r\n          // },\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsService', PlistsService);\r\n\r\n  /* @ngInject */\r\n  function PlistsService($resource, Plist) {\r\n\r\n    var service = {\r\n      GetPlists: GetPlists,\r\n      GetPlist: GetPlist,\r\n      SavePlist: SavePlist,\r\n      DeletePlist: DeletePlist,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetPlists(params) {\r\n      var params = params || {};\r\n      return Plist\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetPlist(id) {\r\n      return Plist\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SavePlist(plist) {\r\n\r\n      if (!plist.id) {\r\n        plist.CreatedAt = new Date();\r\n      }\r\n\r\n      return Plist\r\n        .updateOrCreate(plist)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeletePlist(id) {\r\n\r\n      return Plist\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.plists',\r\n      config: {\r\n        url: '/plists',\r\n        controller: \"PlistsController\",\r\n        templateUrl: 'src/plists/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.plists')\r\n    .factory('PlistsModals', PlistsModals);\r\n\r\n  PlistsModals.$inject = ['modalHelper'];\r\n\r\n  function PlistsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"PlistForm\",\r\n        config: {\r\n          templateUrl: 'src/plists/form/view.html',\r\n          controller: \"PlistFormController\",\r\n          size: \"md\",\r\n          backdrop: 'static',\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesService', LotteriesService);\r\n\r\n  /* @ngInject */\r\n  function LotteriesService($resource, Lottery) {\r\n\r\n    var service = {\r\n      GetLotteries: GetLotteries,\r\n      GetLottery: GetLottery,\r\n      SaveLottery: SaveLottery,\r\n      DeleteLottery: DeleteLottery,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetLotteries(params) {\r\n      var params = params || {};\r\n      return Lottery\r\n        .find({\r\n          filter: {\r\n            order: params.order || \"CreatedAt DESC\",\r\n          },\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function GetLottery(id) {\r\n      return Lottery\r\n        .findById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n    }\r\n\r\n    function SaveLottery(lottery) {\r\n\r\n      lottery.DrewAt = new Date();\r\n      lottery.Participants = _.shuffle(lottery.Participants);\r\n      \r\n      return Lottery\r\n        .create(lottery)\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n    function DeleteLottery(id) {\r\n\r\n      return Lottery\r\n        .deleteById({\r\n          id: id\r\n        })\r\n        .$promise\r\n        .then(function(item) {\r\n          return item;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.lotteries',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.overview',\r\n      config: {\r\n        url: '/',\r\n        controller: \"LotteriesController\",\r\n        templateUrl: 'src/lotteries/overview/view.html',\r\n      }\r\n    }, {\r\n      state: 'app.lotteries.lottery',\r\n      config: {\r\n        url: '/lottery/:ID',\r\n        controller: \"LotteryController\",\r\n        templateUrl: 'src/lotteries/lottery/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.lotteries')\r\n    .factory('LotteriesModals', LotteriesModals);\r\n\r\n  LotteriesModals.$inject = ['modalHelper'];\r\n\r\n  function LotteriesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"LotteryInit\",\r\n        config: {\r\n          templateUrl: 'src/lotteries/init/view.html',\r\n          controller: \"LotteryInitController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.dashboard',\r\n      config: {\r\n        title: 'Dashboard',\r\n        url: \"/\",\r\n        templateUrl: 'src/dashboard/view.html',\r\n        controller: 'DashboardController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","(function() { window.APP={\"name\":\"Balance\",\"description\":\"Christos' CRM tool that you need too\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"config\":{\"client\":{\"name\":\"Demo Company\"},\"database\":\"balance\",\"roles\":[\"ADMIN\",\"MEMBER\"],\"users\":[{\"username\":\"admin\",\"email\":\"admin@admin.com\",\"password\":\"admin\",\"role\":\"ADMIN\"},{\"username\":\"member\",\"email\":\"member@member.com\",\"password\":\"member\",\"role\":\"MEMBER\"}]}}; })()"],"sourceRoot":"/source/"}