{"version":3,"sources":["contacts/_module.js","contacts/company/_common/routes.js","app.min.js","contacts/company/_common/controller.js","contacts/company/_common/constants.js","contacts/company/files/controller.js","contacts/company/transactions/controller.js","contacts/company/persons/controller.js","contacts/company/overview/controller.js","contacts/company/map/controller.js","contacts/company/events/controller.js","_common/_module.js","_common/helpers/route.helper.js","_common/helpers/modal.helper.js","_common/helpers/config.helper.js","_common/filters/numberfixedlen.js","_common/filters/join.js","_common/filters/fromnow.js","_common/filters/fileicon.js","_common/filters/bytes.js","_common/directives/pwcheck.js","_common/directives/ngprint.js","_common/directives/errsrc.js","_common/directives/confirm.js","_common/constants/topmenu.js","app.js","_common/configs/rootscope.js","_common/configs/location.config.js","_common/configs/http.config.js","settings/_module.js","settings/overview/controller.js","settings/changepassword/controller.js","files/_module.js","files/_common/modals.js","files/add/controller.js","contacts/_common/routes.js","contacts/_common/modals.js","contacts/topmenu/controller.js","contacts/overview/controller.js","contacts/contact/controller.js","contacts/addperson/controller.js","contacts/addcompany/controller.js","auth/_module.js","auth/login/controller.js","_common/routes.js","static/_module.js","static/routes.js","settings/service.js","settings/routes.js","settings/modals.js","dashboard/_module.js","dashboard/routes.js","dashboard/controller.js","auth/routes.js","auth/interceptor.js","auth/constants.js","run.js","config.js"],"names":["angular","module","RoutesConfig","configHelper","routerHelper","configureStates","getStates","state","config","abstract","url","template","controller","title","templateUrl","$inject","run","ContactsCompanyController","$stateParams","Company","CompanyTabs","activate","vm","findById","id","this","Tabs","Print","docDefinition","content","pdfMake","createPdf","open","constant","heading","icon","route","class","ContactsCompanyFilesController","Container","FilesModals","_loadFiles","UploadFiles","AddFiles","Label","container","then","loading","getFiles","$promise","data","Files","ContactsCompanyTransactionsController","Transaction","_loadTransactions","_reloadChart","find","filter","where","companyId","order","_total","_","each","transaction","amount","total","Transactions","groupby","Chart","labels","options","bezierCurve","datasetFill","grouped_transactions","groupBy","moment","date","format","transactions","keydate","_date_total","reduce","Math","round","push","ContactsCompanyPersonsController","Person","_loadPersons","Persons","ContactsCompanyOverviewController","_loadCompany","include","ContactsCompanyMapController","$timeout","center","markers","company","lat","parseFloat","location","lng","lon","zoom","message","name","street","opacity","focus","ContactsCompanyEventsController","Event","_loadEvents","reload","gt","_ranges","params","range","from","lt","to","Events","WEEK","subtract","add","HALFMONTH","MONTH","routerHelperProvider","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$state","states","otherwisePath","forEach","controllerAs","extend","views","item","hasOtherwise","otherwise","get","service","$get","provider","modalHelperProvider","modalHelper","$uibModal","$q","configureModals","modals","_ret","modal","obj","ModalResultComplete","response","ModalResultFailed","reason","reject","resolve","ModalParams","result","configHelperProvider","ConfigHelper","notifyConfig","configName","console","log","numberFixedLen","a","b","slice","join","array","separator","fromNow","fileicon","_icons","application/pdf","application/powerpoint","application/x-msword","application/x-msexcel","application/x-mspowerpoint","audio/x-mpeg-3","image/gif","image/png","image/tiff","image/jpeg","video/avi","video/mpeg","video/msvideo","video/quicktime","application/zip","bytes","precision","isNaN","isFinite","units","number","floor","pow","toFixed","pwCheck","require","restrict","link","scope","elem","attrs","ctrl","firstPassword","on","$apply","v","val","$","$setValidity","directive","ngPrint","element","elemToPrint","document","getElementById","printElementId","printElement","beforePrint","afterPrint","printSection","innerHTML","window","matchMedia","mediaQueryList","addListener","mql","matches","onbeforeprint","onafterprint","domClone","cloneNode","appendChild","print","createElement","body","errSrc","ngSrc","$set","bind","remove","src","ngConfirmClick","priority","e","confirm","stopImmediatePropagation","preventDefault","subtree","appRun","$rootScope","APP","$on","event","toState","description","LocationConfig","html5Mode","$httpProvider","defaults","withCredentials","useXDomain","headers","common","SettingsController","SettingsService","SettingsModals","ChangePassword","go","ref","ChangePasswordController","$uibModalInstance","User","toaster","Save","prototype$updateAttributes","getCurrentId","password","Password","user","pop","close","getModals","size","factory","FilesAddController","FileUploader","Upload","uploader","onErrorItem","status","error","ContactsModals","ContactsTopMenuController","AddCompany","AddPerson","AddEvent","ExportImport","ContactsOverviewController","_getAccessed","loading_accessed","limit","_companies","accessed","ContactsContactController","ContactsAddPersonController","loadCompanies","Companies","ContactsAddCompanyController","create","_company","AuthLoginController","LoginMessages","_signMessage","toUpperCase","SignIn","Alert","login","copy","credentials","rejection","code","isAuthenticated","","getCurrent","_user","username","menu-contacts@app","libs","href","$resource","GetSettings","Service","chain","rows","map","value","sortBy","DrewAt","reverse","GetSetting","SaveSetting","Setting","Type","save","DeleteSetting","_deleted","DeletedAt","Date","DashboardController","news","logout","localStorage","clear","AuthInterceptor","$injector","$cookies","responseError","AuthInterceptorConfig","interceptors","SESSIONEND","Message","Details","SIGNOUT","REGISTERED","AUTHERROR","UNAVAILABLE","LOGIN_FAILED","evt","redirectTo","version","repository","author","email","client"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', [\r\n      'leaflet-directive',\r\n    ]);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        template:\"<ui-view/>\",\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.map\",\r\n      config: {\r\n        title: \"map\",\r\n        url: \"/map\",\r\n        templateUrl: 'src/contacts/company/map/view.html',\r\n        controller: 'ContactsCompanyMapController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile\",\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/contacts/company/_common/_profile.html',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts', [\r\n      'leaflet-directive',\r\n    ]);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts.company',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/company/:id\",\r\n        template:\"<ui-view/>\",\r\n        controller: 'ContactsCompanyController',\r\n      }\r\n    }, {\r\n      state: \"app.contacts.company.map\",\r\n      config: {\r\n        title: \"map\",\r\n        url: \"/map\",\r\n        templateUrl: 'src/contacts/company/map/view.html',\r\n        controller: 'ContactsCompanyMapController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile\",\r\n      config: {\r\n        abstract: true,\r\n        templateUrl: 'src/contacts/company/_common/_profile.html',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.overview\",\r\n      config: {\r\n        title: \"overview\",\r\n        url: \"/overview\",\r\n        templateUrl: 'src/contacts/company/overview/view.html',\r\n        controller: 'ContactsCompanyOverviewController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.persons\",\r\n      config: {\r\n        title: \"persons\",\r\n        url: \"/persons\",\r\n        templateUrl: 'src/contacts/company/persons/view.html',\r\n        controller: 'ContactsCompanyPersonsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.events\",\r\n      config: {\r\n        title: \"events\",\r\n        url: \"/events\",\r\n        templateUrl: 'src/contacts/company/events/view.html',\r\n        controller: 'ContactsCompanyEventsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.transactions\",\r\n      config: {\r\n        title: \"transactions\",\r\n        url: \"/transactions\",\r\n        templateUrl: 'src/contacts/company/transactions/view.html',\r\n        controller: 'ContactsCompanyTransactionsController',\r\n      },\r\n    }, {\r\n      state: \"app.contacts.company.profile.files\",\r\n      config: {\r\n        title: \"files\",\r\n        url: \"/files\",\r\n        templateUrl: 'src/contacts/company/files/view.html',\r\n        controller: 'ContactsCompanyFilesController',\r\n      },\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyController.$inject = [\"$stateParams\", \"Company\", \"CompanyTabs\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company, CompanyTabs) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = CompanyTabs\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .constant(\"CompanyTabs\", [{\r\n      heading: {\r\n        icon: \"bars\",\r\n        title: 'Overview'\r\n      },\r\n      route: 'app.contacts.company.profile.overview',\r\n    }, {\r\n      heading: {\r\n        icon: \"calendar\",\r\n        class: \"hidden-xs\",\r\n        title: 'Events'\r\n      },\r\n      route: 'app.contacts.company.profile.events',\r\n    }, {\r\n      heading: {\r\n        icon: \"money\",\r\n        class: \"hidden-xs\",\r\n        title: 'Transactions'\r\n      },\r\n      route: 'app.contacts.company.profile.transactions',\r\n    }, {\r\n      heading: {\r\n        icon: \"files-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Files'\r\n      },\r\n      route: 'app.contacts.company.profile.files',\r\n    }]);\r\n\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyFilesController.$inject = [\"$stateParams\", \"Container\", \"FilesModals\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\r\n    var vm = this;\r\n\r\n    vm.container = $stateParams.id;\r\n    vm.UploadFiles = UploadFiles;\r\n    // vm.Download = Download;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadFiles();\r\n    }\r\n\r\n    function UploadFiles() {\r\n      FilesModals\r\n        .AddFiles({\r\n          Label: \"Company\",\r\n          Container: vm.container\r\n        })\r\n        .then(function() {\r\n          _loadFiles();\r\n        });\r\n    }\r\n\r\n    //\r\n    // function Download(file) {\r\n    //   Container\r\n    //     .download({\r\n    //       container: vm.container,\r\n    //       file: file,\r\n    //     })\r\n    //     .$promise\r\n    //     .then(function(data) {\r\n    //       console.log(data);\r\n    //     });\r\n    // }\r\n\r\n    function _loadFiles() {\r\n      vm.loading = true;\r\n      return Container\r\n        .getFiles({\r\n          container: vm.container,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Files = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyTransactionsController.$inject = [\"$stateParams\", \"Transaction\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\r\n\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadTransactions()\r\n        .then(function() {\r\n          _reloadChart();\r\n        });\r\n    }\r\n\r\n    function _loadTransactions() {\r\n      vm.loading = true;\r\n      return Transaction\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function _reloadChart(groupby) {\r\n\r\n      vm.Chart = {\r\n        labels: [],\r\n        data: [\r\n          []\r\n        ],\r\n        options:{\r\n          bezierCurve : false,\r\n          datasetFill : false,\r\n        }\r\n      };\r\n\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.Chart.labels.push(keydate);\r\n        vm.Chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyPersonsController.$inject = [\"$stateParams\", \"Person\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController($stateParams,Person) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadPersons();\r\n    }\r\n\r\n    function _loadPersons() {\r\n      vm.loading = true;\r\n      return Person\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"fullname ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Persons = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyOverviewController.$inject = [\"$stateParams\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController($stateParams,Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadCompany();\r\n    }\r\n\r\n    function _loadCompany() {\r\n      vm.loading = true;\r\n      return Company\r\n        .findById({\r\n          id: $stateParams.id,\r\n          filter: {\r\n            include: [\"persons\"],\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Company = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyMapController.$inject = [\"$stateParams\", \"Company\", \"$timeout\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      vm.loading = true;\r\n\r\n      vm.center = {};\r\n      vm.markers = {};\r\n\r\n      Company.findById({\r\n          id: $stateParams.id,\r\n        })\r\n        .$promise\r\n        .then(function(company) {\r\n          vm.Company = company;\r\n\r\n          $timeout(function() {\r\n\r\n            vm.center = {\r\n              lat: parseFloat(company.location.lat),\r\n              lng: parseFloat(company.location.lon),\r\n              zoom: 14,\r\n            };\r\n            vm.markers = {\r\n              company: {\r\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\r\n                lat: parseFloat(company.location.lat),\r\n                lng: parseFloat(company.location.lon),\r\n                opacity: 0.8,\r\n                focus: true,\r\n              }\r\n            };\r\n\r\n            vm.loading = false;\r\n\r\n          }, 1000);\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsCompanyEventsController.$inject = [\"$stateParams\", \"Event\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  routerHelperProvider.$inject = [\"$locationProvider\", \"$stateProvider\", \"$urlRouterProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    modalHelper.$inject = [\"$uibModal\", \"$q\"];\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n  \r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (bytes === 0) return 'Empty';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"configHelperProvider\", \"$locationProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  LocationConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  SettingsController.$inject = [\"$state\", \"SettingsService\", \"SettingsModals\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n;(function() {\r\n  'use strict';\r\n\r\n  ChangePasswordController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"User\", \"toaster\"];\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .factory('FilesModals', FilesModals);\r\n\r\n  FilesModals.$inject = ['modalHelper'];\r\n\r\n  function FilesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddFiles\",\r\n        config: {\r\n          templateUrl: 'src/files/add/view.html',\r\n          controller: \"FilesAddController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  FilesAddController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"FileUploader\"];\r\n  angular\r\n    .module('app.files')\r\n    .controller(\"FilesAddController\", FilesAddController);\r\n\r\n  /* @ngInject */\r\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Label = ModalParams.Label;\r\n    vm.Container = ModalParams.Container;\r\n\r\n    vm.Upload = Upload;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n\r\n    function Upload() {}\r\n\r\n    var uploader = vm.uploader = new FileUploader({\r\n      vm: vm, // to automatically update the html. Default: $rootScope\r\n      url: '/api/containers/' + vm.Container + '/upload',\r\n      // formData: [{\r\n      //   key: 'value'\r\n      // }]\r\n    });\r\n\r\n    // ADDING FILTERS\r\n    // uploader.filters.push({\r\n    //   name: 'filterName',\r\n    //   fn: function(item, options) { // second user filter\r\n    //     console.info('filter2');\r\n    //     return true;\r\n    //   }\r\n    // });\r\n\r\n    // REGISTER HANDLERS\r\n    // --------------------\r\n    // uploader.onAfterAddingFile = function(item) {\r\n    //   console.info('After adding a file', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onAfterAddingAll = function(items) {\r\n    //   console.info('After adding all files', items);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\r\n    //   console.info('When adding a file failed', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onBeforeUploadItem = function(item) {\r\n    //   console.info('Before upload', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressItem = function(item, progress) {\r\n    //   console.info('Progress: ' + progress, item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressAll = function(progress) {\r\n    //   console.info('Total progress: ' + progress);\r\n    // };\r\n    // --------------------\r\n    // uploader.onSuccessItem = function(item, response, status, headers) {\r\n    //   console.info('Success', response, status, headers);\r\n    //   vm.$broadcast('uploadCompleted', item);\r\n    // };\r\n    // --------------------\r\n    uploader.onErrorItem = function(item, response, status, headers) {\r\n      item.error = response.error;\r\n      // console.info('Error', response, status, headers);\r\n    };\r\n    // // --------------------\r\n    // uploader.onCancelItem = function(item, response, status, headers) {\r\n    //   console.info('Cancel', response, status);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteItem = function(item, response, status, headers) {\r\n    //   console.info('Complete', response, status, headers);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteAll = function() {\r\n    //   console.info('Complete all');\r\n    // };\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/contacts\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.overview',\r\n      config: {\r\n        title: 'Contacts Overview',\r\n        url: \"/\",\r\n        templateUrl: 'src/contacts/overview/view.html',\r\n        controller: 'ContactsOverviewController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.person',\r\n      config: {\r\n        title: 'Person',\r\n        url: \"/person/:id\",\r\n        templateUrl: 'src/contacts/person/view.html',\r\n        controller: 'ContactsPersonController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .factory('ContactsModals', ContactsModals);\r\n\r\n  ContactsModals.$inject = ['modalHelper'];\r\n\r\n  function ContactsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddPerson\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addperson/view.html',\r\n          controller: \"ContactsAddPersonController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddCompany\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addcompany/view.html',\r\n          controller: \"ContactsAddCompanyController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddEvent\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addevent/view.html',\r\n          controller: \"ContactsAddEventController\",\r\n        }\r\n      }, {\r\n        modal: \"ExportImport\",\r\n        config: {\r\n          templateUrl: 'src/contacts/exportimport/view.html',\r\n          controller: \"ContactsExportImportController\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsTopMenuController.$inject = [\"$state\", \"ContactsModals\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n  /* @ngInject */\r\n  function ContactsTopMenuController($state, ContactsModals) {\r\n    var vm = this;\r\n\r\n    vm.AddCompany = AddCompany;\r\n    vm.AddPerson = AddPerson;\r\n    vm.AddEvent = AddEvent;\r\n    vm.ExportImport = ExportImport;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function AddCompany() {\r\n      ContactsModals\r\n        .AddCompany()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.company\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddPerson() {\r\n      ContactsModals\r\n        .AddPerson()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.person\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddEvent() {\r\n      ContactsModals\r\n        .AddEvent()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.events.event\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function ExportImport() {\r\n      ContactsModals\r\n        .ExportImport()\r\n        .then(function() {});\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsOverviewController.$inject = [\"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsOverviewController(Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _getAccessed();\r\n    }\r\n\r\n    function _getAccessed() {\r\n      vm.loading_accessed = true;\r\n      Company.find({\r\n          filter: {\r\n            limit: 10,\r\n            order: \"lastAccess DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(_companies) {\r\n          vm.accessed = _companies;\r\n        })\r\n        .finally(function() {\r\n          vm.loading_accessed = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsContactController\", ContactsContactController);\r\n\r\n  /* @ngInject */\r\n  function ContactsContactController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsAddPersonController.$inject = [\"$uibModalInstance\", \"ModalParams\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  ContactsAddCompanyController.$inject = [\"$uibModalInstance\", \"Company\"];\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($uibModalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $uibModalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  AuthLoginController.$inject = [\"$stateParams\", \"$state\", \"LoginMessages\", \"User\"];\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates(), \"/\");\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        resolve: {\r\n          isAuthenticated: function($state, User, $timeout) {\r\n            $timeout(function() {\r\n              if (!User.isAuthenticated()) {\r\n                $state.go(\"auth.login\");\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n        },\r\n        views: {\r\n          \"\": {\r\n            templateUrl: 'src/_common/views/layout.html',\r\n            controller: function(User) {\r\n              var vm = this;\r\n\r\n              User\r\n                .getCurrent()\r\n                .$promise\r\n                .then(function(_user) {\r\n                  vm.username = _user.username;\r\n                });\r\n\r\n            },\r\n          },\r\n          \"menu-contacts@app\": {\r\n            templateUrl: 'src/contacts/topmenu/view.html',\r\n            controller: \"ContactsTopMenuController\",\r\n          },\r\n          // \"menu-contacts@app\": {\r\n          //   templateUrl: 'src/contacts/topmenu/view.html',\r\n          //   controller: \"ContactsTopMenuController\",\r\n          // },\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  SettingsService.$inject = [\"$resource\"];\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"routerHelper\"];\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  RoutesConfig.$inject = [\"configHelper\", \"routerHelper\"];\r\n  angular\r\n    .module('app.dashboard')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.dashboard',\r\n      config: {\r\n        title: 'Dashboard',\r\n        url: \"/\",\r\n        templateUrl: 'src/dashboard/view.html',\r\n        controller: 'DashboardController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  AuthInterceptor.$inject = [\"$q\", \"$injector\", \"$cookies\"];\r\n  AuthInterceptorConfig.$inject = [\"$httpProvider\"];\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n;(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n;/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  appRun.$inject = [\"$rootScope\", \"$state\", \"$stateParams\"];\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n;(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyController\", ContactsCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyController($stateParams, Company, CompanyTabs) {\r\n    var vm = this;\r\n\r\n    vm.Tabs = CompanyTabs\r\n    vm.Print = function() {\r\n      var docDefinition = {\r\n        content: 'ελλάδα Ά an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMakeThis is an sample PDF printed with pdfMake'\r\n      };\r\n      // or become pretty complex (having multi-level tables, images, lists, paragraphs, margins, styles etc...).\r\n      //\r\n      // As soon as you have the document-definition-object, you're ready to create and open/print/download the PDF:\r\n\r\n      // open the PDF in a new window\r\n      pdfMake.createPdf(docDefinition).open();\r\n\r\n      // print the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).print();\r\n\r\n      // download the PDF (temporarily Chrome-only)\r\n      // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\r\n    }\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.Company = Company.findById({\r\n        id: $stateParams.id,\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .constant(\"CompanyTabs\", [{\r\n      heading: {\r\n        icon: \"bars\",\r\n        title: 'Overview'\r\n      },\r\n      route: 'app.contacts.company.profile.overview',\r\n    }, {\r\n      heading: {\r\n        icon: \"calendar\",\r\n        class: \"hidden-xs\",\r\n        title: 'Events'\r\n      },\r\n      route: 'app.contacts.company.profile.events',\r\n    }, {\r\n      heading: {\r\n        icon: \"money\",\r\n        class: \"hidden-xs\",\r\n        title: 'Transactions'\r\n      },\r\n      route: 'app.contacts.company.profile.transactions',\r\n    }, {\r\n      heading: {\r\n        icon: \"files-o\",\r\n        class: \"hidden-xs\",\r\n        title: 'Files'\r\n      },\r\n      route: 'app.contacts.company.profile.files',\r\n    }]);\r\n\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyFilesController\", ContactsCompanyFilesController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyFilesController($stateParams, Container, FilesModals) {\r\n    var vm = this;\r\n\r\n    vm.container = $stateParams.id;\r\n    vm.UploadFiles = UploadFiles;\r\n    // vm.Download = Download;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadFiles();\r\n    }\r\n\r\n    function UploadFiles() {\r\n      FilesModals\r\n        .AddFiles({\r\n          Label: \"Company\",\r\n          Container: vm.container\r\n        })\r\n        .then(function() {\r\n          _loadFiles();\r\n        });\r\n    }\r\n\r\n    //\r\n    // function Download(file) {\r\n    //   Container\r\n    //     .download({\r\n    //       container: vm.container,\r\n    //       file: file,\r\n    //     })\r\n    //     .$promise\r\n    //     .then(function(data) {\r\n    //       console.log(data);\r\n    //     });\r\n    // }\r\n\r\n    function _loadFiles() {\r\n      vm.loading = true;\r\n      return Container\r\n        .getFiles({\r\n          container: vm.container,\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Files = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyTransactionsController\", ContactsCompanyTransactionsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyTransactionsController($stateParams, Transaction) {\r\n\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadTransactions()\r\n        .then(function() {\r\n          _reloadChart();\r\n        });\r\n    }\r\n\r\n    function _loadTransactions() {\r\n      vm.loading = true;\r\n      return Transaction\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          var _total = 0;\r\n          _.each(data, function(transaction) {\r\n            _total += transaction.amount;\r\n            transaction.total = _total;\r\n          });\r\n          vm.Transactions = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n    function _reloadChart(groupby) {\r\n\r\n      vm.Chart = {\r\n        labels: [],\r\n        data: [\r\n          []\r\n        ],\r\n        options:{\r\n          bezierCurve : false,\r\n          datasetFill : false,\r\n        }\r\n      };\r\n\r\n      var grouped_transactions = _.groupBy(vm.Transactions, function(transaction) {\r\n        return moment(transaction.date).format(groupby || '[W]ww MM/YYYY');\r\n      });\r\n\r\n      _.each(grouped_transactions, function(transactions, keydate) {\r\n\r\n        var _date_total = _.reduce(transactions, function(total, transaction) {\r\n          return Math.round(transaction.amount + total);\r\n        }, 0);\r\n        vm.Chart.labels.push(keydate);\r\n        vm.Chart.data[0].push(_date_total);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyPersonsController\", ContactsCompanyPersonsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyPersonsController($stateParams,Person) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadPersons();\r\n    }\r\n\r\n    function _loadPersons() {\r\n      vm.loading = true;\r\n      return Person\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"fullname ASC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Persons = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyOverviewController\", ContactsCompanyOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyOverviewController($stateParams,Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadCompany();\r\n    }\r\n\r\n    function _loadCompany() {\r\n      vm.loading = true;\r\n      return Company\r\n        .findById({\r\n          id: $stateParams.id,\r\n          filter: {\r\n            include: [\"persons\"],\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Company = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyMapController\", ContactsCompanyMapController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyMapController($stateParams, Company, $timeout) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      vm.loading = true;\r\n\r\n      vm.center = {};\r\n      vm.markers = {};\r\n\r\n      Company.findById({\r\n          id: $stateParams.id,\r\n        })\r\n        .$promise\r\n        .then(function(company) {\r\n          vm.Company = company;\r\n\r\n          $timeout(function() {\r\n\r\n            vm.center = {\r\n              lat: parseFloat(company.location.lat),\r\n              lng: parseFloat(company.location.lon),\r\n              zoom: 14,\r\n            };\r\n            vm.markers = {\r\n              company: {\r\n                message: company.name + \"<br/><small>\" + vm.Company.location.street + \"</small>\",\r\n                lat: parseFloat(company.location.lat),\r\n                lng: parseFloat(company.location.lon),\r\n                opacity: 0.8,\r\n                focus: true,\r\n              }\r\n            };\r\n\r\n            vm.loading = false;\r\n\r\n          }, 1000);\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsCompanyEventsController\", ContactsCompanyEventsController);\r\n\r\n  /* @ngInject */\r\n  function ContactsCompanyEventsController($stateParams, Event) {\r\n    var vm = this;\r\n\r\n    vm.reload = reload;\r\n\r\n    vm.params = {\r\n      range: \"WEEK\",\r\n    };\r\n\r\n    var _ranges = {\r\n      \"WEEK\": {\r\n        from: moment().subtract(7, \"days\"),\r\n        to: moment().add(7, \"days\"),\r\n      },\r\n      \"HALFMONTH\": {\r\n        from: moment().subtract(15, \"days\"),\r\n        to: moment().add(15, \"days\"),\r\n      },\r\n      \"MONTH\": {\r\n        from: moment().subtract(1, \"month\"),\r\n        to: moment().add(1, \"month\"),\r\n      }\r\n    };\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _loadEvents();\r\n    }\r\n\r\n    function reload() {\r\n      activate();\r\n    }\r\n\r\n    function _loadEvents() {\r\n      vm.loading = true;\r\n      return Event\r\n        .find({\r\n          filter: {\r\n            where: {\r\n              date: {\r\n                gt: _ranges[vm.params.range].from,\r\n                lt: _ranges[vm.params.range].to,\r\n              },\r\n              companyId: $stateParams.id,\r\n            },\r\n            order: \"date DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(data) {\r\n          vm.Events = data;\r\n        })\r\n        .finally(function() {\r\n          vm.loading = false;\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('routerHelper', routerHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n    /* jshint validthis:true */\r\n    this.$get = RouterHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    RouterHelper.$inject = ['$state'];\r\n\r\n    function RouterHelper($state) {\r\n      var hasOtherwise = false;\r\n\r\n      var service = {\r\n        configureStates: configureStates,\r\n        getStates: getStates\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureStates(states, otherwisePath) {\r\n        states.forEach(function(state) {\r\n\r\n          var config = {\r\n            controllerAs: 'vm',\r\n          };\r\n\r\n          angular.extend(config, state.config);\r\n\r\n          if (config.views) {\r\n            _.each(config.views, function(item) {\r\n              item.controllerAs = 'vm';\r\n            });\r\n          }\r\n\r\n          $stateProvider.state(state.state, config);\r\n        });\r\n        if (otherwisePath && !hasOtherwise) {\r\n          hasOtherwise = true;\r\n          $urlRouterProvider.otherwise(otherwisePath);\r\n        }\r\n      }\r\n\r\n      function getStates() {\r\n        return $state.get();\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('modalHelper', modalHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function modalHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = modalHelper;\r\n\r\n    /* @ngInject */\r\n    function modalHelper($uibModal, $q) {\r\n\r\n      var service = {\r\n        configureModals: configureModals\r\n      };\r\n\r\n      return service;\r\n\r\n      function configureModals(modals) {\r\n        var _ret = {};\r\n        angular.forEach(modals, function(modal) {\r\n          _ret[modal.modal] = function(obj) {\r\n            var config = {\r\n              controllerAs: 'vm',\r\n              resolve: {\r\n                ModalParams: function() {\r\n                  return obj || {};\r\n                }\r\n              }\r\n            };\r\n            angular.extend(config, modal.config);\r\n\r\n            return $uibModal\r\n              .open(config)\r\n              .result\r\n              .then(ModalResultComplete)\r\n              .catch(ModalResultFailed);\r\n\r\n            function ModalResultComplete(response) {\r\n              return response;\r\n            }\r\n\r\n            function ModalResultFailed(reason) {\r\n              if (reason && reason !== \"backdrop click\") {\r\n                return $q.reject();\r\n              }\r\n            }\r\n          };\r\n        });\r\n        return _ret;\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .provider('configHelper', configHelperProvider);\r\n\r\n  /* @ngInject */\r\n  function configHelperProvider() {\r\n    /* jshint validthis:true */\r\n    this.$get = ConfigHelper;\r\n\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    ConfigHelper.$inject = [];\r\n\r\n    function ConfigHelper() {\r\n\r\n      var service = {\r\n        notifyConfig: notifyConfig\r\n      };\r\n\r\n      return service;\r\n\r\n      //function notifyConfig() {}\r\n      function notifyConfig(configName, message) {\r\n        message = message || {};\r\n        console.log(\"%c CONFIG - \" + configName + \" \", 'background: #9C27B0; color: #FFF', message);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('numberFixedLen', numberFixedLen)\r\n\r\n  /* @ngInject */\r\n  function numberFixedLen() {\r\n    return function(a, b) {\r\n      return (1e4 + a + \"\").slice(-b)\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('join', join)\r\n\r\n  /* @ngInject */\r\n  function join() {\r\n    return function(array, separator) {\r\n      if (!array) {\r\n        return '';\r\n      }\r\n      if (!separator) {\r\n        separator = ', ';\r\n      }\r\n      return array.join(separator);\r\n    };\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fromNow', fromNow)\r\n\r\n  /* @ngInject */\r\n  function fromNow() {\r\n    return function(date) {\r\n      return moment(date).fromNow();\r\n    }\r\n  }\r\n  \r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('fileicon', fileicon)\r\n\r\n  /* @ngInject */\r\n  function fileicon() {\r\n    var _icons = {\r\n      \"application/pdf\": \"fa-file-pdf-o\",\r\n      \"application/powerpoint\": \"fa-file-powerpoint-o\",\r\n      \"application/x-msword\": \"fa-file-word-o\",\r\n      \"application/x-msexcel\": \"fa-file-excel-o\",\r\n      \"application/x-mspowerpoint\": \"fa-file-powerpoint-o\",\r\n      \"audio/x-mpeg-3\": \"fa-file-audio-o\",\r\n      \"image/gif\": \"fa-file-image-o\",\r\n      \"image/png\": \"fa-file-image-o\",\r\n      \"image/tiff\": \"fa-file-image-o\",\r\n      \"image/jpeg\": \"fa-file-image-o\",\r\n      \"video/avi\": \"fa-file-video-o\",\r\n      \"video/mpeg\": \"fa-file-video-o\",\r\n      \"video/msvideo\": \"fa-file-video-o\",\r\n      \"video/quicktime\": \"fa-file-video-o\",\r\n      \"application/zip\": \"fa-file-zip-o\"\r\n    };\r\n    return function(a) {\r\n      return _icons[a] || \"fa-file-o\";\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .filter('bytes', bytes)\r\n\r\n  /* @ngInject */\r\n  function bytes() {\r\n    return function(bytes, precision) {\r\n      if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) return '-';\r\n      if (bytes === 0) return 'Empty';\r\n      if (typeof precision === 'undefined') precision = 1;\r\n      var units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'],\r\n        number = (Math.floor(Math.log(bytes) / Math.log(1024)));\r\n      return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + ' ' + units[number];\r\n    }\r\n  }\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('pwCheck', pwCheck)\r\n\r\n  /* @ngInject */\r\n  function pwCheck() {\r\n    return {\r\n      require: 'ngModel',\r\n      restrict: 'A',\r\n      link: function(scope, elem, attrs, ctrl) {\r\n        var firstPassword = '#' + attrs.pwCheck;\r\n        elem.add(firstPassword).on('keyup', function() {\r\n          scope.$apply(function() {\r\n            var v = elem.val() === $(firstPassword).val();\r\n            ctrl.$setValidity('pwmatch', v);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngPrint', ngPrint)\r\n\r\n  /* @ngInject */\r\n  function ngPrint() {\r\n    var printSection = document.getElementById('printSection');\r\n    // if there is no printing section, create one\r\n    if (!printSection) {\r\n      printSection = document.createElement('div');\r\n      printSection.id = 'printSection';\r\n      document.body.appendChild(printSection);\r\n    }\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      element.on('click', function() {\r\n        var elemToPrint = document.getElementById(attrs.printElementId);\r\n        if (elemToPrint) {\r\n          printElement(elemToPrint);\r\n        }\r\n      });\r\n\r\n      var beforePrint = function() {\r\n        console.log('Functionality to run before printing.');\r\n      };\r\n      var afterPrint = function() {\r\n        console.log('Functionality to run after printing');\r\n        printSection.innerHTML = '';\r\n      };\r\n\r\n      if (window.matchMedia) {\r\n        var mediaQueryList = window.matchMedia('print');\r\n        mediaQueryList.addListener(function(mql) {\r\n          if (mql.matches) {\r\n            beforePrint();\r\n          } else {\r\n            afterPrint();\r\n          }\r\n        });\r\n      }\r\n\r\n      window.onbeforeprint = beforePrint;\r\n      window.onafterprint = afterPrint;\r\n\r\n    }\r\n\r\n    function printElement(elem) {\r\n      // clones the element you want to print\r\n      var domClone = elem.cloneNode(true);\r\n      printSection.appendChild(domClone);\r\n      window.print();\r\n    }\r\n    return {\r\n      link: link,\r\n      restrict: 'A'\r\n    };\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('errSrc', errSrc)\r\n\r\n  /* @ngInject */\r\n  function errSrc() {\r\n    return {\r\n      link: function(scope, element, attrs) {\r\n        if (!attrs.ngSrc) {\r\n          attrs.$set('src', attrs.errSrc);\r\n        }\r\n\r\n        element.bind('error', function() {\r\n\r\n          if (attrs.errSrc == \"REMOVE\") {\r\n            element.remove();\r\n            return;\r\n          }\r\n          if (attrs.src != attrs.errSrc) {\r\n            attrs.$set('src', attrs.errSrc);\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .directive('ngConfirmClick', ngConfirmClick)\r\n\r\n  /* @ngInject */\r\n  function ngConfirmClick() {\r\n    return {\r\n      priority: -1,\r\n      restrict: 'A',\r\n      link: function(scope, element, attrs){\r\n        element.bind('click', function(e){\r\n          var message = attrs.ngConfirmClick;\r\n          if(message && !confirm(message)){\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .constant(\"topmenu\", [{\r\n      name: \"States\",\r\n      link: \"#\",\r\n      subtree: [{\r\n        name: \"state 1\",\r\n        link: \"state1\"\r\n      }, {\r\n        name: \"state 2\",\r\n        link: \"state2\"\r\n      }]\r\n    }])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular.module('app', [\r\n\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ngCookies',\r\n    'ui.bootstrap',\r\n    'ui.router',\r\n    'ui.router.tabs',\r\n    'ui.navbar',\r\n    'angularFileUpload',\r\n\r\n    'lbServices',\r\n\r\n    'app.auth',\r\n    'app.dashboard',\r\n    'app.contacts',\r\n    'app.files',\r\n    'app._common',\r\n  ]);\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n    $rootScope.APP = APP;\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState) {\r\n      if (toState.title) {\r\n        $rootScope.title = (toState.title) ? toState.title : APP.description;\r\n      } else {\r\n        $rootScope.title = null;\r\n      }\r\n\r\n      // if (toState.tool) {\r\n      //   $rootScope.tool = _.findWhere(TOOLS, {\r\n      //     alias: toState.tool\r\n      //   });\r\n      //   $rootScope.title = ' - ' + $rootScope.tool.title + \" v\" + $rootScope.tool.version;\r\n      // } else {\r\n      //   $rootScope.tool = null;\r\n      // }\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig(configHelperProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .config(LocationConfig);\r\n\r\n  /* @ngInject */\r\n  function LocationConfig($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.defaults.useXDomain = true;\r\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings', []);\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller('SettingsController', SettingsController);\r\n\r\n  /* @ngInject */\r\n  function SettingsController($state, SettingsService, SettingsModals) {\r\n    var vm = this;\r\n\r\n    vm.ChangePassword = ChangePassword;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function ChangePassword() {\r\n      SettingsModals\r\n        .ChangePassword()\r\n        .then(function() {\r\n          $state.go(\"auth.logout\", {\r\n            ref: \"SIGNOUT\"\r\n          });\r\n        });\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .controller(\"ChangePasswordController\", ChangePasswordController);\r\n\r\n  /* @ngInject */\r\n  function ChangePasswordController($uibModalInstance, ModalParams, User, toaster) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n    function Save() {\r\n      vm.loading = true;\r\n      User.prototype$updateAttributes({\r\n          id: User.getCurrentId(),\r\n          password: vm.Password\r\n        })\r\n        .$promise\r\n        .then(function(user) {\r\n          toaster.pop('success', \"Password Changed\");\r\n          vm.loading = false;\r\n          $uibModalInstance.close();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .factory('FilesModals', FilesModals);\r\n\r\n  FilesModals.$inject = ['modalHelper'];\r\n\r\n  function FilesModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddFiles\",\r\n        config: {\r\n          templateUrl: 'src/files/add/view.html',\r\n          controller: \"FilesAddController\",\r\n          size:\"md\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.files')\r\n    .controller(\"FilesAddController\", FilesAddController);\r\n\r\n  /* @ngInject */\r\n  function FilesAddController($uibModalInstance, ModalParams, FileUploader) {\r\n    var vm = this;\r\n\r\n    vm.Label = ModalParams.Label;\r\n    vm.Container = ModalParams.Container;\r\n\r\n    vm.Upload = Upload;\r\n\r\n    activate();\r\n\r\n    function activate() {}\r\n\r\n\r\n    function Upload() {}\r\n\r\n    var uploader = vm.uploader = new FileUploader({\r\n      vm: vm, // to automatically update the html. Default: $rootScope\r\n      url: '/api/containers/' + vm.Container + '/upload',\r\n      // formData: [{\r\n      //   key: 'value'\r\n      // }]\r\n    });\r\n\r\n    // ADDING FILTERS\r\n    // uploader.filters.push({\r\n    //   name: 'filterName',\r\n    //   fn: function(item, options) { // second user filter\r\n    //     console.info('filter2');\r\n    //     return true;\r\n    //   }\r\n    // });\r\n\r\n    // REGISTER HANDLERS\r\n    // --------------------\r\n    // uploader.onAfterAddingFile = function(item) {\r\n    //   console.info('After adding a file', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onAfterAddingAll = function(items) {\r\n    //   console.info('After adding all files', items);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onWhenAddingFileFailed = function(item, filter, options) {\r\n    //   console.info('When adding a file failed', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onBeforeUploadItem = function(item) {\r\n    //   console.info('Before upload', item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressItem = function(item, progress) {\r\n    //   console.info('Progress: ' + progress, item);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onProgressAll = function(progress) {\r\n    //   console.info('Total progress: ' + progress);\r\n    // };\r\n    // --------------------\r\n    // uploader.onSuccessItem = function(item, response, status, headers) {\r\n    //   console.info('Success', response, status, headers);\r\n    //   vm.$broadcast('uploadCompleted', item);\r\n    // };\r\n    // --------------------\r\n    uploader.onErrorItem = function(item, response, status, headers) {\r\n      item.error = response.error;\r\n      // console.info('Error', response, status, headers);\r\n    };\r\n    // // --------------------\r\n    // uploader.onCancelItem = function(item, response, status, headers) {\r\n    //   console.info('Cancel', response, status);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteItem = function(item, response, status, headers) {\r\n    //   console.info('Complete', response, status, headers);\r\n    // };\r\n    // // --------------------\r\n    // uploader.onCompleteAll = function() {\r\n    //   console.info('Complete all');\r\n    // };\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.contacts',\r\n      config: {\r\n        abstract: true,\r\n        url: \"/contacts\",\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.overview',\r\n      config: {\r\n        title: 'Contacts Overview',\r\n        url: \"/\",\r\n        templateUrl: 'src/contacts/overview/view.html',\r\n        controller: 'ContactsOverviewController',\r\n      }\r\n    }, {\r\n      state: 'app.contacts.person',\r\n      config: {\r\n        title: 'Person',\r\n        url: \"/person/:id\",\r\n        templateUrl: 'src/contacts/person/view.html',\r\n        controller: 'ContactsPersonController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .factory('ContactsModals', ContactsModals);\r\n\r\n  ContactsModals.$inject = ['modalHelper'];\r\n\r\n  function ContactsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"AddPerson\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addperson/view.html',\r\n          controller: \"ContactsAddPersonController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddCompany\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addcompany/view.html',\r\n          controller: \"ContactsAddCompanyController\",\r\n          size:\"sm\",\r\n        }\r\n      }, {\r\n        modal: \"AddEvent\",\r\n        config: {\r\n          templateUrl: 'src/contacts/addevent/view.html',\r\n          controller: \"ContactsAddEventController\",\r\n        }\r\n      }, {\r\n        modal: \"ExportImport\",\r\n        config: {\r\n          templateUrl: 'src/contacts/exportimport/view.html',\r\n          controller: \"ContactsExportImportController\",\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsTopMenuController\", ContactsTopMenuController);\r\n\r\n  /* @ngInject */\r\n  function ContactsTopMenuController($state, ContactsModals) {\r\n    var vm = this;\r\n\r\n    vm.AddCompany = AddCompany;\r\n    vm.AddPerson = AddPerson;\r\n    vm.AddEvent = AddEvent;\r\n    vm.ExportImport = ExportImport;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n    }\r\n\r\n    function AddCompany() {\r\n      ContactsModals\r\n        .AddCompany()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.company\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddPerson() {\r\n      ContactsModals\r\n        .AddPerson()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.person\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function AddEvent() {\r\n      ContactsModals\r\n        .AddEvent()\r\n        .then(function(response) {\r\n          $state.go(\"app.contacts.events.event\", {\r\n            id: response.id\r\n          });\r\n        });\r\n    }\r\n\r\n    function ExportImport() {\r\n      ContactsModals\r\n        .ExportImport()\r\n        .then(function() {});\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsOverviewController\", ContactsOverviewController);\r\n\r\n  /* @ngInject */\r\n  function ContactsOverviewController(Company) {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      _getAccessed();\r\n    }\r\n\r\n    function _getAccessed() {\r\n      vm.loading_accessed = true;\r\n      Company.find({\r\n          filter: {\r\n            limit: 10,\r\n            order: \"lastAccess DESC\",\r\n          }\r\n        })\r\n        .$promise\r\n        .then(function(_companies) {\r\n          vm.accessed = _companies;\r\n        })\r\n        .finally(function() {\r\n          vm.loading_accessed = false;\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsContactController\", ContactsContactController);\r\n\r\n  /* @ngInject */\r\n  function ContactsContactController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddPersonController\", ContactsAddPersonController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddPersonController($uibModalInstance, ModalParams, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter:{\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {}\r\n\r\n\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.contacts')\r\n    .controller(\"ContactsAddCompanyController\", ContactsAddCompanyController);\r\n\r\n  /* @ngInject */\r\n  function ContactsAddCompanyController($uibModalInstance, Company) {\r\n    var vm = this;\r\n\r\n    vm.Save = Save;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      loadCompanies();\r\n    }\r\n\r\n    function loadCompanies() {\r\n      vm.Companies = Company.find({\r\n        filter: {\r\n          order: 'name ASC',\r\n        }\r\n      });\r\n    }\r\n\r\n    function Save() {\r\n      Company\r\n        .create(vm.Company)\r\n        .$promise\r\n        .then(function(_company) {\r\n          $uibModalInstance.close(_company);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth', [])\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .controller('AuthLoginController', AuthLoginController);\r\n\r\n  /* @ngInject */\r\n  function AuthLoginController($stateParams, $state, LoginMessages, User) {\r\n    var vm = this;\r\n\r\n    vm.loading = false;\r\n    vm.SignIn = SignIn;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n\r\n      if ($stateParams.ref) {\r\n        _signMessage($stateParams.ref.toUpperCase());\r\n      }\r\n    }\r\n\r\n    function SignIn() {\r\n\r\n      vm.loading = true;\r\n      vm.Alert = false;\r\n\r\n      User\r\n        .login(angular.copy(vm.credentials))\r\n        .$promise\r\n        .then(function(response) {\r\n          $state.go(\"app.dashboard\");\r\n        }, function(rejection) {\r\n          vm.credentials.password = null;\r\n          vm.loading = false;\r\n          _signMessage(rejection.data.error.code.toUpperCase());\r\n        });\r\n    }\r\n\r\n    function _signMessage(code) {\r\n      vm.Alert = LoginMessages[code];\r\n    }\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app._common')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates(), \"/\");\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app',\r\n      config: {\r\n        abstract: true,\r\n        resolve: {\r\n          isAuthenticated: function($state, User, $timeout) {\r\n            $timeout(function() {\r\n              if (!User.isAuthenticated()) {\r\n                $state.go(\"auth.login\");\r\n                return false;\r\n              }\r\n            });\r\n          }\r\n        },\r\n        views: {\r\n          \"\": {\r\n            templateUrl: 'src/_common/views/layout.html',\r\n            controller: function(User) {\r\n              var vm = this;\r\n\r\n              User\r\n                .getCurrent()\r\n                .$promise\r\n                .then(function(_user) {\r\n                  vm.username = _user.username;\r\n                });\r\n\r\n            },\r\n          },\r\n          \"menu-contacts@app\": {\r\n            templateUrl: 'src/contacts/topmenu/view.html',\r\n            controller: \"ContactsTopMenuController\",\r\n          },\r\n          // \"menu-contacts@app\": {\r\n          //   templateUrl: 'src/contacts/topmenu/view.html',\r\n          //   controller: \"ContactsTopMenuController\",\r\n          // },\r\n        }\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.static')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.about',\r\n      config: {\r\n        title: 'About',\r\n        url: \"/about\",\r\n        templateUrl: 'views/static/pages/about.html',\r\n        controller: function() {\r\n          var vm = this;\r\n          vm.libs = [{\r\n            name: \"AngularJS\",\r\n            href: \"https://angularjs.org/\"\r\n          }];\r\n        }\r\n      }\r\n    }, {\r\n      state: 'app.tos',\r\n      config: {\r\n        title: 'Terms of Use',\r\n        url: \"/tos\",\r\n        templateUrl: 'views/static/pages/tos.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsService', SettingsService);\r\n\r\n  /* @ngInject */\r\n  function SettingsService($resource) {\r\n\r\n    var service = {\r\n      GetSettings: GetSettings,\r\n      GetSetting: GetSetting,\r\n      SaveSetting: SaveSetting,\r\n      DeleteSetting: DeleteSetting,\r\n    }\r\n\r\n    return service;\r\n\r\n    function GetSettings(params) {\r\n      return $resource(APP.Service + \"_design/models/_view/Settings\")\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return _.chain(data.rows)\r\n            .map(function(item) {\r\n              return item.value;\r\n            })\r\n            .sortBy(function(item) {\r\n              return item.DrewAt || 0;\r\n            })\r\n            .reverse()\r\n            .value();\r\n        });\r\n    }\r\n\r\n    function GetSetting(id) {\r\n      return $resource(APP.Service + id)\r\n        .get()\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function SaveSetting(Setting) {\r\n      Setting.Type = \"Setting\";\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise\r\n        .then(function(data) {\r\n          return data;\r\n        });\r\n    }\r\n\r\n    function DeleteSetting(Setting) {\r\n\r\n      Setting._deleted = true;\r\n      Setting.DeletedAt = new Date();\r\n\r\n      return $resource(APP.Service)\r\n        .save(Setting)\r\n        .$promise;\r\n    }\r\n\r\n  }\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.settings',\r\n      config: {\r\n        url: '/settings',\r\n        controller: \"SettingsController\",\r\n        templateUrl: 'src/settings/overview/view.html',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.settings')\r\n    .factory('SettingsModals', SettingsModals);\r\n\r\n  SettingsModals.$inject = ['modalHelper'];\r\n\r\n  function SettingsModals(modalHelper) {\r\n    return modalHelper.configureModals(getModals());\r\n\r\n    function getModals() {\r\n      return [{\r\n        modal: \"ChangePassword\",\r\n        config: {\r\n          templateUrl: 'src/settings/changepassword/view.html',\r\n          controller: \"ChangePasswordController\",\r\n          size: \"sm\"\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard', []);\r\n})();\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .run(RoutesConfig);\r\n\r\n  /* @ngInject */\r\n  function RoutesConfig(configHelper, routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'app.dashboard',\r\n      config: {\r\n        title: 'Dashboard',\r\n        url: \"/\",\r\n        templateUrl: 'src/dashboard/view.html',\r\n        controller: 'DashboardController',\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.dashboard')\r\n    .controller(\"DashboardController\", DashboardController);\r\n\r\n  /* @ngInject */\r\n  function DashboardController() {\r\n    var vm = this;\r\n\r\n    activate();\r\n\r\n    function activate() {\r\n      vm.news = _.sortBy([{\r\n        \"date\": \"Mon Dec 14 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Tempor ut qui non mollit qui.\",\r\n        \"title\": \"ea enim veniam laboris ullamco\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Sun Dec 06 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Officia id nulla nulla id ipsum minim.\",\r\n        \"title\": \"cillum aute deserunt labore est\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Tue Dec 08 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ullamco ut voluptate aliqua laboris nostrud.\",\r\n        \"title\": \"velit occaecat adipisicing tempor sit\",\r\n        \"url\": \"http://google.com\"\r\n      }, {\r\n        \"date\": \"Fri Dec 11 2015 21:45:38 GMT+0000\",\r\n        \"content\": \"Ipsum nisi non adipisicing ex aute veniam.\",\r\n        \"title\": \"non do ipsum et cillum\",\r\n        \"url\": \"http://google.com\"\r\n      }], 'date');\r\n    }\r\n\r\n\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .run(appRun);\r\n\r\n  appRun.$inject = ['routerHelper'];\r\n\r\n  function appRun(routerHelper) {\r\n    routerHelper.configureStates(getStates());\r\n  }\r\n\r\n  function getStates() {\r\n    return [{\r\n      state: 'auth',\r\n      config: {\r\n        abstract: true,\r\n        template: '<ui-view/>',\r\n      }\r\n    }, {\r\n      state: 'auth.login',\r\n      config: {\r\n        url: '/login',\r\n        params: {\r\n          ref: null\r\n        },\r\n        templateUrl: \"src/auth/login/view.html\",\r\n        controller: \"AuthLoginController\",\r\n      }\r\n    }, {\r\n      state: 'auth.logout',\r\n      config: {\r\n        url: '/logout',\r\n        template: \"<ui-view/>\",\r\n        controller: function(User, $state) {\r\n          User\r\n            .logout()\r\n            .$promise\r\n            .then(function() {})\r\n            .finally(function() {\r\n              localStorage.clear();\r\n              $state.go(\"auth.login\", {\r\n                ref: \"SIGNOUT\"\r\n              });\r\n            })\r\n\r\n        },\r\n      }\r\n    }];\r\n  }\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .config(AuthInterceptorConfig)\r\n    .factory('AuthInterceptor', AuthInterceptor);\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptor($q, $injector, $cookies) {\r\n\r\n    return {\r\n      responseError: function(rejection) {\r\n        console.log(\"rejection\", rejection);\r\n        if (rejection.status === 401 && rejection.config.url != \"/api/Users/login\") {\r\n          localStorage.clear();\r\n          var $state = $injector.get('$state');\r\n          $state.go('auth.login', {\r\n            ref: \"SESSIONEND\"\r\n          });\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  /* @ngInject */\r\n  function AuthInterceptorConfig($httpProvider) {\r\n    $httpProvider.interceptors.push(\"AuthInterceptor\");\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app.auth')\r\n    .constant('LoginMessages', {\r\n      SESSIONEND: {\r\n        Type: \"danger\",\r\n        Message: \"You were signed out\",\r\n        Details: \"Probably your session was timed out\",\r\n      },\r\n      SIGNOUT: {\r\n        Type: \"success\",\r\n        Message: \"You were signed out\",\r\n        Details: \"You may login again using the form\",\r\n      },\r\n      REGISTERED: {\r\n        Type: \"success\",\r\n        Message: \"Your account is ready, you can login now\",\r\n        Details: false,\r\n      },\r\n      AUTHERROR: {\r\n        Type: \"danger\",\r\n        Message: \"Authentication Error\",\r\n        Details: null,\r\n      },\r\n      UNAVAILABLE: {\r\n        Type: \"danger\",\r\n        Message: \"Service is not available\",\r\n        Details: \"Please try again later. If the problem insist, contact your system administrator\",\r\n      },\r\n      LOGIN_FAILED: {\r\n        Type: \"danger\",\r\n        Message: \"Name or password is incorrect\",\r\n        Details: \"Please try again\",\r\n      },\r\n    });\r\n\r\n}());\r\n","/* jshint -W097, -W033 */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('app')\r\n    .run(appRun);\r\n\r\n  /* @ngInject */\r\n  function appRun($rootScope, $state, $stateParams) {\r\n\r\n    $rootScope.APP = APP;\r\n    $rootScope.$on('$stateChangeStart', function(evt, to, params) {\r\n\r\n      if (to.redirectTo) {\r\n        evt.preventDefault();\r\n        $state.go(to.redirectTo, params);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}());\r\n","(function() { window.APP={\"name\":\"Balance\",\"description\":\"An online business suite for managing simple operations of small companies.\",\"version\":\"0.1.0\",\"repository\":\"https://github.com/ChristosGeorgiou/balance.git\",\"author\":{\"name\":\"Christos Georgiou\",\"email\":\"xris.georgiou@gmail.com\",\"url\":\"http://christosgeorgiou.gr\"},\"client\":{\"name\":\"Demo Company\"}}; })()"],"sourceRoot":"/source/"}