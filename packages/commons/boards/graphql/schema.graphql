type Board {
  key: String
  name: String
  members: [BoardMembersItem!]
  created: Float
  avatar: String
}

input BoardIn {
  key: String
  name: String
  members: [BoardMembersItemIn!]
  created: Float
  avatar: String
}

type BoardMembersItem {
  _typesWithoutFieldsAreNotAllowed_: String
}

input BoardMembersItemIn {
  _typesWithoutFieldsAreNotAllowed_: String
}

type Message {
  timestamp: Float
  text: String
  data: MessageData
  sender: String
  board: String
  status: String
  type: String
}

type MessageData {
  _typesWithoutFieldsAreNotAllowed_: String
}

input MessageDataIn {
  _typesWithoutFieldsAreNotAllowed_: String
}

input MessageIn {
  timestamp: Float
  text: String
  data: MessageDataIn
  sender: String
  board: String
  status: String
  type: String
}

type Mutation {
  Board(input: BoardIn): String
  Message(input: MessageIn): String
}



